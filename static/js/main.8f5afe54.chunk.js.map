{"version":3,"sources":["Util.js","pages/Home.js","api/query.js","pages/Notice.js","ListView.js","pages/Search.js","pages/Reader.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","pages/UserSearch.js","pages/RentHistory.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","arguments","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","getUserState","text","state","normal","overDue","stopped","getBookState","available","checkedOut","notAvailable","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","Home","props","useEffect","console","log","doc","setCallback","initialize","id","dangerouslySetInnerHTML","__html","homeText","BOOK_QUERY","gql","RENT_QUERY","USERS_QUERY","USER_QUERY","HISTORY_QUERY","NOTICE_QUERY","CONTENT_QUERY","SERVER_QUERY","Notice","useState","searchResults","setSearchResults","displayedCodes","setDisplayedCodes","pageNum","setPageNum","selectedId","setSelectedId","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","useLazyQuery","loadSelected","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","className","date","colSpan","onClick","_id","title","notice","content","map","fontSize","sx","color","showCallback","ListView","itemList","setItemList","displayList","setDisplayList","list","initialized","Search","inputText","setInputText","useDebounce","searchQuery","selectedRef","useRef","bookList","setBookList","rentList","setRentList","useParams","updateDoc","rl","rented","rent","push","code","book_id","retDate","return_date","key","bl","books","book","name","num","author","claim","claim_num","totalName","series","category","publisher","publish","isOpen","findBooks","results","serverAvailable","btoa","url","serverInfo","localIp","port","obj","axios","get","response","return","resultString","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","resultObject","index","BARCODE","AUTHOR","TOTAL_NAME","CLAMENUM","PUBLISH","CLAIM","row","includes","entry","sort","a","b","sr","current","query","selectId","hidden","entryId","rowSpan","bookSearch","placeholder","searchBook","value","onChange","event","target","entries","Reader","State","LoggedOut","LoggingIn","LoggedIn","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","setState","history","setHistory","autoLogin","setAutoLogin","loadUser","userData","loadHistory","historyData","expireDate","setExpireDate","setTitle","logged","userInfo","getRent","adminMode","userSearch","checkOut","logIn","context","cookie","Date","setTime","getTime","days","toGMTString","compare","rawHist","bookReady","rentReady","split","s1","s2","hist","j","showEntries","rentDate","bookName","Fragment","to","showRented","noEntry","toUpperCase","toast","isActive","prop","checkLogIn","user","type","TYPE","SUCCESS","logInSucceed","document","ERROR","logInFail","render","toastId","update","info","idHolder","disabled","onInput","pwHolder","checked","cookieString","toggleAutoLogin","LoggingOut","CheckOut","bookText","setBookText","setUserData","scannedBook","setScannedBook","needConfirm","setNeedConfirm","notifyRequest","setNotifyRequest","barcode","setBarcode","interval","setInterval","ipAddr","portNum","then","scan","clearInterval","notify","RENTED","getElementById","dismiss","updateUser","JSON","stringify","logOut","imageCaptured","e","files","file","INFO","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","getBase64","img","method","mode","crossDomain","headers","withCredentials","credentials","image","succeededToOpen","INVALID_BOOK","bookId","USER_CODE","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","accept","capture","inputMode","pattern","bookHolder","confirmRent","ret","rentSucceed","NOT_AVAILABLE","confirmAction","confirm","cancel","Return","NOT_RENTED","confirmReturn","returnSucceed","userLoading","userListData","userError","userList","setUserList","users","level","setUser","getUser","showUsers","showUser","findUsers","toLowerCase","admin","RentHistory","a1","a2","userName","Doc","userReady","logCallback","ip","checkServerIp","callback","checkState","checkRent","globalIp","user_id","retEntry","rent_date","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","trim","join","decodeURIComponent","passwordTyped","matched","emailDb","encrypted_email","phoneDb","encrypted_phone","sign","numberString","isNaN","DropDown","dropdown","setDropdown","click","setClick","menu","classList","add","remove","home","checkOutStatus","Navbar","isMobile","maxWidth","style","width","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","serverLoading","serverError","serverData","loadBook","bookLoading","bookError","bookData","notifyInit","updateLog","process","APP_NAME","APP_VERSION","lang","navigator","languages","ts","kr","en","updateIpAddr","nothing","password","setRent","rents","setBook","setServerInfo","LOADING","setLogCallback","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","path","element","UserSearch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","options","Authorization","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.8f5afe54.chunk.js","sourcesContent":["export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\")\r\n        return text.normal;\r\n    else if (state === \"1\")\r\n        return text.overDue;\r\n    else if (state === \"2\")\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    if (state === \"0\")\r\n    {\r\n        return text.available;\r\n    }\r\n    else if (state === \"1\")\r\n    {\r\n        return text.checkedOut;\r\n    }\r\n    else if (state === \"3\")\r\n    {\r\n        return text.overDue;\r\n    }\r\n    else\r\n    {\r\n        return text.notAvailable;\r\n    }\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import React, { useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./Home.css\";\r\nimport { toastProp } from \"../Util\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n}\r\n\r\nexport default Home;\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        users (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div id=\"noticeContent\">\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"noticeList\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN, MAX_SEARCH_ENTRY, getBookState, toUtf8 } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp } from \"../Util\";\r\nimport { SEARCH_PER_SCREEN, MAX_SEARCH_ENTRY, getBookState, toUtf8 } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ListView from \"../ListView\";\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(inputText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setInputText(id);\r\n            }\r\n            else\r\n            {\r\n                setInputText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    const obj = {\"params\": {\"book\": btoa(toUtf8(text)), \"metch\":false}};\r\n                    console.log(obj);\r\n                    const response = await axios.get(url, obj);\r\n                    console.log(response)\r\n                    const books = response.data.return;\r\n                    let retDate = \"\";\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const entry = {};\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        if (state === 1 || state === 3)\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAMENUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n\r\n                    for (let i = 0 ; i < bookList.length ; i++) {\r\n                        const row = bookList[i];\r\n                        if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                        if ((row.name && row.name.toString().includes(text)) ||\r\n                            (row.code === text))\r\n                        {\r\n                            let resultString = `${row.name} ${row.claim_num}`;\r\n                            let rent = props.text.available;\r\n                            let retDate = \"\";\r\n                            let state = \"0\";\r\n                            for (const entry of rentList)\r\n                            {\r\n                                if (entry.code === row.code)\r\n                                {\r\n                                    state = entry.state;\r\n                                    if (state === \"1\" || state === \"3\")\r\n                                    {\r\n                                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n    //                        if (rentList.includes(row.code))\r\n    //                            rent = props.text.checkedOut;\r\n    //                        else\r\n    //                            rent = props.text.available;\r\n                            let resultObject = {\r\n                                index: i,\r\n                                text: resultString,\r\n                                name: row.name,\r\n                                code: row.code.toString(),\r\n                                rent: getBookState(props.text, state),\r\n                                retDate: retDate,\r\n                                author: row.author,\r\n                                totalName: row.totalName,\r\n                                claim_num: row.claim_num,\r\n                                publish: row.publish,\r\n                                claim: row.claim\r\n                            };\r\n                            results.push(resultObject);\r\n                        }\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findBooks(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, bookList, rentList, props]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           bl.push({code: book._id, name: book.title, num: book.num, author: book.author, claim: book.claim,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(books.length);\r\n        setBookList(bl);\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\"> {result.text}</td>\r\n                        <td className=\"searchRent\"> {result.rent} </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr>\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName} <b>{result.name}</b> { result.claim_num} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.code} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim} </td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results)\r\n    {\r\n        return results.map((result) => showEntry(result))\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\">\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n            </div>\r\n            <ListView list={searchResults} showCallback={(entries) => { return showEntries(entries); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useRef, useState } from \"react\";\nimport \"./Reader.css\";\nimport axios from \"axios\";\n\n\nfunction Reader(props) {\n    const videoRef = useRef();\n    const canvasRef = useRef();\n    const overlayRef = useRef();\n    const [result, setResult] = useState();\n    const [resolution, setResolution] = useState([0,0]);\n\n    useEffect(\n        function () {\n            if (result) {\n                props.onScan(result.data);\n                setResult(null);\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [result]\n    );\n\n    useEffect(function () {\n        let isMounted = true;\n        console.log(\"Set interval\");\n        const inter = setInterval(() => {\n            if (!isMounted)\n            {\n                console.log(\"Unmounted reader call\");\n                return;\n            }\n            requestAnimationFrame(tick);\n        }, 2000);\n        return () => {\n            console.log(\"Clear interval for reader\");\n            isMounted = false;\n            clearInterval(inter);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(\n        function () {\n            navigator.mediaDevices\n                .getUserMedia({ video: { facingMode: \"environment\", zoom: true, width:480, height:640 } })\n                .then(function (stream) {\n                    console.log(stream);\n                    console.log(\"TEST\");\n                    try {\n                        videoRef.current.srcObject = stream;\n                        videoRef.current.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\n                        videoRef.current.play();\n                        /*\n                        const [track] = stream.getVideoTracks();\n                        const capabilities = track.getCapabilities();\n                        const settings = track.getSettings();\n                        const imageWidth  = videoRef.current.videoWidth;\n                        const imageHeight = videoRef.current.videoHeight;\n                        setResolution([imageWidth, imageHeight]);\n                        console.log(\"Set resulution \" + imageWidth.toString() + \"x\" + imageHeight.toString());\n\n                        if (capabilities.focusDistance)\n                        {\n                            const text = document.getElementsById(\"text\").innerHtml(\"Change focus\");\n                            track.applyConstraints({advanced: [ {focusMode: \"auto\", focusDistance: capabilities.focusDistance.min}]});\n                        }\n                        else\n                        {\n                            const text = document.getElementsById(\"text\").innerHtml(\"Cannot change focus\");\n                        }\n                        */\n                    } catch {}\n                });\n            console.log(window.innerWidth.toString() + \"x\" + window.innerHeight.toString());\n        },\n        [videoRef]\n    );\n    useEffect(\n        function () {\n            var ctx = overlayRef.current.getContext(\"2d\");\n            const imageWidth  = videoRef.current.videoWidth;\n            const imageHeight = videoRef.current.videoHeight;\n            console.log(\"Resolution changed \" + imageWidth.toString() + \"x\" + imageHeight.toString());\n //           drawLine(ctx, { x: 20, y: 20, x1: 20, y1: 100 });\n\n            drawLine(ctx, { x: 0, y: imageHeight/2-75, x1: imageWidth, y1: imageHeight/2-75 }, { color: 'red', width:5 });\n            drawLine(ctx, { x: 0, y: imageHeight/2+75, x1: imageWidth, y1: imageHeight/2+75 }, { color: 'red', width:5 });\n            drawLine(ctx, { x: 0, y: imageHeight/2-75, x1: 0, y1: imageHeight/2+75 }, { color: 'red', width:5 });\n            drawLine(ctx, { x: imageWidth, y: imageHeight-75, x1: imageWidth, y1: imageHeight/2+75 }, { color: 'red', width:5 });\n\n//            drawLine(ctx, { x: 300, y: 250, x1: 260, y1: 70 }, { color: 'green', width: 5 });\n\n//            drawLine(ctx, { x: 70, y: 240, x1: 160, y1: 120 }, { color: 'blue' });\n\n            drawLine(ctx, { x: 0, y: 3, x1: imageWidth, y1: 3 }, { color: 'green', width: 5 });\n            drawLine(ctx, { x: 3, y: 0, x1: 3, y1: imageHeight }, { color: 'green', width: 5 });\n            drawLine(ctx, { x: 0, y: imageHeight-3, x1: imageWidth, y1: imageHeight-3 }, { color: 'green', width: 5 });\n            drawLine(ctx, { x: imageWidth-3, y: 0, x1: imageWidth-3, y1: imageHeight}, { color: 'green', width: 5 });\n\n        }, [resolution]\n    );\n    const drawLine = (context, info, style = {}) => {\n        const { x, y, x1, y1 } = info;\n        const { color = 'black', width = 1 } = style;\n\n        context.beginPath();\n        context.moveTo(x, y);\n        context.lineTo(x1, y1);\n        context.strokeStyle = color;\n        context.lineWidth = width;\n        context.stroke();\n    }\n\n/*\n    var sendBase64ToServer = function(base64) {\n        var httpPost = new XMLHttpRequest(),\n        path = \"http://127.0.0.1:8080/uploadImage\",\n        data = JSON.stringify({image: base64});\n        httpPost.onreadystatechange = function(err) {\n            if (httpPost.readyState == 4 && httpPost.status == 200){\n                console.log(httpPost.responseText);\n            } else {\n                console.log(err);\n            }\n        };\n        // Set the content type of the request to json since that's what's being sent\n        httpPost.setHeader('Content-Type', 'application/json');\n        httpPost.open(\"POST\", path, true);\n        httpPost.send(data);\n    };\n    var uploadImage = function(data, type){\n        sendBase64ToServer(data);\n    };\n*/\n    function capture() {\n        console.log(\"Capture\");\n        var canvas = canvasRef.current.getContext(\"2d\");\n        const imageWidth  = videoRef.current.videoWidth;\n        const imageHeight = videoRef.current.videoHeight;\n        canvasRef.current.width = imageWidth;\n        canvasRef.current.height = imageHeight;\n        canvas.drawImage(\n            videoRef.current,\n            0,\n            0,\n            canvasRef.current.width,\n            canvasRef.current.height\n        );\n        overlayRef.current.height = videoRef.current.videoHeight;\n        overlayRef.current.width = videoRef.current.videoWidth;\n        setResolution([imageWidth, imageHeight]);\n\n        const img = canvasRef.current.toDataURL('image/png');\n//        console.log(img);\n        axios({\n            method: \"post\",\n            mode: 'no-cors',\n            crossDomain: 'true',\n            url: \"https://10.0.0.68:8080/uploadImage\",\n//            url: \"https://localhost:8080/uploadImage\",\n            headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\n            },\n            withCredentials: false,\n            credentials: 'same-origin',\n            data: {\n                image: img\n            }\n        });\n    }\n\n    function tick() {\n\n\n//            console.log('tick');\n\n//            var videoElement = document.getElementById(\"video\")\n            console.log(videoRef.current.videoHeight.toString() + \"x\" + videoRef.current.videoWidth);\n            const imageWidth  = videoRef.current.videoWidth;\n            const imageHeight = videoRef.current.videoHeight;\n            canvasRef.current.height = imageWidth;\n            canvasRef.current.width = imageHeight;\n //          console.log(\"Resolution changed \" + imageWidth.toString() + \"x\" + imageHeight.toString());\n\n/*\n            if (image) {\n                const str = image.toDataURL();\n                console.log(str);\n            }\n*/\n//            uploadImage(image, \"image/png\");\n/*\n            axios({\n                method: \"post\",\n                mode: 'no-cors',\n                url: \"https://10.0.0.68:8080/uploadImage\",\n                headers: {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Content-Type\": \"application/json\",\n                    \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\n                },\n                withCredentials: true,\n                credentials: 'same-origin'\n            });\n*/\n//            console.log(image);\n\n            var ctx = canvasRef.current.getContext(\"2d\");\n            ctx.drawImage(\n                videoRef.current,\n                0,\n                0,\n                canvasRef.current.width,\n                canvasRef.current.height\n            );\n            /*\n            const str = canvasRef.toDataURL();\n            console.log(str);\n            var imageData = ctx.getImageData(\n                0,\n                0,\n                canvasRef.current.width,\n                canvasRef.current.height\n            );\n            BarcodeReader({\n                image: imageData,\n//                barcode: 'code-2of5',\n                barcode: 'coda-128',\n                options: {}\n            }).then(code => {\n                console.log('['+code+']');\n            }).catch(err => {\n                console.log(err);\n            })\n            */\n            /*\n            var code = jsQR(imageData.data, imageData.width, imageData.height, {\n                inversionAttempts: \"dontInvert\",\n            });\n            if (code) {\n                console.log(code.data);\n                setResult({ data: code.data, time: new Date() });\n            }\n            */\n            return;\n    }\n/*\n        <div>\n                <canvas id=\"canvas\" className=\"canvas\" ref={canvasRef} width={640} height={480}></canvas>\n                <Webcam id=\"webcam\" ref={webcamRef} screenshotFormat=\"image/png\" width={640} height={480}\n                    videoConstraints={videoConstraints}\n                />\n            <div>Test 2</div>\n        </div>\n*/\n\n    return (\n        <div>\n            <canvas id=\"canvas\" className=\"canvas\" ref={canvasRef} hidden/>\n            <video ref={videoRef}/>\n            <canvas id=\"overlay\" className=\"overlay\" ref={overlayRef}/>\n            <div id=\"text\">Test 0</div>\n            <button id=\"button\" type=\"button\" onClick={() => capture()}> Capture </button>\n        </div>\n    );\n}\n\nexport default Reader;\n","import React, { useEffect, useState } from \"react\";\r\nimport Reader from \"./Reader\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            compare();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        compare();\r\n    }\r\n\r\n    const compare = () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user);\r\n\r\n            setSearchResults(props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getBookState, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { Link } from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 50);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [userData, setUserData] = useState({});\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(book)\r\n                            setBarcode(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                setState(State.LoggedOut);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n                setBarcode(\"\")\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (state !== State.LoggedIn)\r\n                setBarcode(userText);\r\n        }, [userText]\r\n    );\r\n\r\n    const showBook = (book, index) => {\r\n        const id = book[\"BARCODE\"];\r\n        const state = getBookState(props.text, book[\"_STATE\"].toString());\r\n        const rentDate = book[\"_RENT\"];\r\n        const retDate = book[\"_RETURN\"];\r\n        const bookName = book[\"BOOKNAME\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td className=\"bookState\">{state}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const updateUser = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const obj = {\"params\": {\"user\": userText, \"data\":\"nothing\"}};\r\n        console.log(obj);\r\n        const response = await axios.get(url, btoa(JSON.stringify(obj)));\r\n        const user = response.data.return;\r\n        setUserData(user);\r\n        console.log(user);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        console.log(\"LOGIN\");\r\n        console.log(userText);\r\n        if (userText.length === 0)\r\n            return;\r\n        setState(State.LoggingIn);\r\n        const id = userText.toUpperCase();\r\n        setUserId(id);\r\n        updateUser(id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Log Out\");\r\n        setUserData({});\r\n        setUserText(\"\");\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n        document.getElementById('barcodeScan').value= null;\r\n    }\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            console.log(url)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(response);\r\n                        console.log(book);\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            console.log(\"Failed\");\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR});\r\n                            setScannedBook({});\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Barcode: \" + barcode);\r\n            if (barcode.length == 0)\r\n                return;\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                setUserText(barcode);\r\n            }\r\n            else\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n        document.getElementById('barcodeScan').value= null;\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE,\r\n                user: userId\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return\r\n            console.log(\"Rent confirmed\");\r\n            console.log(ret)\r\n\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.rentSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n            updateUser(userId);\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        document.getElementById('barcodeScan').value= null;\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"barcodeScan\" hidden>\r\n                        <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                        <span>\r\n                        <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                        </span>\r\n                    </label>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\">\r\n                        HK\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \": \" + scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.logOut} </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Reader from \"./Reader\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId, toUtf8 } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 50);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [title, setTitle] = useState(\"\");\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(barcode + \" -> \" + book)\r\n                            setBarcode(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        setInitialized(true);\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode]\r\n    );\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    const data = axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR})\r\n                            setScannedBook({})\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE == 1 || scannedBook._STATE == 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! \"text\" in notifyRequest)\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            const text = notifyRequest.text\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        const data = axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return;\r\n            console.log(ret);\r\n            if (ret == \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.returnSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\">\r\n                        HK\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\" + scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, loggingId, SEARCH_PER_SCREEN, MAX_SEARCH_ENTRY, getUserState } from \"../Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport {USER_QUERY, USERS_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [history, setHistory] = useState([]);\r\n    const {loading: userLoading, data: userListData, error: userError } = useQuery(USERS_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [userList, setUserList] = useState({});\r\n    const [title, setTitle] = useState(\"\");\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const [rented, setRented] = useState([]);\r\n    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                const stateStr = {\"0\": props.text.normal, \"1\": props.text.overDue, \"2\": props.text.stopped};\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id) => {\r\n        if (selectedRef.current === -1 || selectedRef.current !== id)\r\n        {\r\n            console.log(\"Select \" + id);\r\n            setSelectedId(id);\r\n            selectedRef.current = id;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    const showUser = (user, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div>\r\n                    <table><tbody>\r\n                        <tr key={key} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user.id) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (id) => {\r\n        const result = props.doc.getRent(id);\r\n        return (<>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findUsers(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n                setPageNum(0);\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, props]\r\n    );\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView list={searchResults} showCallback={(entries) => { return showUsers(entries); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Reader from \"./Reader\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId } from \"../Util\";\r\nimport { SEARCH_PER_SCREEN, MAX_SEARCH_ENTRY, getBookState, getUserState, toUtf8 } from \"../Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { Link } from 'react-router-dom'\r\nimport {USERS_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction RentHistory(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const {loading: userLoading, data: userListData, error: userError } = useQuery(USERS_QUERY);\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [displayList, setDisplayList] = useState([]);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                const stateStr = {\"0\": props.text.normal, \"1\": props.text.overDue, \"2\": props.text.stopped};\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        return a1.rentDate > a2.rentDate;\r\n    }\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        const rent = props.doc.getRent();\r\n        rent.sort(compare);\r\n        setRentList(rent);\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        var userName;\r\n        const key = index.toString();\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td colSpan=\"3\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = rentList.length;\r\n                console.log(\"Page num \" + pageNum.toString());\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayList(rentList.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayList(rentList);\r\n                setPageNum(0);\r\n            }\r\n        }, [rentList, pageNum]\r\n    );\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (rentList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n/*\r\n                <div>\r\n                    { showEntries(displayList) }\r\n                </div>\r\n                {rentList.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (rentList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n*/\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n/*\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <div>\r\n                    { showEntries(history) }\r\n                </div>\r\n*/\r\n\r\nexport default RentHistory;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.adminMode = false;\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\");\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        return\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            this.serverAvailable = true;\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            window.open(query);\r\n            axios.get(query).then( (response) => {\r\n                                console.log(\"Server connected\");\r\n                                console.log(response.data);\r\n                          });\r\n        }\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        this.serverInfo = serverInfo;\r\n        console.log(this.serverInfo.globalIp);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = book;\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\")\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n            console.log(userId);\r\n            console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n                this.user[userId][\"rent\"] += 1;\r\n            else\r\n                this.user[userId][\"rent\"] = 1;\r\n        }\r\n        console.log(this.user);\r\n    }\r\n\r\n    setAdminMode(mode) {\r\n        this.adminMode = mode;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\")\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    getRent(userId = undefined) {\r\n        let ret = [];\r\n        console.log(\"Check \" + userId);\r\n        if (!this.bookReady)\r\n            return ret;\r\n//        console.log(this.rent.length);\r\n        for (let i = 0 ; i < this.rent.length ; i++) {\r\n            const entry = this.rent[i];\r\n            if (userId !== undefined && entry.user_id !== userId)\r\n                continue;\r\n//            console.log(entry)\r\n            if (entry.state !== \"1\" && entry.state !== \"3\")\r\n                continue;\r\n//            console.log(entry);\r\n            const id = entry[\"book_id\"];\r\n            const book = this.book[id];\r\n//            console.log(book)\r\n            let retEntry = {}\r\n            retEntry[\"id\"] = book._id\r\n            retEntry[\"title\"] = book.title\r\n            retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n            retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n            retEntry[\"user\"] = entry.user_id;\r\n            ret.push(retEntry)\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n        console.log(this.cookie);\n    }\n\n    checkLogIn(userData, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (userData.user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = userData.user.encrypted_email;\n            const phoneDb = userData.user.encrypted_phone;\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \";\";\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (dropdown !== props.dropdown)\r\n            {\r\n                console.log(\"User clicked \" + props.doc.logged);\r\n                console.log(props.dropdown);\r\n                setClick(!click);\r\n                setDropdown(props.dropdown);\r\n            }\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!click)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n        }, [props.dropdown, dropdown, click]\r\n    );\r\n\r\n    const logOut = () =>\r\n    {\r\n        setClick(false);\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (\r\n            <div id='dropdown-menu' onClick={() => { setClick(!click)}} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\" onClick={() => setClick(false)}>\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                        {props.doc.admin &&\r\n                            <>\r\n                            <hr className=\"hline\"/>\r\n                            <Link className='menu-items' to=\"/userSearch\" onClick={() => setClick(false)}>\r\n                                {props.text.userSearch}\r\n                            </Link>\r\n                            <Link className='menu-items' to=\"/rentHistory\" onClick={() => setClick(false)}>\r\n                                {props.text.history}\r\n                            </Link>\r\n                            </>\r\n                        }\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items' onClick={() => logOut()}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar(props) {\r\n    const [dropdown, setDropdown] = useState(false)\r\n\r\n    const onClick = () => {\r\n        const maxWidth = document.getElementById(\"navbar\").style.maxWidth;\r\n        console.log(\"maxWidth\");\r\n        console.log(maxWidth);\r\n        console.log(document.getElementById(\"navbar\").style.width);\r\n        setDropdown(!dropdown);\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <div className='menu' onClick={onClick} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc} dropdown={dropdown}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\nimport Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY, SERVER_QUERY} from \"./api/query.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n            console.log(\"Login check \" + context.cookie.password);\r\n            console.log(userData);\r\n            if (context.cookie.password && context.checkLogIn(userData, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(userData.user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n                doc.setRent(rentData.rents)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.books)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n            console.log(serverLoading)\r\n            console.log(serverError)\r\n            if (serverData)\r\n            {\r\n                console.log(\"Server info available\")\r\n                logMsg = logMsg + \"<p>Server info available</p>\";\r\n                console.log(serverData.serverInfo)\r\n                doc.setServerInfo(serverData.serverInfo)\r\n\r\n                if (!doc.serverAvailable)\r\n                {\r\n                    console.log(\"Server is not available. Load books from cloud DB\");\r\n                    loadBook();\r\n                    const prop = toastProp;\r\n                    prop.type = toast.TYPE.LOADING;\r\n                    prop.autoClose = false;\r\n                    prop.toastId = loadingId;\r\n                    toast.loading(textString.loading, prop);\r\n                    doc.setLogCallback(updateLog);\r\n                }\r\n            }\r\n        }, [serverLoading, serverError, serverData]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}