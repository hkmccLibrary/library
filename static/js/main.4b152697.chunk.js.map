{"version":3,"sources":["Util.js","pages/Home.js","pages/Search.js","pages/CheckOut.js","Doc.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","arguments","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","loadingId","loggingId","Home","props","updateDoc","notify","console","log","prop","type","toast","TYPE","SUCCESS","render","text","succeededToOpen","toastId","info","useEffect","doc","isOpen","setCallback","initialize","id","dangerouslySetInnerHTML","__html","homeText","initialized","Search","useState","inputText","setInputText","useDebounce","searchQuery","searchResults","setSearchResults","displayedCodes","setDisplayedCodes","pageNum","setPageNum","selectedId","setSelectedId","bookList","setBookList","rentList","setRentList","useParams","loading","rl","rented","rent","push","code","book_id","retDate","return_date","state","key","bl","books","book","_id","name","title","num","author","claim","claim_num","totalName","series","category","publisher","publish","findBooks","results","row","toString","includes","resultString","available","entry","checkedOut","returnDate","overDue","notAvailable","resultObject","index","sort","a","b","sr","query","startIdx","count","Math","min","slice","selectId","searchTitle","placeholder","searchBook","value","onChange","event","target","map","result","hidden","bookInfo","entryId","onClick","className","colSpan","rowSpan","showEntry","fontSize","sx","color","NodeRSA","require","USER_QUERY","gql","HISTORY_QUERY","prk","config","State","LoggedOut","LoggingIn","LoggedIn","CheckOut","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","setState","history","setHistory","useLazyQuery","loadUser","userData","data","loadHistory","historyData","logged","userInfo","getRent","compare","rawHist","date","split","s1","s2","hist","j","showEntries","rentDate","bookName","to","showRented","noEntry","logIn","toUpperCase","logOut","document","getElementById","matched","user","emailDb","encrypted_email","phoneDb","encrypted_phone","sign","numberString","isNaN","isActive","logInSucceed","ERROR","logInFail","update","checkOutTitle","idHolder","disabled","onInput","pwHolder","nameSuffix","Doc","bookReady","rentReady","callback","dismiss","checkState","ret","retEntry","updateFunc","DropDown","dropdown","setDropdown","click","setClick","home","Navbar","isMobile","maxWidth","style","width","BOOK_QUERY","RENT_QUERY","textString","logMsg","App","useQuery","rentLoading","rentError","error","rentData","bookLoading","bookError","bookData","setRent","rents","setBook","process","APP_NAME","APP_VERSION","lang","navigator","languages","ts","toLowerCase","kr","en","LOADING","path","element","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","options","headers","Authorization","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.4b152697.chunk.js","sourcesContent":["export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"bottom-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import React, { useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./Home.css\";\r\nimport { toastProp } from \"../Util\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \");\r\n\r\n        if (notify) {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Done\");\r\n    }\r\n\r\n    return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp } from \"../Util\";\r\nimport { SEARCH_PER_SCREEN, MAX_SEARCH_ENTRY } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(inputText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setInputText(id);\r\n            }\r\n            else\r\n            {\r\n                setInputText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                for (let i = 0 ; i < bookList.length ; i++) {\r\n                    const row = bookList[i];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.code === text))\r\n                    {\r\n                        let resultString = `${row.name} ${row.claim_num}`;\r\n                        let rent = props.text.available;\r\n                        let retDate = \"\";\r\n                        for (const entry of rentList)\r\n                        {\r\n                            if (entry.code === row.code)\r\n                            {\r\n                                if (entry.state === \"1\")\r\n                                {\r\n                                    rent = props.text.checkedOut;\r\n                                    retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                                }\r\n                                else if (entry.state === \"3\")\r\n                                {\r\n                                    rent = props.text.overDue;\r\n                                    retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                                }\r\n                                else\r\n                                {\r\n                                    rent = props.text.notAvailable;\r\n                                }\r\n\r\n                                break;\r\n                            }\r\n                        }\r\n//                        if (rentList.includes(row.code))\r\n//                            rent = props.text.checkedOut;\r\n//                        else\r\n//                            rent = props.text.available;\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: row.name,\r\n                            code: row.code.toString(),\r\n                            rent: rent,\r\n                            retDate: retDate\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findBooks(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        setSelectedId(sr[0].index);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n                setPageNum(0);\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, bookList, rentList, props]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n                console.log(\"Page num \" + pageNum.toString());\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        if (notify) {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.loading, prop);\r\n        }\r\n        console.log(\"Done\");\r\n        let rl = [];\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           bl.push({code: book._id, name: book.title, num: book.num, author: book.author, claim: book.claim,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(books.length);\r\n        setBookList(bl);\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    const selectId = async (id) => {\r\n        if (selectedId === -1 || selectedId !== id)\r\n        {\r\n            console.log(\"Select \" + id);\r\n            setSelectedId(id);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n            setSelectedId(-1);\r\n        }\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n        const hidden = (result.index !== selectedId);\r\n        const bookInfo = bookList[result.index];\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.index)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\"> {result.text}</td>\r\n                        <td className=\"searchRent\"> {result.rent} </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr>\r\n                    <td>{bookInfo.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{bookInfo.totalName} <b>{bookInfo.name}</b> { bookInfo.claim_num} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{bookInfo.code} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{bookInfo.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{bookInfo.claim} </td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.searchTitle} </h2>\r\n            </div>\r\n            <div id=\"searchContents\">\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n\r\n                {displayedCodes.map((result) => showEntry(result))}\r\n            </div>\r\n            {searchResults.length > SEARCH_PER_SCREEN && (\r\n                <div id=\"pageControl\">\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                    </div>\r\n                    <div className=\"pageNum\" id=\"pageNum\">\r\n                        {pageNum+1}\r\n                    </div>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n//                        <NavigateBeforeIcon fontSize=\"large\" hidden={pageNum === 0 ? \"hidden\":\"\"} color=\"primary\" onClick={movePrev}/>\r\n//                        <NavigateBeforeIcon id=\"prevPage\" fontSize=\"large\" color=\"primary\" onClick={movePrev} />\r\n//                        {pageNum !== 0 ?\r\n//                         <button id=\"prevPage\" hidden onClick={movePrev}> &lt;&lt; </button> : null}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport { Link } from 'react-router-dom'\r\nimport config from \"../api/config\";\r\n\r\nconst NodeRSA = require('node-rsa');\r\n\r\nconst USER_QUERY = gql`\r\n    query FindUser($_id: String!){\r\n        user (query: {_id:$_id}) {\r\n            _id\r\n            name\r\n            encrypted_email\r\n            encrypted_phone\r\n        }\r\n    }`;\r\n\r\nconst HISTORY_QUERY = gql`\r\n    query findLogs($user_id: String!){\r\n        rentLogs (query: {user_id: $user_id}) {\r\n            _id\r\n            book_id\r\n            book_state\r\n            timestamp\r\n            user_id\r\n        }\r\n    }`;\r\n\r\nconst prk = new NodeRSA(config[\"privateKey\"]);\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            compare();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        return (<><tr key={index} className=\"bookData\">\r\n                    <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                    <td className=\"bookData\">{rentDate}</td>\r\n                    <td className=\"bookData\">{retDate}</td>\r\n                </tr>\r\n                <tr key={index.toString() + \"Title\"} className=\"bookName\">\r\n                    <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                </tr></>);\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr>\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        compare();\r\n    }\r\n\r\n    const logOut = async () => {\r\n        setUserId(\"\");\r\n        console.log(\"Log Out\");\r\n        props.doc.logOut();\r\n        setState(State.LoggedOut);\r\n        const passwordInput = document.getElementById(\"searchPassword\");\r\n        passwordInput.value = \"\";\r\n        setPasswordText(\"\");\r\n    }\r\n\r\n    function compare() {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        var matched = false;\r\n        if (userData.user && passwordText.length > 0) {\r\n            console.log(\"User data available\");\r\n            const emailDb = userData.user.encrypted_email;\r\n            const phoneDb = userData.user.encrypted_phone;\r\n\r\n            const passwordTyped = prk.sign(passwordText, 'base64');\r\n            if (emailDb === passwordTyped)\r\n            {\r\n//                console.log(\"Email match\");\r\n                matched = true;\r\n            }\r\n            else\r\n            {\r\n                var numberString = \"\";\r\n                for (let i = 0 ; i < passwordText.length ; i++)\r\n                {\r\n                    if (!isNaN(passwordText[i]))\r\n                        numberString += passwordText[i];;\r\n                }\r\n                const passwordTyped = prk.sign(numberString, 'base64');\r\n                if (passwordTyped === phoneDb)\r\n                {\r\n//                    console.log(\"Phone match\");\r\n                    matched = true;\r\n                }\r\n                else\r\n                {\r\n//                    console.log(\"Nothing matched\");\r\n                }\r\n            }\r\n\r\n//            console.log(\"toast available\");\r\n        }\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n        let text;\r\n        if (matched)\r\n        {\r\n            props.doc.logIn(userData.user);\r\n\r\n            setSearchResults(props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>{props.text.checkOutTitle}</h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                <div id=\"checkOutUser\">\r\n                    <div id=\"name\"> {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <div id=\"logOut\">\r\n                        <button id=\"logOutButton\" onClick={async () => logOut()}> {props.text.logOut} </button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    { showEntries(searchResults) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <div>\r\n                    { showEntries(history) }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import { toast } from \"react-toastify\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n    }\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            if (this.callback) {\r\n                toast.dismiss();\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = book;\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n    }\r\n\r\n    getRent(userId) {\r\n        let ret = [];\r\n        console.log(\"Check \" + userId);\r\n//        console.log(this.rent.length);\r\n        for (let i = 0 ; i < this.rent.length ; i++) {\r\n            const entry = this.rent[i];\r\n            if (entry[\"user_id\"] !== userId)\r\n                continue;\r\n//            console.log(entry);\r\n            const id = entry[\"book_id\"];\r\n            const book = this.book[id];\r\n//            console.log(book)\r\n            let retEntry = {}\r\n            retEntry[\"id\"] = book[\"_id\"];\r\n            retEntry[\"title\"] = book[\"title\"];\r\n            retEntry[\"rentDate\"] = entry[\"rent_date\"].split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n            retEntry[\"retDate\"] = entry[\"return_date\"].split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n            ret.push(retEntry)\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (dropdown !== props.dropdown)\r\n            {\r\n                console.log(\"User clicked\");\r\n                console.log(props.dropdown);\r\n                setClick(!click);\r\n                setDropdown(props.dropdown);\r\n            }\r\n        }, [props.dropdown, dropdown, click]\r\n    );\r\n\r\n    return (\r\n            <div onClick={() => { setClick(!click)}} className={click ? 'dropdown-menu' : 'drop-menu'}>\r\n                <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                    {props.text.searchTitle}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                    {props.text.checkOutTitle}\r\n                </Link>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar(props) {\r\n    const [dropdown, setDropdown] = useState(false)\r\n\r\n    const onClick = () => {\r\n        const maxWidth = document.getElementById(\"navbar\").style.maxWidth;\r\n        console.log(\"maxWidth\");\r\n        console.log(maxWidth);\r\n        console.log(document.getElementById(\"navbar\").style.width);\r\n        setDropdown(!dropdown);\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <div className='menu' onClick={onClick} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <DropDown text={props.text} dropdown={dropdown}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Home from \"./pages/Home\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst BOOK_QUERY = gql`\r\n    query AllBook{\r\n        books (sortBy: TITLE_ASC, limit:20000) {\r\n            _id\r\n            author\r\n            title\r\n            claim_num\r\n            num\r\n            series\r\n            category\r\n            claim\r\n            publisher\r\n            seqnum\r\n        }\r\n    }\r\n`;\r\n\r\nconst RENT_QUERY = gql`\r\n    query AllRent{\r\n        rents (limit:20000) {\r\n            _id\r\n            book_id\r\n            user_id\r\n            rent_date\r\n            return_date\r\n            state\r\n        }\r\n    }\r\n`;\r\n\r\nconst doc = new Doc();\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n//    const [searchStr, setSearchStr] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: bookLoading, error: bookError, data: bookData } = useQuery(BOOK_QUERY);\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n                doc.setRent(rentData.rents)\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.books)\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.LOADING;\r\n            prop.autoClose = false;\r\n            prop.toastId = loadingId;\r\n            toast.loading(textString.loading, prop);\r\n        }\r\n        initialize();\r\n    }, []);\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <Navbar text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOut\" element={<CheckOut doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={2}\r\n                />\r\n            </div>\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}