{"version":3,"sources":["pages/Home.js","Util.js","api/query.js","pages/Notice.js","ListView.js","pages/Search.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","UserInfo.js","pages/UserSearch.js","pages/RentalSituation.js","pages/RentHistory.js","pages/NewMember.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","console","log","doc","setCallback","undefined","initialize","serverAvailable","id","className","to","text","checkOut","return","dangerouslySetInnerHTML","__html","homeText","SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","arguments","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getUserState","state","normal","overDue","stopped","getBookState","available","checkedOut","reserved","lost","damaged","given","notAvailable","deleted","compareRent","a1","a2","rentDate","title","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","BOOK_QUERY","gql","RENT_QUERY","USERS_QUERY","USER_QUERY","HISTORY_QUERY","HISTORY_BOOK_QUERY","HISTORY_PERIOD_QUERY","NOTICE_QUERY","CONTENT_QUERY","SERVER_QUERY","Notice","useState","searchResults","setSearchResults","displayedCodes","setDisplayedCodes","pageNum","setPageNum","selectedId","setSelectedId","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","useLazyQuery","loadSelected","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","date","colSpan","onClick","_id","notice","content","map","fontSize","sx","color","showCallback","ListView","itemList","setItemList","displayList","setDisplayList","list","keyValue","detail","initialized","Search","inputText","setInputText","bookList","setBookList","rentList","setRentList","setBookState","needConfirm","setNeedConfirm","queryRequest","toggleQueryRequest","bookId","setBookId","advancedSearch","setAdvancedSearch","author","setAuthor","fromId","setFromId","toId","setToId","fromDate","setFromDate","toDate","setToDate","stateFilter","setStateFilter","rentHistory","setRentHistory","useDebounce","searchQuery","loadHistory","historyData","selectedRef","useRef","needConfirmRef","bookStateRef","historyAvailable","useParams","updateDoc","rl","rm","rented","rent","push","code","book_id","retDate","return_date","key","bl","books","book","name","num","claim","regDate","registration_date","claim_num","totalName","series","category","publisher","publish","isbn","isOpen","findBooks","results","btoa","url","serverInfo","localIp","port","param","requestGet","response","resultString","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","resultObject","index","BARCODE","REG_DATE","AUTHOR","TOTAL_NAME","CLAMENUM","PUBLISH","CLAIM","ISBN","findBookLocally","sort","a","b","keyword","sr","current","query","history","rentLogs","book_state","pair","timestamp","selectId","setState","setSearchState","stateStr","value","document","getElementById","checked","filter","idx","element","ipAddr","portNum","obj","requestPost","hidden","entryId","flags","rowSpan","entry","showHistoryEntry","admin","disabled","confirmAction","confirm","cancel","setPeriod","from","row","includes","parseInt","bookSearch","placeholder","searchBook","onChange","event","target","type","advSearch","bookCode","registeredDate","date1","date2","dateStr1","getFullYear","getMonth","padStart","getDate","dateStr2","selectRange","all","search","entries","showEntries","State","LoggedOut","LoggingIn","LoggedIn","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","setHistory","autoLogin","setAutoLogin","loadUser","userData","expireDate","setExpireDate","setTitle","logged","userInfo","getRent","adminMode","userSearch","logIn","context","cookie","Date","setTime","getTime","days","toGMTString","compare","func","bookReady","rentReady","hist","split","retText","bookName","Fragment","showRented","noEntry","toUpperCase","toast","isActive","prop","checkLogIn","user","TYPE","SUCCESS","logInSucceed","ERROR","logInFail","render","toastId","update","info","idHolder","onInput","pwHolder","cookieString","toggleAutoLogin","dueDate","LoggingOut","CheckOut","bookText","setBookText","setUserData","scannedBook","setScannedBook","notifyRequest","setNotifyRequest","barcode","setBarcode","setRented","navigate","useNavigate","prefixList","getElementsByName","substring","interval","setInterval","scan","clearInterval","notify","RENTED","dismiss","prefix","updateUser","USER_CODE","logOut","ret","rentSucceed","NOT_AVAILABLE","showBook","htmlFor","pattern","inputMode","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","numberOnly","bookHolder","confirmRent","finish","Return","returned","setReturned","returnSucceed","NOT_RENTED","confirmReturn","UserInfo","setDisabled","setUserInfo","setProperty","PHONE_NUMBER","EMAIL","ADDRESS","USER_LEVEL","NOTICE","Object","keys","refresh","phone","email","address","notice_","level","kid","adult","save","confirmSave","userLoading","userListData","userError","userList","setUserList","succeededToOpen","extend","users","setUser","getUser","extendCount","forceSelect","showUsers","showUser","findUsers","toLowerCase","input","trim","RentHistory","RETURN_DATE","STATS","LENT_DATE","USER","userName","situation","fromTime","setFromTime","toTime","setToTime","historyLoading","historyError","yearValue","setYear","monthValue","setMonth","setQuery","year","month","option","createElement","add","thisYear","thisMonth","bookInfo","user_id","_RETURN_DATE","RENT_DATE","nextMonth","queryTo","warn","movePrev","moveNext","NewMember","prepareNewMember","newMember","regSuccess","regFail","Doc","userReady","logCallback","os","navigator","platform","axios","get","post","ip","checkServerIp","callback","checkState","checkRent","globalIp","proxy","_EXTEND_COUNT","retEntry","rent_date","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","join","decodeURIComponent","passwordTyped","matched","emailDb","phoneDb","sign","numberString","isNaN","DropDown","dropdown","setDropdown","click","setClick","menu","classList","remove","home","checkOutStatus","Navbar","isMobile","maxWidth","style","width","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","serverLoading","serverError","serverData","loadBook","bookLoading","bookError","bookData","notifyInit","updateLog","process","APP_NAME","APP_VERSION","lang","languages","ts","kr","en","updateIpAddr","nothing","password","setRent","rents","setBook","setServerInfo","LOADING","setLogCallback","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","path","UserSearch","RentalSituation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","options","headers","Authorization","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.1161f983.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    if (!props.doc.serverAvailable)\r\n    {\r\n        return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n    }\r\n    else\r\n    {\r\n        import(\"./PageServer.css\");\r\n        return (<div id=\"home\">\r\n                    <Link className='home-items' to=\"/checkOut\">\r\n                        {props.text.checkOut}\r\n                    </Link>\r\n                    <Link className='home-items' to=\"/return\">\r\n                        {props.text.return}\r\n                    </Link>\r\n                </div>);\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\" || state === 0)\r\n        return text.normal;\r\n    else if (state === \"1\" || state === 1)\r\n        return text.overDue;\r\n    else if (state === \"2\" || state === 2)\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    switch (state)\r\n    {\r\n        case \"0\":\r\n        case 0:\r\n            return text.available;\r\n        case \"1\":\r\n        case 1:\r\n            return text.checkedOut;\r\n        case \"2\":\r\n        case 2:\r\n            return text.reserved;\r\n        case \"3\":\r\n        case 3:\r\n            return text.overDue;\r\n        case \"4\":\r\n        case 4:\r\n            return text.lost;\r\n        case \"5\":\r\n        case 5:\r\n            return text.damaged;\r\n        case \"6\":\r\n        case 6:\r\n            return text.given;\r\n        case \"7\":\r\n        case 7:\r\n        default:\r\n            return text.notAvailable;\r\n        case \"8\":\r\n        case 8:\r\n            return text.deleted;\r\n    }\r\n}\r\n\r\nexport const compareRent = function(a1, a2)\r\n{\r\n    if (a1.rentDate > a2.rentDate)\r\n        return true;\r\n    else if (a1.rentDate < a2.rentDate)\r\n        return false;\r\n    return a1.title > a2.title;\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n            registration_date\n            isbn\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        users (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (limit: 20000, query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const HISTORY_BOOK_QUERY = gql`\n    query findLogs($book_id: String!){\n        rentLogs (limit: 20000, query: {book_id: $book_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const HISTORY_PERIOD_QUERY = gql`\n    query findLogs ($fromTime: String!, $toTime: String!) {\n        rentLogs(limit: 20000, query: {AND: [{timestamp_gte: $fromTime}, {timestamp_lt: $toTime}]}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n            proxy\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div id=\"noticeContent\">\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"noticeList\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        setPageNum(0);\n    }, [props.keyValue]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList, props.detail)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { MAX_SEARCH_ENTRY, getBookState, toUtf8 } from \"../Util\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport {HISTORY_BOOK_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport Calendar from \"react-calendar\";\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const [bookState, setBookState] = useState(0);\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n\r\n    const [bookId, setBookId] = useState(\"\");\r\n\r\n    const [advancedSearch, setAdvancedSearch] = useState(false);\r\n\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [fromId, setFromId] = useState(\"\");\r\n    const [toId, setToId] = useState(\"\");\r\n    const [fromDate, setFromDate] = useState(\"\");\r\n    const [toDate, setToDate] = useState(\"\");\r\n\r\n    const [stateFilter, setStateFilter] = useState(0);\r\n    const [rentHistory, setRentHistory] = useState([]);\r\n\r\n    const [searchQuery] = useDebounce(inputText, 300);\r\n    const [loadHistory, {data: historyData}] = useLazyQuery(HISTORY_BOOK_QUERY,\r\n            {\"variables\": { \"book_id\": bookId }});\r\n    const selectedRef = useRef(\"0\");\r\n    const needConfirmRef = useRef(false);\r\n    const bookStateRef = useRef(0);\r\n    const historyAvailable = useRef(false);\r\n    const { id } = useParams();\r\n\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                console.log(\"Set Book ID \" + id);\r\n //               setInputText(id);\r\n                setBookId(id);\r\n                loadHistory();\r\n            }\r\n            else\r\n            {\r\n//                setInputText(\"\");\r\n                setBookId(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    console.log(\"=======================\");\r\n                    console.log(\"Request book list\");\r\n                    const param = {\"book\": btoa(toUtf8(text)), \"match\":false};\r\n                    const response = await props.doc.requestGet(url, param);\r\n                    console.log(response)\r\n                    if (!(\"books\" in response.data.return))\r\n                        return results;\r\n                    const books = response.data.return.books;\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        let retDate = \"\";\r\n                        if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            regDate: book.REG_DATE,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAMENUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM,\r\n                            state: book._STATE,\r\n                            isbn: book.ISBN\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    results = findBookLocally(text, bookList);\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                console.log(\"Refresh\");\r\n                if (advancedSearch) {\r\n                    return;\r\n                }\r\n                var keyword;\r\n                if (bookId !== \"\")\r\n                    keyword = bookId;\r\n                else\r\n                    keyword = searchQuery;\r\n                console.log(keyword)\r\n                if (keyword) {\r\n                    let sr = await findBooks(keyword);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, bookId, bookList, rentList, props, queryRequest, advancedSearch]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\");\r\n            console.log(historyData);\r\n            if (!historyData)\r\n            {\r\n                setRentHistory([])\r\n                historyAvailable.current = false;\r\n                return;\r\n            }\r\n            let history = [];\r\n            for (let i = 0 ; i < historyData.rentLogs.length ; i++)\r\n            {\r\n                const rent = historyData.rentLogs[i];\r\n                if (rent.book_state !== 1)\r\n                    continue;\r\n                let pair = [rent.timestamp];\r\n                if ( \"return_date\" in rent)\r\n                    pair.push(rent.return_date)\r\n                else\r\n                    pair.push(rent.return_date)\r\n                history.push(pair);\r\n            }\r\n            console.log(history.length);\r\n            setRentHistory(history);\r\n            historyAvailable.current = (history.length > 0);\r\n        },\r\n        [historyData]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        let rm = {};\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n           rm[rented[i].book_id] = rented[i].state;\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           const state = (key in rm) ? rm[key] : 0;\r\n           bl.push({code: book._id, name: book.title, state: state, num: book.num, author: book.author, claim: book.claim,\r\n                    regDate: book.registration_date,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher, isbn: book.isbn});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(bl.length);\r\n        setBookList(bl);\r\n\r\n        console.log(bookId);\r\n        if (bookId !== \"\")\r\n        {\r\n            console.log(\"Load history\");\r\n            loadHistory();\r\n        }\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (searchResults.length === 1 || selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    function setState(state)\r\n    {\r\n        console.log(\"Set state \" + state.toString());\r\n        needConfirmRef.current = true;\r\n        setNeedConfirm(true);\r\n        setBookState(state);\r\n        bookStateRef.current = state;\r\n        console.log(selectedId.toString() + needConfirmRef.current);\r\n    }\r\n\r\n    function setSearchState(state)\r\n    {\r\n        const stateStr = state.toString()\r\n        const value = document.getElementById(stateStr).checked;\r\n        console.log(\"Set Search state \" + stateStr + \" Value: \" + value);\r\n        if (stateStr === \"1023\")\r\n        {\r\n            document.getElementById(\"1023\").checked = value;\r\n            document.getElementById(\"0\").checked = value;\r\n            document.getElementById(\"1\").checked = value;\r\n            document.getElementById(\"3\").checked = value;\r\n            document.getElementById(\"4\").checked = value;\r\n            document.getElementById(\"5\").checked = value;\r\n            document.getElementById(\"6\").checked = value;\r\n            document.getElementById(\"7\").checked = value;\r\n            document.getElementById(\"8\").checked = value;\r\n        }\r\n        else\r\n        {\r\n            document.getElementById(stateStr).checked = value;\r\n        }\r\n\r\n        var filter = 0;\r\n        for (var i = 0 ; i < 9 ; i++)\r\n        {\r\n            const idx = i.toString();\r\n            const element = document.getElementById(idx);\r\n            if (element)\r\n                filter |= (element.checked) ? (1 << i) : 0;\r\n        }\r\n        setStateFilter(filter);\r\n        console.log(\"Filter: \" + filter.toString());\r\n    }\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/book\";\r\n        var obj = {};\r\n        obj[\"book\"] = selectedRef.current;\r\n        obj[\"state\"] = bookStateRef.current;\r\n        console.log(\"=======================\");\r\n        console.log(\"Change book state\");\r\n        await props.doc.requestPost(url, obj);\r\n\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n    }\r\n\r\n    const showHistoryEntry = (entry) => {\r\n        return (<tr key={entry[0]}><td key={entry[0] + \"x\"}>{entry[0]}</td><td>{entry[1]}</td></tr>);\r\n    }\r\n\r\n    const showEntry = (result, detail) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        const flags = [false, false, false, false, false, false, false, false, false, false]\r\n        flags[result.state] = true;\r\n        if (result.state === 1 || result.state === 2 || result.state === 3)\r\n            flags[0] = true;\r\n//        if (!hidden)\r\n//        {\r\n//            console.log(detail);\r\n//            console.log(flags);\r\n//        }\r\n        const rentHistory = detail[2];\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\">{result.text}</td>\r\n                        <td className=\"searchRent\">{result.rent}</td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr key=\"row1\">\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName}<b>{result.name}</b>{ result.claim_num}</td>\r\n                </tr>\r\n                <tr key=\"row2\">\r\n                    <td>\r\n                        <Link to={\"/search/\"+result.code}>{result.code}</Link>\r\n                    </td>\r\n                </tr>\r\n                <tr key=\"row3\">\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim}</td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n                <table className=\"rentHistory\" hidden={!historyAvailable.current}><tbody>\r\n                    <tr id=\"titles\"><td>{props.text.rentDate}</td><td>{props.text.returnDate}</td></tr>\r\n                    {rentHistory.map(entry => showHistoryEntry(entry))}\r\n                </tbody></table>\r\n                <div hidden={!props.doc.serverAvailable || !props.doc.admin}>\r\n                    <button className=\"bookStates\" id = \"0\" disabled={flags[0]} onClick={() => setState(0)}> {props.text.available} </button>\r\n                    <button className=\"bookStates\" id = \"4\" disabled={flags[4]} onClick={() => setState(4)}> {props.text.lost} </button>\r\n                    <button className=\"bookStates\" id = \"5\" disabled={flags[5]} onClick={() => setState(5)}> {props.text.damaged} </button>\r\n                    <button className=\"bookStates\" id = \"6\" disabled={flags[6]} onClick={() => setState(6)}> {props.text.given} </button>\r\n                    <button className=\"bookStates\" id = \"7\" disabled={flags[7]} onClick={() => setState(7)}> {props.text.notAvailable} </button>\r\n                    <button className=\"bookStates\" id = \"8\" disabled={flags[8]} onClick={() => setState(8)}> {props.text.deleted} </button>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirmRef.current}>\r\n                    <div id=\"bookName\"> {getBookState(props.text, bookStateRef.current)} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results, detail)\r\n    {\r\n        console.log(\"Redraw \" + needConfirmRef.current);\r\n        console.log(historyAvailable.current);\r\n        console.log(detail);\r\n        return results.map((result) => showEntry(result, detail))\r\n    }\r\n\r\n    function setPeriod(from, text)\r\n    {\r\n        if (from)\r\n            setFromId(text)\r\n        else\r\n            setToId(text)\r\n    }\r\n\r\n    function findBookLocally(keyword, bookList)\r\n    {\r\n        let results = [];\r\n        console.log(advancedSearch);\r\n        for (let i = 0 ; i < bookList.length ; i++) {\r\n            const row = bookList[i];\r\n            if (results.length >= MAX_SEARCH_ENTRY) break;\r\n\r\n            const text = keyword;\r\n            if (text.length > 0 && row.name && !row.name.toString().includes(text) &&\r\n                row.code !== text && row.isbn !== text)\r\n                continue\r\n            if (advancedSearch)\r\n            {\r\n                if (author.length > 0 && row.author && !row.author.toString().includes(author))\r\n                    continue;\r\n\r\n                if (fromId.length > 0 && row.code < fromId)\r\n                    continue;\r\n\r\n                if (toId.length > 0 && row.code > toId)\r\n                    continue;\r\n\r\n                const regDate = row.regDate;\r\n\r\n                if (regDate < fromDate || regDate > toDate)\r\n                    continue;\r\n                console.log(row);\r\n                console.log(regDate);\r\n                console.log(regDate < fromDate);\r\n                console.log(regDate > toDate);\r\n\r\n                if (!((1<<row.state) & stateFilter))\r\n                    continue;\r\n            }\r\n            else if (text.length === 0)\r\n                continue;\r\n\r\n            let resultString = `${row.name} ${row.claim_num}`;\r\n            let retDate = \"\";\r\n            let state = \"0\";\r\n            for (const entry of rentList)\r\n            {\r\n                if (entry.code === row.code)\r\n                {\r\n                    state = entry.state;\r\n                    if (state === \"1\" || state === \"3\")\r\n                    {\r\n                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            let resultObject = {\r\n                index: i,\r\n                text: resultString,\r\n                name: row.name,\r\n                code: row.code.toString(),\r\n                rent: getBookState(props.text, state),\r\n                retDate: retDate,\r\n                regDate: row.regDate,\r\n                author: row.author,\r\n                totalName: row.totalName,\r\n                claim_num: row.claim_num,\r\n                publish: row.publish,\r\n                claim: row.claim,\r\n                state: parseInt(state),\r\n                isbn: row.isbn\r\n            };\r\n            results.push(resultObject);\r\n//            console.log(resultObject);\r\n        }\r\n        console.log(results.length);\r\n\r\n        return results;\r\n    }\r\n\r\n    function onChangeDate(date)\r\n    {\r\n        console.log(date);\r\n        const date1 = date[0]\r\n        const date2 = date[1]\r\n        const y1 = date1.getFullYear().toString();\r\n        const m1 = (date1.getMonth() + 1).toString().padStart(2, \"0\")\r\n        const d1 = date1.getDate().toString().padStart(2, \"0\");\r\n        const dateStr1 = y1 + \"-\" + m1 + \"-\" + d1;\r\n        console.log(dateStr1);\r\n        setFromDate(dateStr1);\r\n\r\n        const y2 = date2.getFullYear().toString();\r\n        const m2 = (date2.getMonth() + 1).toString().padStart(2, \"0\")\r\n        const d2 = date2.getDate().toString().padStart(2, \"0\");\r\n        const dateStr2 = y2 + \"-\" + m2 + \"-\" + d2;\r\n        console.log(dateStr2);\r\n        setToDate(dateStr2);\r\n    }\r\n\r\n    function searchEntry()\r\n    {\r\n        console.log(\"Search\");\r\n        console.log(fromId);\r\n        console.log(toId);\r\n        console.log(fromDate);\r\n        console.log(toDate);\r\n        let results = findBookLocally(inputText, bookList);\r\n        results.sort(function(a,b) { return a['code'] > b['code']; });\r\n\r\n        let sr = results;\r\n        if (sr.length > 0)\r\n            setSearchResults(sr);\r\n        else\r\n            setSearchResults([]);\r\n        if (sr.length === 1)\r\n            selectedRef.current = sr[0].code;\r\n    }\r\n\r\n    function toggleAdvancedSearch()\r\n    {\r\n        setAdvancedSearch(!advancedSearch);\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\" hidden={bookId !== \"\"}>\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n                    <div hidden={!props.doc.admin}>\r\n                        <input type=\"checkbox\" id=\"advancedSearch\" checked={advancedSearch} onChange={() => toggleAdvancedSearch()}/>\r\n                        <label>\r\n                            {props.text.advSearch}\r\n                        </label>\r\n                    </div>\r\n                <div hidden={!advancedSearch}>\r\n                    <div>\r\n                    <label> {props.text.author} </label>\r\n                    <input type=\"text\" id=\"author\" onChange={(event) => {setAuthor(event.target.value)}} />\r\n                    </div>\r\n                    <div>\r\n                    <label> {props.text.bookCode} </label>\r\n                    <input type=\"text\" id=\"fromPeriod\" onChange={(event) => {setPeriod(true, event.target.value);}} />\r\n                    <label> ~  </label>\r\n                    <input type=\"text\" id=\"toPeriod\" onChange={(event) => {setPeriod(false, event.target.value);}} />\r\n                    </div>\r\n                    <div>\r\n                    <label> {props.text.registeredDate} </label>\r\n                    <Calendar onChange={onChangeDate} selectRange={true}/>\r\n                    </div>\r\n                    <div>\r\n                    <table><tbody>\r\n                        <tr key=\"stateName\" className=\"bookData\">\r\n                            <td className =\"stateName\">{props.text.all}</td>\r\n                            <td className =\"stateName\">{props.text.available}</td>\r\n                            <td className =\"stateName\">{props.text.checkedOut}</td>\r\n                            <td className =\"stateName\">{props.text.overDue}</td>\r\n                            <td className =\"stateName\">{props.text.lost}</td>\r\n                            <td className =\"stateName\">{props.text.damaged}</td>\r\n                            <td className =\"stateName\">{props.text.given}</td>\r\n                            <td className =\"stateName\">{props.text.notAvailable}</td>\r\n                            <td className =\"stateName\">{props.text.deleted}</td>\r\n                        </tr>\r\n                        <tr key=\"stateButton\" className=\"bookData\">\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1023\" onChange={() => setSearchState(1023)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"0\" onChange={() => setSearchState(0)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1\" onChange={() => setSearchState(1)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"3\" onChange={() => setSearchState(3)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"4\" onChange={() => setSearchState(4)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"5\" onChange={() => setSearchState(5)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"6\" onChange={() => setSearchState(6)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"7\" onChange={() => setSearchState(7)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"8\" onChange={() => setSearchState(8)}/>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                    </div>\r\n                    <div>\r\n                    <button id=\"searchEntry\" onClick={searchEntry}> {props.text.search} </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ListView keyValue={searchQuery} list={searchResults} detail={[selectedId, needConfirm, rentHistory]} showCallback={(entries, detail) => { return showEntries(entries, detail); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, compareRent } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\n//import {USER_QUERY, HISTORY_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(() => {\r\n            async function func() {\r\n                console.log(\"User data updated \");\r\n                await compare();\r\n            }\r\n            func();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n            let hist = [];\r\n            const rentLogs = historyData.rentLogs;\r\n//            const rentLogs = historyData.rentLog_tests;\r\n            for (let i = 0 ; i < rentLogs.length ; i++)\r\n            {\r\n                const entry = rentLogs[i];\r\n                if (entry.book_state !== \"1\" && entry.book_state !== 1)\r\n                    continue;\r\n                if (! (\"return_date\" in entry) || ! entry.return_date)\r\n                    continue;\r\n                console.log(entry);\r\n                const id = entry.book_id;\r\n                const title = (id in props.doc.book) ? props.doc.book[id].title : \"N/A\";\r\n                const date = entry.timestamp.split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                const retDate = entry.return_date;\r\n                const claim = (id in props.doc.book) ? props.doc.book[id].claim : \"N/A\";\r\n                hist.push({\"id\": id, \"title\": title, \"rentDate\": date, \"retDate\": retDate, \"claim\": claim});\r\n\r\n            }\r\n            hist.sort(compareRent);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const claim = rent[\"claim\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n//        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result, retText) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{retText}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        await compare();\r\n    }\r\n\r\n    const compare = async () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData.user, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user);\r\n\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults, props.text.dueDate) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries, props.text.returnDate); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [userData, setUserData] = useState({});\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [rented, setRented] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n            const prefixList = document.getElementsByName(\"idPrefix\");\r\n            const prefix = barcode.substring(0, 2);\r\n            for (var i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                const id = prefixList[i].id\r\n                if (\"AB\" === id)\r\n                    prefixList[i].checked = true\r\n                else\r\n                    prefixList[i].checked = false\r\n\r\n            }\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n//            console.log(props.doc.serverInfo);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            if (props.doc.admin)\r\n                return;\r\n            import(\"./PageServer.css\");\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                const response = await props.doc.requestGet(url, {});\r\n                const code = response.data.scan;\r\n                if (code) {\r\n                    console.log(code)\r\n                    setBarcode(code)\r\n                }\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                setState(State.LoggedOut);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n                setBarcode(\"\")\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                const prefixList = document.getElementsByName(\"idPrefix\");\r\n                var prefix = \"\"\r\n                for (var i = 0 ; i < prefixList.length ; i++)\r\n                {\r\n                    if (prefixList[i].checked)\r\n                        prefix = prefixList[i].id\r\n                        console.log(\"Pressed [\" + i.toString() + \" \" + prefix + \"]\")\r\n\r\n                }\r\n                let barcode;\r\n                if (userText[0] === \"A\" || userText[0] == \"a\")\r\n                    barcode = userText;\r\n                else\r\n                    barcode = prefix + userText;\r\n                setBarcode(barcode);\r\n            }\r\n        }, [state, userText]\r\n    );\r\n\r\n    const updateUser = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const param = {\"user\": userText, \"data\":\"nothing\"};\r\n        const response = await props.doc.requestGet(url, param);\r\n        const user = response.data.return;\r\n\r\n        setUserData(user);\r\n        console.log(user);\r\n        setUserId(user.USER_CODE);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        console.log(\"LOGIN\");\r\n        console.log(barcode);\r\n        if (barcode.length === 0)\r\n            return;\r\n        setState(State.LoggingIn);\r\n        const id = barcode.toUpperCase();\r\n        updateUser(id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Finish\")\r\n        setUserData({});\r\n        setUserText(\"\");\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n        setRented([])\r\n        navigate(\"/\")\r\n    }\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    useEffect(\r\n        async () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                var bookId;\r\n                if (props.doc.admin)\r\n                    bookId = bookText;\r\n                else\r\n                    bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    console.log(book.books)\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        },\r\n        [searchQuery, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        async () => {\r\n            console.log(\"Set barcode: \" + barcode);\r\n            if (barcode.length === 0)\r\n                return;\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                if (barcode.search(\"AA\") === 0 || barcode.search(\"AB\") === 0 )\r\n                {\r\n                    const prefixList = document.getElementsByName(\"idPrefix\");\r\n                    const prefix = barcode.substring(0, 2);\r\n                    for (var i = 0 ; i < prefixList.length ; i++)\r\n                    {\r\n                        const id = prefixList[i].id\r\n                        if (prefix === id)\r\n                            prefixList[i].checked = true\r\n                        else\r\n                            prefixList[i].checked = false\r\n\r\n                    }\r\n                    setUserText(barcode.substring(2));\r\n                }\r\n            }\r\n            else if (barcode.search(\"HK\") === 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                console.log(book)\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        },\r\n        [barcode, props.doc, state]\r\n    );\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        const param = {\r\n            book: scannedBook.BARCODE,\r\n            user: userId\r\n        };\r\n        const response = await props.doc.requestPost(url, param);\r\n        const ret = response.data.return\r\n        console.log(\"Rent confirmed\");\r\n        console.log(ret)\r\n\r\n        if (ret === \"SUCCESS\")\r\n        {\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.rentSucceed,\r\n                              \"type\": toast.TYPE.SUCCESS})\r\n            rented.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n            console.log(rented)\r\n            setRented(rented)\r\n        }\r\n        else\r\n        {\r\n            let text\r\n            if (ret in props.text)\r\n                text = props.text[ret];\r\n            else\r\n                text = props.text.NOT_AVAILABLE;\r\n            console.log(text)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": text,\r\n                              \"type\": toast.TYPE.ERROR})\r\n        }\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n        updateUser(userId);\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n    /*\r\n        return (<React.Fragment key={index + \"Fragment\"}>\r\n                    <tr key={index}>\r\n                        <td className=\"bookCell\"> {rent.id} </td>\r\n                        <td colSpan=\"3\" className=\"bookCell\"> {rent.name} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    */\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    <div id=\"dueDate\">\r\n                    {props.text.dueDate} : {props.doc.dueDate}\r\n                    </div>\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n    /*\r\n                    <table><tbody>\r\n                        {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                    </tbody></table>\r\n    */\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"radio\" id = \"AA\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AA\" className=\"idPrefix\" name=\"idPrefix\"> AA </label>\r\n                <input type=\"radio\" id = \"AB\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AB\" className=\"idPrefix\" name=\"idPrefix\"> AB </label>\r\n                <input type=\"text\" id=\"searchInput\" pattern=\"[0-9]*\" inputMode=\"numeric\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={async () => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {rented.length > 0 &&\r\n                    <ListView list={rented} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n            <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.finish} </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n//    const [initialized, setInitialized] = useState(false);\r\n//    const [userId, setUserId] = useState(\"\");\r\n//    const [state, setState] = useState(State.LoggedOut);\r\n//    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n//                     { \"variables\": { \"_id\": userId } });\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [returned, setReturned] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            if (props.doc.admin)\r\n                return;\r\n            import(\"./PageServer.css\")\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                const response = await props.doc.requestGet(url, {});\r\n                const book = response.data.scan;\r\n                if (book) {\r\n                    console.log(book.search(\"HK\"))\r\n                    if (book.search(\"HK\") === 0) {\r\n                        console.log(barcode + \" -> \" + book)\r\n                        setBarcode(book)\r\n                    }\r\n                }\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    useEffect(\r\n        async () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                var bookId;\r\n                if (props.doc.admin)\r\n                    bookId = bookText;\r\n                else\r\n                    bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        },\r\n        [searchQuery, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        async () => {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                console.log(book)\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        },\r\n        [barcode, props.doc]\r\n    );\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 1 || scannedBook._STATE === 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Returned updated\");\r\n            console.log(returned);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            console.log(\"Update return list\");\r\n            const bookId = \"HK\" + bookText;\r\n            console.log(\"Search book1 \" + bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const param = {\"books\": returned};\r\n            props.doc.requestGet(url, param);\r\n        },\r\n        [returned]\r\n    );\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        const param = {\r\n            book: scannedBook.BARCODE\r\n        }\r\n        const response = await props.doc.requestPost(url, param)\r\n        const ret = response.data.return;\r\n        console.log(ret);\r\n        if (ret === \"SUCCESS\")\r\n        {\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.returnSucceed,\r\n                              \"type\": toast.TYPE.SUCCESS})\r\n            returned.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n            console.log(returned)\r\n            setReturned(returned)\r\n        }\r\n        else\r\n        {\r\n            let text\r\n            if (ret in props.text)\r\n                text = props.text[ret];\r\n            else\r\n                text = props.text.NOT_AVAILABLE;\r\n            console.log(text)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": text,\r\n                              \"type\": toast.TYPE.ERROR})\r\n        }\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Finish\")\r\n        navigate(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {returned.length > 0 &&\r\n                    <ListView list={returned} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n            <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.finish} </button>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import { useEffect, useState } from \"react\";\nimport { toUtf8 } from \"./Util\";\nimport \"./UserInfo.css\";\n\nfunction UserInfo(props) {\n    const [needConfirm, setNeedConfirm] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(function() {\n        console.log(\"User Info\");\n        console.log(props.info);\n        document.getElementById('userName').value = props.info.USER_NAME ? props.info.USER_NAME : \"\";\n        document.getElementById('phone').value = props.info.PHONE_NUMBER ? props.info.PHONE_NUMBER : \"\";\n        document.getElementById('email').value = props.info.EMAIL ? props.info.EMAIL : \"\";\n        document.getElementById('address').value = props.info.ADDRESS ? props.info.ADDRESS : \"\";\n        document.getElementById('notice_').value = props.info.NOTICE ? props.info.NOTICE : \"\";\n        document.getElementById('user_level').value = props.info.USER_LEVEL;\n        setUserInfo({\"USER_CODE\": props.info.USER_CODE});\n        setDisabled(true);\n\n    }, [props.info]);\n\n    function setProperty(index, value)\n    {\n        console.log(index);\n        console.log(value);\n        var info = userInfo;\n        switch (index)\n        {\n        case 0:\n            info.USER_NAME = value;\n            break;\n        case 1:\n            info.PHONE_NUMBER = value;\n            break;\n        case 2:\n            info.EMAIL = value;\n            break;\n        case 3:\n            info.ADDRESS = value;\n            break;\n        case 4:\n            info.USER_LEVEL = value;\n            break;\n        case 5:\n            info.NOTICE = value;\n            break;\n        default:\n            break;\n        }\n        const length = Object.keys(info).length;\n        console.log(length);\n//        if (length >= 1 && \"USER_LEVEL\" in info && info.USER_LEVEL >= 0 && info.USER_LEVEL <= 2)\n        if (length > 1)\n            setDisabled(false);\n        setUserInfo(info);\n    }\n\n    async function confirmAction()\n    {\n        console.log(\"Save modification\");\n        console.log(userInfo);\n        const ipAddr = props.doc.serverInfo.localIp;\n        const portNum = props.doc.serverInfo.port;\n        if (ipAddr.length === 0 || portNum <= 0)\n            return;\n\n        const url = \"https://\" + ipAddr + \":\" +\n            portNum + \"/user\";\n\n        var obj = {};\n        console.log(userInfo)\n        for (const key in userInfo)\n        {\n            obj[key] = btoa(toUtf8(userInfo[key]));\n        }\n        const response = await props.doc.requestPost(url, obj);\n        console.log(response);\n        props.refresh(response);\n        setNeedConfirm(false);\n    }\n\n    function cancelAction()\n    {\n        setNeedConfirm(false);\n    }\n\n    return (\n        <div>\n            <table><tbody>\n                <tr key=\"Name\">\n                    <td> {props.text.name} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"userName\" onChange={(event) => {setProperty(0, event.target.value);}} />\n                    </td>\n                </tr>\n                {\"REG_DATE\" in props.info &&\n                    <tr key=\"Register\">\n                        <td> {props.text.registeredDate} </td>\n                        <td colSpan=\"3\" className=\"data\">\n                            {props.info.REG_DATE}\n                        </td>\n                    </tr>\n                }\n                <tr key=\"Phone\">\n                    <td> {props.text.phone} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"phone\" onChange={(event) => {setProperty(1, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Email\">\n                    <td> {props.text.email} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"email\" onChange={(event) => {setProperty(2, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Address\">\n                    <td> {props.text.address} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"address\" onChange={(event) => {setProperty(3, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Notice\">\n                    <td> {props.text.notice_} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"notice_\" onChange={(event) => {setProperty(5, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Level\">\n                    <td> {props.text.level} </td>\n                    <td colSpan=\"3\" className=\"cell\">\n                        <select name=\"User Level\" id=\"user_level\" className=\"dropdown\" onChange={(event) => {setProperty(4, event.target.value);}}>\n                            <option value=\"0\"> {props.text.kid} </option>\n                            <option value=\"1\"> {props.text.adult} </option>\n                            <option value=\"2\"> {props.text.admin} </option>\n                        </select>\n                    </td>\n                </tr>\n            </tbody></table>\n           <button id=\"modify\" hidden={needConfirm} onClick={async () => setNeedConfirm(true)} disabled={disabled}> {props.text.save} </button>\n            <div id=\"checkModify\" hidden={!needConfirm}>\n                <div id=\"noticeMsg\"> {props.text.confirmSave} </div>\n                <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\n                <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\n            </div>\n        </div>\n    );\n}\nexport default UserInfo;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, MAX_SEARCH_ENTRY, getUserState, toUtf8 } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate, useParams } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport UserInfo from \"../UserInfo\";\r\n\r\n//var rentList = [];\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 300);\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n//    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const { id } = useParams();\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                return;\r\n            }\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.users;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    async function extend(key)\r\n    {\r\n        console.log(\"Extend \" + key);\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/extend\";\r\n        var obj = {};\r\n        obj[\"book\"] = key\r\n\r\n        const ret = await props.doc.requestPost(url, obj);\r\n        console.log(\"Extended\")\r\n        console.log(ret)\r\n        selectId(selectedRef.current, true);\r\n        if (ret.data.return === \"SUCCESS\")\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.extend, prop);\r\n        }\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const extendCount = rent.extendCount;\r\n        const key = index.toString();\r\n//                        <td colSpan={props.doc.serverAvailable?\"3\":\"2\"} className=\"bookName\">{bookName}</td>\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan={props.doc.serverAvailable?\"2\":\"3\"} className=\"bookName\">{bookName}</td>\r\n                        {props.doc.serverAvailable &&\r\n                            <td className=\"bookName\"><button className=\"extend\" onClick={() => extend(id)}>{props.text.extend + \" (\" + extendCount.toString() + \")\"}</button></td>\r\n                        }\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id, forceSelect = false) => {\r\n        const rent = await props.doc.getRent(id);\r\n        console.log(rent);\r\n        if (selectedRef.current === -1 || selectedRef.current !== id || forceSelect )\r\n        {\r\n            console.log(\"Select \" + id);\r\n//            setSelectedId(id);\r\n            selectedRef.current = id;\r\n            console.log(\"Set Rent List\");\r\n            console.log(rent)\r\n            setRentList(rent);\r\n//            rentList = rent;\r\n        }\r\n        else if (searchResults.length > 1)\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n//            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n            setRentList([]);\r\n//            rentList = [];\r\n        }\r\n    }\r\n\r\n    const showUser = (user, detail, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div key={key}>\r\n                    <table><tbody>\r\n                        <tr key={user.id} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user, detail) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result, detail) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, detail, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (user, detail) => {\r\n        console.log(\"Detail\");\r\n        console.log(user);\r\n        return (<>\r\n                    {props.doc.serverAvailable &&\r\n                        <UserInfo text={props.text} doc={props.doc} info={user} refresh={refresh}/>\r\n                    }\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        detail.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        detail.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a.name > b.name; });\r\n                console.log(results);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                const input = userText.trim()\r\n                console.log(\"Query \" + input + \" \" + searchQuery)\r\n                if (input.length > 0 && searchQuery) {\r\n\r\n                    let sr;\r\n                    if (props.doc.serverAvailable)\r\n                    {\r\n                        console.log(\"from CLIB\")\r\n                        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/users\";\r\n                        const param = {\"user\": btoa(toUtf8(input))};\r\n                        const response = await props.doc.requestGet(url, param);\r\n                        const users = response.data.return.data;\r\n                        console.log(response.data.return);\r\n                        sr = [];\r\n                        if (users) {\r\n                            for (const entry of response.data.return.data)\r\n                            {\r\n                                console.log(entry);\r\n                                let user = entry;\r\n                                user.id = entry.USER_CODE;\r\n                                user.name = entry.USER_NAME;\r\n                                user.state = getUserState(props.text, entry.USER_STATE);\r\n                                user.rent = entry._RENT.length;\r\n                                sr.push(user);\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"from DB\")\r\n                        sr = await findUsers(searchQuery);\r\n                    }\r\n\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                   else\r\n                       selectId(0);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n       [searchQuery, props, userList, queryRequest, userText]\r\n    );\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView keyValue={searchQuery} list={searchResults} detail={rentList} showCallback={(entries, detail) => { return showUsers(entries, detail); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getBookState } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.users;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userList]\r\n    );\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        return a1.rentDate > a2.rentDate;\r\n    }\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.serverAvailable)\r\n        {\r\n            let results = [];\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const param = {\"user\": \"*\", \"match\":false};\r\n//            console.log(obj);\r\n            const response = await props.doc.requestGet(url, param);\r\n//           console.log(response)\r\n//            if (!(\"books\" in response.data.return))\r\n//                return results;\r\n            const books = response.data.return.books;\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                const state = book._STATE;\r\n                let retDate = \"\";\r\n                if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                {\r\n                    retDate = book.RETURN_DATE;\r\n                }\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: book.BOOKNAME,\r\n                    id: book.BARCODE,\r\n                    rent: getBookState(props.text, book.STATS.toString()),\r\n                    rentDate: book.LENT_DATE,\r\n                    retDate: retDate,\r\n                    author: book.AUTHOR,\r\n                    totalName: book.TOTAL_NAME,\r\n                    claim_num: book.CLAMENUM,\r\n                    publish: book.PUBLISH,\r\n                    claim: book.CLAIM,\r\n                    user: book.USER,\r\n                    userName: book.USER_NAME\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compare);\r\n            setRentList(results);\r\n        }\r\n        else\r\n        {\r\n\r\n            const rent = await props.doc.getRent();\r\n            console.log(\"Rent\");\r\n            console.log(rent);\r\n            rent.sort(compare);\r\n            for (const index in rent)\r\n            {\r\n                const userId = rent[index][\"user\"];\r\n                let userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                rent[index][\"userName\"] = userName;\r\n//                console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n            }\r\n            setRentList(rent);\r\n        }\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        const claim = rent[\"claim\"];\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"situation\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.situation}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue=\"\" list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n//    const [initialized, setInitialized] = useState(false);\r\n    const [fromTime, setFromTime] = useState(\"\");\r\n    const [toTime, setToTime] = useState(\"\");\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [loadHistory, {loading: historyLoading, data: historyData, error: historyError }] = useLazyQuery(HISTORY_PERIOD_QUERY,\r\n            {\"variables\": { \"fromTime\" : fromTime, \"toTime\": toTime}});\r\n    const [userList, setUserList] = useState({});\r\n    const [yearValue, setYear] = useState(0);\r\n    const [monthValue, setMonth] = useState(0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [searchQuery] = useDebounce(query, 300);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            var i;\r\n            var option;\r\n            var year = document.getElementById('year')\r\n            var month = document.getElementById('month')\r\n            for (i = 1; i <= 12 ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                month.add(option, i);\r\n            }\r\n            const thisYear = new Date().getFullYear();\r\n            const thisMonth = new Date().getMonth() + 1;\r\n            const fromYear = 2017;\r\n\r\n            for (i = fromYear ; i <= thisYear ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                year.add(option, i);\r\n            }\r\n\r\n            console.log(thisYear);\r\n            console.log(thisMonth);\r\n            setYear(thisYear);\r\n            setMonth(thisMonth);\r\n            document.getElementById('year').value = thisYear;\r\n            document.getElementById('month').value = thisMonth;\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n//                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.users;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\")\r\n\r\n            if (!historyData)\r\n                return\r\n\r\n//            console.log(historyData.rentLog_tests)\r\n\r\n            const books = historyData.rentLogs;\r\n//            const books = historyData.rentLog_tests;\r\n            let results = [];\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const state = book.book_state;\r\n                if (state !== \"1\" && state !== 1)\r\n                    continue\r\n                if (!book.return_date || book.return_date.length === 0)\r\n                    continue\r\n//                console.log(book)\r\n                const bookId = book.book_id;\r\n                const userId = book.user_id;\r\n                var userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                var bookInfo;\r\n                if (bookId in props.doc.book)\r\n                {\r\n                    bookInfo = props.doc.book[bookId];\r\n                }\r\n                else\r\n                {\r\n                    bookInfo = {}\r\n                    bookInfo.author = \"\"\r\n                    bookInfo.totalName = \"\"\r\n                    bookInfo.claim_num = \"\"\r\n                    bookInfo.publish = \"\"\r\n                    bookInfo.title = \"\"\r\n                }\r\n                const resultString = `${bookInfo.title} ${bookInfo.claim_num}`;\r\n                retDate = book.return_date;\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: bookInfo.title,\r\n                    id: bookId,\r\n                    rentDate: book.timestamp,\r\n                    retDate: retDate,\r\n                    author: bookInfo.author,\r\n                    claim_num: bookInfo.claim_num,\r\n                    publish: bookInfo.publisher,\r\n                    claim: bookInfo.claim,\r\n                    user: userId,\r\n                    userName: userName\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n//            console.log(results);\r\n            setRentList(results);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, historyLoading, historyError]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        }, [userList]\r\n    );\r\n*/\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        if (a1.rentDate > a2.rentDate)\r\n            return true;\r\n        else if (a1.rentDate < a2.rentDate)\r\n            return false;\r\n        return a1.title > a2.title;\r\n    }\r\n\r\n/*\r\n    async function updateDoc()\r\n    {\r\n        setInitialized(true);\r\n    }\r\n*/\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const claim = rent[\"claim\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n    function setProperty(index, value)\r\n    {\r\n        console.log(index);\r\n        console.log(value);\r\n        switch (index)\r\n        {\r\n            case 0:\r\n                setYear(value);\r\n                break;\r\n            case 1:\r\n                setMonth(parseInt(value));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(function () {\r\n        setQuery(yearValue.toString() + \"-\" + monthValue.toString().padStart(2, \"0\"))\r\n\r\n    }, [yearValue, monthValue]\r\n    );\r\n\r\n    useEffect(function () {\r\n        async function search()\r\n        {\r\n            console.log(\"Search\")\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/history\";\r\n                const param = {\"period\": query};\r\n                const response = await props.doc.requestGet(url, param);\r\n                console.log(response);\r\n\r\n                const books = response.data.return.books;\r\n                let results = [];\r\n                let retDate = \"\";\r\n                for (let i = 0 ; i < books.length ; i++)\r\n                {\r\n                    const book = books[i];\r\n                    const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                    if (\"_RETURN_DATE\" in book)\r\n                    {\r\n                        retDate = book._RETURN_DATE;\r\n                    }\r\n                    let resultObject = {\r\n                        index: i,\r\n                        text: resultString,\r\n                        title: book.BOOKNAME,\r\n                        id: book.BARCODE,\r\n        //                rent: getBookState(props.text, book..toString()),\r\n                        rentDate: book.RENT_DATE,\r\n                        retDate: retDate,\r\n                        author: book.AUTHOR,\r\n                        totalName: book.TOTAL_NAME,\r\n                        claim_num: book.CLAMENUM,\r\n                        publish: book.PUBLISH,\r\n                        claim: book.CLAIM,\r\n                        user: book.USER,\r\n                        userName: book.USER_NAME\r\n                    };\r\n                    results.push(resultObject);\r\n                }\r\n                results.sort(compare);\r\n                setRentList(results);\r\n            }\r\n            else\r\n            {\r\n                var queryTo;\r\n                const nextMonth = monthValue + 1\r\n                queryTo = yearValue.toString() + \"-\" + nextMonth.toString().padStart(2, \"0\")\r\n                setFromTime(query)\r\n                setToTime(queryTo)\r\n                console.log(query)\r\n                console.log(queryTo)\r\n\r\n                try {\r\n                    await loadHistory();\r\n                }\r\n                catch (e)\r\n                {\r\n                    console.warn(e.name);\r\n                }\r\n\r\n    /*\r\n                for (const index in rent)\r\n                {\r\n                    const userId = rent[index][\"user\"];\r\n                    let userName;\r\n                    if (userList && userId in userList)\r\n                        userName = userList[userId].name;\r\n                    else\r\n                        userName = \"\"\r\n                    rent[index][\"userName\"] = userName;\r\n                    console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n                }\r\n                setRentList(rent);\r\n    */\r\n            }\r\n        }\r\n        search();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery]\r\n    );\r\n\r\n    function movePrev()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month > 1)\r\n        {\r\n            month -= 1\r\n        }\r\n        else\r\n        {\r\n            year -= 1;\r\n            month = 12;\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    function moveNext()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month < 12)\r\n        {\r\n            month += 1\r\n        }\r\n        else\r\n        {\r\n            year += 1\r\n            month = 1\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"searchRange\">\r\n                <div className=\"page\" id = \"page\">\r\n                    <NavigateBeforeIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {movePrev();} }/>\r\n                </div>\r\n                <select name=\"year\" id=\"year\" className=\"dropdown\" onChange={(event) => {setProperty(0, event.target.value);}}/>\r\n                <select name=\"month\" id=\"month\" className=\"dropdown\" onChange={(event) => {setProperty(1, event.target.value);}}/>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {moveNext();} }/>\r\n                    </div>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue={searchQuery} list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\nimport { Navigate } from 'react-router-dom'\r\nimport UserInfo from \"../UserInfo\";\r\n\r\nfunction NewMember(props) {\r\n//    const [userText, setUserText] = useState(\"\");\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n//    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n//    const [userList, setUserList] = useState({});\r\n//    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized || !props.doc.serverAvailable)\r\n            {\r\n                return;\r\n            }\r\n            import(\"./PageServer.css\");\r\n            console.log(\"=======================================\");\r\n            console.log(\"NewMember initialize\");\r\n            prepareNewMember();\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n*/\r\n\r\n    function prepareNewMember()\r\n    {\r\n        var info = {};\r\n        info.USER_CODE = \"\";\r\n        info.USER_NAME = \"\";\r\n        info.PHONE_NUMBER = \"\";\r\n        info.EMAIL = \"\";\r\n        info.ADDRESS = \"\";\r\n        info.NOTICE = \"\";\r\n        info.USER_LEVEL = -1;\r\n        setUserInfo(info);\r\n    }\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n*/\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n\r\n        const prop = toastProp;\r\n        var text\r\n        if (response.data.return === \"OK\")\r\n        {\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.regSuccess;\r\n            prepareNewMember()\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.regFail;\r\n        }\r\n        prop.autoClose = 3000;\r\n        toast.info(text, prop);\r\n    }\r\n    if (!props.doc.initialized || !props.doc.serverAvailable)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.newMember}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                {props.doc.serverAvailable &&\r\n                    <UserInfo text={props.text} doc={props.doc} info={userInfo} refresh={refresh}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMember;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.dueDate = \"\";\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async requestGet(url, param)\r\n    {\r\n        param.os = navigator.platform;\r\n        const obj = {\"params\": param};\r\n        console.log(\"Request GET : \" + url);\r\n        console.log(obj);\r\n        const response = await axios.get(url, obj);\r\n        return response;\r\n    }\r\n\r\n    async requestPost(url, param)\r\n    {\r\n        console.log(\"Request POST: \" + url);\r\n        param.os = navigator.platform;\r\n        console.log(param);\r\n        const response = await axios.post(url, param);\r\n\r\n        return response;\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n//        const response = await axios.get(\"https://ipv4.seeip.org/jsonip\");\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\")\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        return;\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return;\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            this.serverAvailable = true;\r\n            axios.get(query, {\"params\": {\"os\": navigator.platform, }})\r\n                .then( (response) => {\r\n                    console.log(\"Server connected\");\r\n                    console.log(response.data);\r\n                    this.admin = response.data.admin;\r\n                    this.dueDate = response.data.dueDate;\r\n                    this.initialized = true;\r\n                })\r\n                .catch(error => {\r\n                  const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n                  window.open(query);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        console.log(serverInfo)\r\n        this.serverInfo = serverInfo;\r\n        this.serverInfo = {}\r\n        this.serverInfo.globalIp = serverInfo.globalIp;\r\n\r\n        if (serverInfo.proxy)\r\n        {\r\n            this.serverInfo.localIp = \"libserver.hkmcclibrary.duckdns.org\";\r\n            this.serverInfo.port = 443;\r\n        }\r\n        else\r\n        {\r\n            this.serverInfo.localIp = serverInfo.localIp;\r\n            this.serverInfo.port = serverInfo.port;\r\n        }\r\n\r\n\r\n        console.log(this.serverInfo);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = book;\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n//        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\" && state !== 1 && state !== 3)\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n//           console.log(userId);\r\n//           console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n                this.user[userId][\"rent\"] += 1;\r\n            else\r\n                this.user[userId][\"rent\"] = 1;\r\n        }\r\n        console.log(this.user);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\" ||\r\n            userInfo['level'] === 2)\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    async getRent(userId = undefined) {\r\n        let ret = [];\r\n        if (this.serverAvailable) {\r\n            const url = \"https://\" + this.serverInfo.localIp + \":\" +\r\n                this.serverInfo.port + \"/book\";\r\n            const param = {\"user\": userId};\r\n            const result = await this.requestGet(url, param);\r\n            console.log(result);\r\n            if (\"books\" in result.data.return)\r\n            {\r\n                // BARCODE, BOOKNAME, LENT_DATE, RETURN_DATE, STATS\r\n                // id, title, rentDate, retData,  stat\r\n                for (const entry of result.data.return.books)\r\n                {\r\n                    console.log(entry);\r\n                    const book = {'id': entry.BARCODE, 'title': entry.BOOKNAME, 'claim': entry.CLAIM, 'rentDate': entry.LENT_DATE, 'retDate': entry.RETURN_DATE, 'stat': entry.STATS, 'extendCount': entry._EXTEND_COUNT}\r\n                    ret.push(book);\r\n                }\r\n//                ret = result.data.return.books;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Check \" + userId);\r\n            console.log(this.bookReady);\r\n            if (!this.bookReady)\r\n                return ret;\r\n    //        console.log(this.rent.length);\r\n            for (let i = 0 ; i < this.rent.length ; i++) {\r\n                const entry = this.rent[i];\r\n                if (userId !== undefined && entry.user_id !== userId)\r\n                    continue;\r\n    //            console.log(entry)\r\n                if (entry.state !== \"1\" && entry.state !== \"3\" && entry.state !== 1 && entry.state !== 3)\r\n                    continue;\r\n    //            console.log(entry);\r\n                const id = entry[\"book_id\"];\r\n                const book = this.book[id];\r\n    //            console.log(book)\r\n                let retEntry = {}\r\n                retEntry[\"id\"] = book._id\r\n                retEntry[\"title\"] = book.title\r\n                retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"claim\"] = book.claim\r\n                retEntry[\"user\"] = entry.user_id;\r\n                ret.push(retEntry)\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n    }\n\n    checkLogIn(user, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = user[\"encrypted_email\"];\n            const phoneDb = user[\"encrypted_phone\"];\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \" ; SameSite=Lax ;\" ;\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./DropdownServer.css\");\r\n            }\r\n            if (dropdown !== props.dropdown)\r\n            {\r\n                console.log(\"User clicked \" + props.doc.logged);\r\n                console.log(props.dropdown);\r\n                setClick(!click);\r\n                setDropdown(props.dropdown);\r\n            }\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!click)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n        }, [props.dropdown, dropdown, click, props.doc.logged]\r\n    );\r\n\r\n    const logOut = () =>\r\n    {\r\n        setClick(false);\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (\r\n            <div id='dropdown-menu' onClick={() => { setClick(!click)}} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\" onClick={() => setClick(false)}>\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {props.doc.admin &&\r\n                    <>\r\n                    <hr className=\"hline\"/>\r\n                    <Link className='menu-items' to=\"/userSearch\" onClick={() => setClick(false)}>\r\n                        {props.text.userSearch}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentalSituation\" onClick={() => setClick(false)}>\r\n                        {props.text.situation}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentHistory\" onClick={() => setClick(false)}>\r\n                        {props.text.history}\r\n                    </Link>\r\n                    </>\r\n                }\r\n                {props.doc.serverAvailable && props.doc.admin &&\r\n                    <Link className='menu-items' to=\"/newMember\" onClick={() => setClick(false)}>\r\n                        {props.text.newMember}\r\n                    </Link>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items' onClick={() => logOut()}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar(props) {\r\n    const [dropdown, setDropdown] = useState(false)\r\n\r\n    const onClick = () => {\r\n        const maxWidth = document.getElementById(\"navbar\").style.maxWidth;\r\n        console.log(\"maxWidth\");\r\n        console.log(maxWidth);\r\n        console.log(document.getElementById(\"navbar\").style.width);\r\n        setDropdown(!dropdown);\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <div className='menu' onClick={onClick} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc} dropdown={dropdown}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentalSituation from \"./pages/RentalSituation\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\nimport NewMember from \"./pages/NewMember\";\r\n//import Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {SERVER_QUERY} from \"./api/query.js\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query.js\";\r\n//import {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query_test.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            console.log(\"Platform: \");\r\n            console.log(navigator.platform);\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n            setInitialized(true);\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n//            console.log(\"Login check \" + context.cookie.password);\r\n            const user = userData.user\r\n//            const user = userData.user_test\r\n//            console.log(user);\r\n            if (context.cookie.password && context.checkLogIn(user, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(\"Rent Error\");\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n                doc.setRent(rentData.rents)\r\n//                doc.setRent(rentData.rent_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.books)\r\n//                doc.setBook(bookData.book_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n\r\n            console.log(serverData);\r\n            console.log(initialized);\r\n            if (!serverData || !initialized)\r\n                return\r\n\r\n            console.log(\"Server info available\")\r\n            logMsg = logMsg + \"<p>Server info available</p>\";\r\n            console.log(serverData)\r\n            doc.setServerInfo(serverData.serverInfo)\r\n\r\n            if (!doc.serverAvailable)\r\n            {\r\n                console.log(\"Server is not available. Load books from cloud DB\");\r\n                loadBook();\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.LOADING;\r\n                prop.autoClose = false;\r\n                prop.toastId = loadingId;\r\n                toast.loading(textString.loading, prop);\r\n                doc.setLogCallback(updateLog);\r\n            }\r\n        }, [serverLoading, serverError, serverData, loadBook, initialized]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n//        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentalSituation\" element={<RentalSituation context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/newMember\" element={<NewMember context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}