{"version":3,"sources":["pages/Home.js","Util.js","api/query.js","pages/Notice.js","ListView.js","pages/Search.js","api/query_test.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","UserInfo.js","pages/UserSearch.js","pages/RentalSituation.js","pages/RentHistory.js","pages/NewMember.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","console","log","doc","setCallback","undefined","initialize","id","dangerouslySetInnerHTML","__html","text","homeText","SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","arguments","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getUserState","state","normal","overDue","stopped","getBookState","available","checkedOut","reserved","lost","damaged","given","notAvailable","deleted","compareRent","a1","a2","rentDate","title","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","NOTICE_QUERY","gql","CONTENT_QUERY","SERVER_QUERY","Notice","useState","searchResults","setSearchResults","displayedCodes","setDisplayedCodes","pageNum","setPageNum","selectedId","setSelectedId","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","useLazyQuery","loadSelected","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","className","date","colSpan","onClick","_id","notice","content","map","fontSize","sx","color","showCallback","ListView","itemList","setItemList","displayList","setDisplayList","list","keyValue","detail","initialized","Search","inputText","setInputText","useDebounce","searchQuery","selectedRef","useRef","bookList","setBookList","rentList","setRentList","setBookState","bookStateRef","needConfirm","setNeedConfirm","needConfirmRef","queryRequest","toggleQueryRequest","useParams","updateDoc","rl","rented","rent","push","code","book_id","retDate","return_date","key","bl","books","book","name","num","author","claim","claim_num","totalName","series","category","publisher","publish","isOpen","serverAvailable","findBooks","results","btoa","url","serverInfo","localIp","port","obj","axios","get","response","return","resultString","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","resultObject","index","BARCODE","AUTHOR","TOTAL_NAME","CLAMENUM","PUBLISH","CLAIM","row","includes","entry","parseInt","sort","a","b","sr","current","query","selectId","setState","ipAddr","portNum","post","then","hidden","entryId","flags","rowSpan","admin","disabled","confirmAction","confirm","cancel","bookSearch","placeholder","searchBook","value","onChange","event","target","entries","BOOK_QUERY","RENT_QUERY","USERS_QUERY","USER_QUERY","HISTORY_QUERY","HISTORY_PERIOD_QUERY","State","LoggedOut","LoggingIn","LoggedIn","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","history","setHistory","autoLogin","setAutoLogin","loadUser","userData","loadHistory","historyData","expireDate","setExpireDate","setTitle","logged","userInfo","getRent","adminMode","userSearch","checkOut","logIn","context","cookie","Date","setTime","getTime","days","toGMTString","compare","func","bookReady","rentReady","hist","rentLogs","rentLog_tests","book_state","return_data","split","showEntries","retText","bookName","Fragment","to","showRented","noEntry","toUpperCase","toast","isActive","prop","checkLogIn","user_test","type","TYPE","SUCCESS","logInSucceed","document","ERROR","logInFail","render","toastId","update","info","idHolder","onInput","pwHolder","checked","cookieString","toggleAutoLogin","dueDate","LoggingOut","CheckOut","bookText","setBookText","setUserData","scannedBook","setScannedBook","notifyRequest","setNotifyRequest","barcode","setBarcode","setRented","interval","setInterval","scan","clearInterval","notify","RENTED","getElementById","dismiss","updateUser","JSON","stringify","user","logOut","imageCaptured","e","files","file","INFO","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","getBase64","img","method","mode","crossDomain","headers","withCredentials","credentials","image","succeededToOpen","INVALID_BOOK","showBook","bookId","search","USER_CODE","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","accept","capture","inputMode","pattern","bookHolder","confirmRent","ret","rentSucceed","NOT_AVAILABLE","Return","returned","setReturned","NOT_RENTED","confirmReturn","returnSucceed","UserInfo","setDisabled","setUserInfo","setProperty","PHONE_NUMBER","EMAIL","ADDRESS","USER_LEVEL","NOTICE","Object","keys","registeredDate","REG_DATE","phone","email","address","notice_","level","kid","adult","save","confirmSave","refresh","userLoading","userListData","userError","userList","setUserList","extend","users","user_tests","setUser","getUser","extendCount","forceSelect","showUsers","showUser","findUsers","toLowerCase","input","trim","RentHistory","RETURN_DATE","STATS","LENT_DATE","USER","userName","situation","fromTime","setFromTime","toTime","setToTime","historyLoading","historyError","yearValue","setYear","monthValue","setMonth","setQuery","year","month","option","createElement","add","thisYear","getFullYear","thisMonth","getMonth","bookInfo","user_id","timestamp","padStart","RENT_DATE","nextMonth","queryTo","warn","movePrev","moveNext","NewMember","prepareNewMember","newMember","regSuccess","regFail","Doc","userReady","logCallback","ip","checkServerIp","globalIp","callback","checkState","checkRent","_EXTEND_COUNT","retEntry","rent_date","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","join","decodeURIComponent","passwordTyped","matched","emailDb","phoneDb","sign","numberString","isNaN","DropDown","dropdown","setDropdown","click","setClick","menu","classList","remove","home","checkOutStatus","Navbar","isMobile","maxWidth","style","width","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","serverLoading","serverError","serverData","loadBook","bookLoading","bookError","bookData","notifyInit","updateLog","process","APP_NAME","APP_VERSION","lang","navigator","languages","ts","kr","en","updateIpAddr","nothing","password","setRent","rent_tests","setBook","book_tests","setServerInfo","LOADING","setLogCallback","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","path","element","UserSearch","RentalSituation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","options","Authorization","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.42263687.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n}\r\n\r\nexport default Home;\r\n","export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\" || state === 0)\r\n        return text.normal;\r\n    else if (state === \"1\" || state === 1)\r\n        return text.overDue;\r\n    else if (state === \"2\" || state === 2)\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    switch (state)\r\n    {\r\n        case \"0\":\r\n        case 0:\r\n            return text.available;\r\n        case \"1\":\r\n        case 1:\r\n            return text.checkedOut;\r\n        case \"2\":\r\n        case 2:\r\n            return text.reserved;\r\n        case \"3\":\r\n        case 3:\r\n            return text.overDue;\r\n        case \"4\":\r\n        case 4:\r\n            return text.lost;\r\n        case \"5\":\r\n        case 5:\r\n            return text.damaged;\r\n        case \"6\":\r\n        case 6:\r\n            return text.given;\r\n        case \"7\":\r\n        case 7:\r\n        default:\r\n            return text.notAvailable;\r\n        case \"8\":\r\n        case 8:\r\n            return text.deleted;\r\n    }\r\n}\r\n\r\nexport const compareRent = function(a1, a2)\r\n{\r\n    if (a1.rentDate > a2.rentDate)\r\n        return true;\r\n    else if (a1.rentDate < a2.rentDate)\r\n        return false;\r\n    return a1.title > a2.title;\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        users (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (limit: 20000, query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_data\n            user_id\n        }\n    }`;\n\nexport const HISTORY_PERIOD_QUERY = gql`\n    query findLogs ($fromTime: String!, $toTime: String!) {\n        rentLogs(limit: 20000, query: {AND: [{timestamp_gte: $fromTime}, {timestamp_lt: $toTime}]}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_data\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div id=\"noticeContent\">\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"noticeList\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        setPageNum(0);\n    }, [props.keyValue]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList, props.detail)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { MAX_SEARCH_ENTRY, getBookState, toUtf8 } from \"../Util\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ListView from \"../ListView\";\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(inputText, 300);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const [bookState, setBookState] = useState(0);\r\n    const bookStateRef = useRef(0);\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const needConfirmRef = useRef(false);\r\n\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setInputText(id);\r\n            }\r\n            else\r\n            {\r\n                setInputText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    const obj = {\"params\": {\"book\": btoa(toUtf8(text)), \"match\":false}};\r\n                    console.log(\"=======================\");\r\n                    console.log(\"Request book list\");\r\n                    console.log(obj);\r\n                    const response = await axios.get(url, obj);\r\n                    console.log(response)\r\n                    if (!(\"books\" in response.data.return))\r\n                        return results;\r\n                    const books = response.data.return.books;\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        let retDate = \"\";\r\n                        if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAMENUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM,\r\n                            state: book._STATE\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n\r\n                    for (let i = 0 ; i < bookList.length ; i++) {\r\n                        const row = bookList[i];\r\n                        if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                        if ((row.name && row.name.toString().includes(text)) ||\r\n                            (row.code === text))\r\n                        {\r\n                            let resultString = `${row.name} ${row.claim_num}`;\r\n                            let retDate = \"\";\r\n                            let state = \"0\";\r\n                            for (const entry of rentList)\r\n                            {\r\n                                if (entry.code === row.code)\r\n                                {\r\n                                    state = entry.state;\r\n                                    if (state === \"1\" || state === \"3\")\r\n                                    {\r\n                                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            let resultObject = {\r\n                                index: i,\r\n                                text: resultString,\r\n                                name: row.name,\r\n                                code: row.code.toString(),\r\n                                rent: getBookState(props.text, state),\r\n                                retDate: retDate,\r\n                                author: row.author,\r\n                                totalName: row.totalName,\r\n                                claim_num: row.claim_num,\r\n                                publish: row.publish,\r\n                                claim: row.claim,\r\n                                state: parseInt(state)\r\n                            };\r\n                            results.push(resultObject);\r\n                        }\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                console.log(\"Refresh\");\r\n                if (searchQuery) {\r\n                    let sr = await findBooks(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, bookList, rentList, props, queryRequest]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           bl.push({code: book._id, name: book.title, num: book.num, author: book.author, claim: book.claim,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(books.length);\r\n        setBookList(bl);\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    function setState(state)\r\n    {\r\n        console.log(\"Set state \" + state.toString());\r\n        needConfirmRef.current = true;\r\n        setNeedConfirm(true);\r\n        setBookState(state);\r\n        bookStateRef.current = state;\r\n        console.log(selectedId.toString() + needConfirmRef.current);\r\n    }\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/book\";\r\n        var obj = {};\r\n        obj[\"book\"] = selectedRef.current;\r\n        obj[\"state\"] = bookStateRef.current;\r\n        console.log(\"=======================\");\r\n        console.log(\"Change book state\");\r\n        console.log(obj);\r\n        await axios.post(url, obj).then( response => {\r\n            console.log(response);\r\n        });\r\n\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        const flags = [false, false, false, false, false, false, false, false, false, false]\r\n        flags[result.state] = true;\r\n        if (result.state === 1 || result.state === 2 || result.state === 3)\r\n            flags[0] = true;\r\n        if (!hidden)\r\n            console.log(flags)\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\"> {result.text}</td>\r\n                        <td className=\"searchRent\"> {result.rent} </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr>\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName} <b>{result.name}</b> { result.claim_num} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.code} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim} </td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n                <div hidden={!props.doc.serverAvailable || !props.doc.admin}>\r\n                    <button className=\"bookStates\" id = \"0\" disabled={flags[0]} onClick={() => setState(0)}> {props.text.available} </button>\r\n                    <button className=\"bookStates\" id = \"4\" disabled={flags[4]} onClick={() => setState(4)}> {props.text.lost} </button>\r\n                    <button className=\"bookStates\" id = \"5\" disabled={flags[5]} onClick={() => setState(5)}> {props.text.damaged} </button>\r\n                    <button className=\"bookStates\" id = \"6\" disabled={flags[6]} onClick={() => setState(6)}> {props.text.given} </button>\r\n                    <button className=\"bookStates\" id = \"7\" disabled={flags[7]} onClick={() => setState(7)}> {props.text.notAvailable} </button>\r\n                    <button className=\"bookStates\" id = \"8\" disabled={flags[8]} onClick={() => setState(8)}> {props.text.deleted} </button>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirmRef.current}>\r\n                    <div id=\"bookName\"> {getBookState(props.text, bookStateRef.current)} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results)\r\n    {\r\n        console.log(\"Redraw \" + needConfirmRef.current);\r\n        return results.map((result) => showEntry(result))\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\">\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n            </div>\r\n            <ListView keyValue={searchQuery} list={searchResults} detail={selectedId + needConfirm} showCallback={(entries, detail) => { return showEntries(entries); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        book_tests (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rent_tests (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        user_tests (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user_test (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLog_tests (limit: 20000, query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_data\n            user_id\n        }\n    }`;\n\nexport const HISTORY_PERIOD_QUERY = gql`\n    query findLogs ($fromTime: String!, $toTime: String!) {\n        rentLog_tests(limit: 20000, query: {AND: [{timestamp_gte: $fromTime}, {timestamp_lt: $toTime}]}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_data\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notice_tests (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice_test (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo_test {\n            _id\n            globalIp\n            localIp\n            port\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, compareRent } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\n//import {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(() => {\r\n            async function func() {\r\n                console.log(\"User data updated \");\r\n                await compare();\r\n            }\r\n            func();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n            let hist = [];\r\n//            const rentLogs = historyData.rentLogs;\r\n            const rentLogs = historyData.rentLog_tests;\r\n            for (let i = 0 ; i < rentLogs.length ; i++)\r\n            {\r\n                const entry = rentLogs[i];\r\n                if (entry.book_state !== \"1\" && entry.book_state !== 1)\r\n                    continue;\r\n                if (! (\"return_data\" in entry) || ! entry.return_data)\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const title = (id in props.doc.book) ? props.doc.book[id][\"title\"] : \"N/A\";\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                const retDate = entry.return_data;\r\n                hist.push({\"id\": id, \"title\": title, \"rentDate\": date, \"retDate\": retDate});\r\n\r\n            }\r\n            hist.sort(compareRent);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n//        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result, retText) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{retText}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        await compare();\r\n    }\r\n\r\n    const compare = async () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData.user_test, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user_test);\r\n\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults, props.text.dueDate) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries, props.text.returnDate); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [userData, setUserData] = useState({});\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [rented, setRented] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n//            console.log(props.doc.serverInfo);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            import(\"./PageServer.css\");\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(book)\r\n                            setBarcode(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                setState(State.LoggedOut);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n                setBarcode(\"\")\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (state !== State.LoggedIn)\r\n                setBarcode(userText);\r\n        }, [state, userText]\r\n    );\r\n\r\n    const updateUser = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const obj = {\"params\": {\"user\": userText, \"data\":\"nothing\"}};\r\n        console.log(obj);\r\n        const response = await axios.get(url, btoa(JSON.stringify(obj)));\r\n        const user = response.data.return;\r\n\r\n        setUserData(user);\r\n        console.log(user);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        console.log(\"LOGIN\");\r\n        console.log(userText);\r\n        if (userText.length === 0)\r\n            return;\r\n        setState(State.LoggingIn);\r\n        const id = userText.toUpperCase();\r\n        setUserId(id);\r\n        updateUser(id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Log Out\");\r\n        setUserData({});\r\n        setUserText(\"\");\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n        setRented([])\r\n        document.getElementById('barcodeScan').value= null;\r\n    }\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            console.log(url)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(response);\r\n                        console.log(book);\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            console.log(\"Failed\");\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR});\r\n                            setScannedBook({});\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            console.log(book.books)\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Barcode: \" + barcode);\r\n            if (barcode.length === 0)\r\n                return;\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                if (barcode.search(\"AA\") === 0 || barcode.search(\"AB\") === 0 )\r\n                {\r\n                    setUserText(barcode);\r\n                }\r\n            }\r\n            else if (barcode.search(\"HK\") === 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc, state]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n        document.getElementById('barcodeScan').value= null;\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE,\r\n                user: userId\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return\r\n            console.log(\"Rent confirmed\");\r\n            console.log(ret)\r\n\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.rentSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n                rented.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n                console.log(rented)\r\n                setRented(rented)\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n            updateUser(userId);\r\n        });\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n    /*\r\n        return (<React.Fragment key={index + \"Fragment\"}>\r\n                    <tr key={index}>\r\n                        <td className=\"bookCell\"> {rent.id} </td>\r\n                        <td colSpan=\"3\" className=\"bookCell\"> {rent.name} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    */\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    <div id=\"dueDate\">\r\n                    {props.text.dueDate} : {props.doc.dueDate}\r\n                    </div>\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n    /*\r\n                    <table><tbody>\r\n                        {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                    </tbody></table>\r\n    */\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        document.getElementById('barcodeScan').value= null;\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"barcodeScan\" hidden>\r\n                        <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                        <span>\r\n                        <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                        </span>\r\n                    </label>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\" hidden>\r\n                        HK\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {rented.length > 0 &&\r\n                    <ListView list={rented} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n                <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.logOut} </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n//    const [initialized, setInitialized] = useState(false);\r\n//    const [userId, setUserId] = useState(\"\");\r\n//    const [state, setState] = useState(State.LoggedOut);\r\n//    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n//                     { \"variables\": { \"_id\": userId } });\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [returned, setReturned] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            import(\"./PageServer.css\")\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(book.search(\"HK\"))\r\n                            if (book.search(\"HK\") === 0) {\r\n                                console.log(barcode + \" -> \" + book)\r\n                                setBarcode(book)\r\n                            }\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc]\r\n    );\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR})\r\n                            setScannedBook({})\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 1 || scannedBook._STATE === 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Returned updated\");\r\n            console.log(returned);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            console.log(\"Update return list\");\r\n            const bookId = \"HK\" + bookText;\r\n            console.log(\"Search book1 \" + bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n            const obj = {\"params\": {\"books\": returned}};\r\n            console.log(obj);\r\n            axios.get(url, obj).then( response => {\r\n//                    const book = response.data.return;\r\n//                    console.log(book)\r\n                }\r\n            );\r\n        },\r\n        [returned]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return;\r\n            console.log(ret);\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.returnSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n                returned.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n                console.log(returned)\r\n                setReturned(returned)\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\" hidden>\r\n                        HK\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {returned.length > 0 &&\r\n                    <ListView list={returned} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toUtf8 } from \"./Util\";\nimport \"./UserInfo.css\";\n\nfunction UserInfo(props) {\n    const [needConfirm, setNeedConfirm] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(function() {\n        console.log(\"User Info\");\n        console.log(props.info);\n        document.getElementById('userName').value = props.info.USER_NAME ? props.info.USER_NAME : \"\";\n        document.getElementById('phone').value = props.info.PHONE_NUMBER ? props.info.PHONE_NUMBER : \"\";\n        document.getElementById('email').value = props.info.EMAIL ? props.info.EMAIL : \"\";\n        document.getElementById('address').value = props.info.ADDRESS ? props.info.ADDRESS : \"\";\n        document.getElementById('notice_').value = props.info.NOTICE ? props.info.NOTICE : \"\";\n        document.getElementById('user_level').value = props.info.USER_LEVEL;\n        setUserInfo({\"USER_CODE\": props.info.USER_CODE});\n        setDisabled(true);\n\n    }, [props.info]);\n\n    function setProperty(index, value)\n    {\n        console.log(index);\n        console.log(value);\n        var info = userInfo;\n        switch (index)\n        {\n        case 0:\n            info.USER_NAME = value;\n            break;\n        case 1:\n            info.PHONE_NUMBER = value;\n            break;\n        case 2:\n            info.EMAIL = value;\n            break;\n        case 3:\n            info.ADDRESS = value;\n            break;\n        case 4:\n            info.USER_LEVEL = value;\n            break;\n        case 5:\n            info.NOTICE = value;\n            break;\n        default:\n            break;\n        }\n        const length = Object.keys(info).length;\n        console.log(length);\n//        if (length >= 1 && \"USER_LEVEL\" in info && info.USER_LEVEL >= 0 && info.USER_LEVEL <= 2)\n        if (length > 1)\n            setDisabled(false);\n        setUserInfo(info);\n    }\n\n    function confirmAction()\n    {\n        console.log(\"Save modification\");\n        console.log(userInfo);\n        const ipAddr = props.doc.serverInfo.localIp;\n        const portNum = props.doc.serverInfo.port;\n        if (ipAddr.length === 0 || portNum <= 0)\n            return;\n\n        const url = \"https://\" + ipAddr + \":\" +\n            portNum + \"/user\";\n\n        var obj = {};\n        console.log(userInfo)\n        for (const key in userInfo)\n        {\n            obj[key] = btoa(toUtf8(userInfo[key]));\n        }\n        axios.post(url, obj).then( response => {\n            console.log(response);\n            props.refresh(response);\n        });\n        setNeedConfirm(false);\n    }\n\n    function cancelAction()\n    {\n        setNeedConfirm(false);\n    }\n\n    return (\n        <div>\n            <table><tbody>\n                <tr key=\"Name\">\n                    <td> {props.text.name} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"userName\" onChange={(event) => {setProperty(0, event.target.value);}} />\n                    </td>\n                </tr>\n                {\"REG_DATE\" in props.info &&\n                    <tr key=\"Register\">\n                        <td> {props.text.registeredDate} </td>\n                        <td colSpan=\"3\" className=\"data\">\n                            {props.info.REG_DATE}\n                        </td>\n                    </tr>\n                }\n                <tr key=\"Phone\">\n                    <td> {props.text.phone} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"phone\" onChange={(event) => {setProperty(1, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Email\">\n                    <td> {props.text.email} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"email\" onChange={(event) => {setProperty(2, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Address\">\n                    <td> {props.text.address} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"address\" onChange={(event) => {setProperty(3, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Notice\">\n                    <td> {props.text.notice_} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"notice_\" onChange={(event) => {setProperty(5, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Level\">\n                    <td> {props.text.level} </td>\n                    <td colSpan=\"3\" className=\"cell\">\n                        <select name=\"User Level\" id=\"user_level\" className=\"dropdown\" onChange={(event) => {setProperty(4, event.target.value);}}>\n                            <option value=\"0\"> {props.text.kid} </option>\n                            <option value=\"1\"> {props.text.adult} </option>\n                            <option value=\"2\"> {props.text.admin} </option>\n                        </select>\n                    </td>\n                </tr>\n            </tbody></table>\n           <button id=\"modify\" hidden={needConfirm} onClick={async () => setNeedConfirm(true)} disabled={disabled}> {props.text.save} </button>\n            <div id=\"checkModify\" hidden={!needConfirm}>\n                <div id=\"noticeMsg\"> {props.text.confirmSave} </div>\n                <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\n                <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\n            </div>\n        </div>\n    );\n}\nexport default UserInfo;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, MAX_SEARCH_ENTRY, getUserState, toUtf8 } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate, useParams } from 'react-router-dom'\r\n//import {USERS_QUERY} from \"../api/query.js\";\r\nimport {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport UserInfo from \"../UserInfo\";\r\nimport axios from \"axios\";\r\n\r\n//var rentList = [];\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 300);\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n//    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const { id } = useParams();\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                return;\r\n            }\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n//                const users = userListData.users;\r\n                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    async function extend(key)\r\n    {\r\n        console.log(\"Extend \" + key);\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/extend\";\r\n        var obj = {};\r\n        obj[\"book\"] = key\r\n\r\n        const ret = await axios.post(url, obj);\r\n        console.log(\"Extended\")\r\n        console.log(ret)\r\n        selectId(selectedRef.current, true);\r\n        if (ret.data.return === \"SUCCESS\")\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.extend, prop);\r\n        }\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const extendCount = rent.extendCount;\r\n        const key = index.toString();\r\n//                        <td colSpan={props.doc.serverAvailable?\"3\":\"2\"} className=\"bookName\">{bookName}</td>\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan={props.doc.serverAvailable?\"2\":\"3\"} className=\"bookName\">{bookName}</td>\r\n                        {props.doc.serverAvailable &&\r\n                            <td className=\"bookName\"><button className=\"extend\" onClick={() => extend(id)}>{props.text.extend + \" (\" + extendCount.toString() + \")\"}</button></td>\r\n                        }\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id, forceSelect = false) => {\r\n        const rent = await props.doc.getRent(id);\r\n        console.log(rent);\r\n        if (selectedRef.current === -1 || selectedRef.current !== id || forceSelect )\r\n        {\r\n            console.log(\"Select \" + id);\r\n//            setSelectedId(id);\r\n            selectedRef.current = id;\r\n            console.log(\"Set Rent List\");\r\n            console.log(rent)\r\n            setRentList(rent);\r\n//            rentList = rent;\r\n        }\r\n        else if (searchResults.length > 1)\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n//            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n            setRentList([]);\r\n//            rentList = [];\r\n        }\r\n    }\r\n\r\n    const showUser = (user, detail, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div key={key}>\r\n                    <table><tbody>\r\n                        <tr key={user.id} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user, detail) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result, detail) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, detail, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (user, detail) => {\r\n        console.log(\"Detail\");\r\n        console.log(user);\r\n        return (<>\r\n                    {props.doc.serverAvailable &&\r\n                        <UserInfo text={props.text} doc={props.doc} info={user} refresh={refresh}/>\r\n                    }\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        detail.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        detail.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a.name > b.name; });\r\n                console.log(results);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                const input = userText.trim()\r\n                console.log(\"Query \" + input + \" \" + searchQuery)\r\n                if (input.length > 0 && searchQuery) {\r\n\r\n                    let sr;\r\n                    if (props.doc.serverAvailable)\r\n                    {\r\n                        console.log(\"from CLIB\")\r\n                        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/users\";\r\n                        const obj = {\"params\": {\"user\": btoa(toUtf8(input))}};\r\n                        console.log(obj);\r\n                        const response = await axios.get(url, obj);\r\n                        const users = response.data.return.data;\r\n                        console.log(response.data.return);\r\n                        sr = [];\r\n                        if (users) {\r\n                            for (const entry of response.data.return.data)\r\n                            {\r\n                                console.log(entry);\r\n                                let user = entry;\r\n                                user.id = entry.USER_CODE;\r\n                                user.name = entry.USER_NAME;\r\n                                user.state = getUserState(props.text, entry.USER_STATE);\r\n                                user.rent = entry._RENT.length;\r\n                                sr.push(user);\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"from DB\")\r\n                        sr = await findUsers(searchQuery);\r\n                    }\r\n\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                   else\r\n                       selectId(0);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n       [searchQuery, props, userList, queryRequest, userText]\r\n    );\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView keyValue={searchQuery} list={searchResults} detail={rentList} showCallback={(entries, detail) => { return showUsers(entries, detail); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getBookState } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\n//import {USERS_QUERY} from \"../api/query.js\";\r\nimport {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n//                const users = userListData.users;\r\n                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userList]\r\n    );\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        return a1.rentDate > a2.rentDate;\r\n    }\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.serverAvailable)\r\n        {\r\n            let results = [];\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": \"*\", \"match\":false}};\r\n//            console.log(obj);\r\n            const response = await axios.get(url, obj);\r\n//           console.log(response)\r\n//            if (!(\"books\" in response.data.return))\r\n//                return results;\r\n            const books = response.data.return.books;\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                const state = book._STATE;\r\n                let retDate = \"\";\r\n                if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                {\r\n                    retDate = book.RETURN_DATE;\r\n                }\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: book.BOOKNAME,\r\n                    id: book.BARCODE,\r\n                    rent: getBookState(props.text, book.STATS.toString()),\r\n                    rentDate: book.LENT_DATE,\r\n                    retDate: retDate,\r\n                    author: book.AUTHOR,\r\n                    totalName: book.TOTAL_NAME,\r\n                    claim_num: book.CLAMENUM,\r\n                    publish: book.PUBLISH,\r\n                    claim: book.CLAIM,\r\n                    user: book.USER,\r\n                    userName: book.USER_NAME\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compare);\r\n            setRentList(results);\r\n        }\r\n        else\r\n        {\r\n\r\n            const rent = await props.doc.getRent();\r\n            console.log(\"Rent\");\r\n            console.log(rent);\r\n            rent.sort(compare);\r\n            for (const index in rent)\r\n            {\r\n                const userId = rent[index][\"user\"];\r\n                let userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                rent[index][\"userName\"] = userName;\r\n//                console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n            }\r\n            setRentList(rent);\r\n        }\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td colSpan=\"3\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"situation\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.situation}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue=\"\" list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\n//import {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query.js\";\r\nimport {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n//    const [initialized, setInitialized] = useState(false);\r\n    const [fromTime, setFromTime] = useState(\"\");\r\n    const [toTime, setToTime] = useState(\"\");\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [loadHistory, {loading: historyLoading, data: historyData, error: historyError }] = useLazyQuery(HISTORY_PERIOD_QUERY,\r\n            {\"variables\": { \"fromTime\" : fromTime, \"toTime\": toTime}});\r\n    const [userList, setUserList] = useState({});\r\n    const [yearValue, setYear] = useState(0);\r\n    const [monthValue, setMonth] = useState(0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [searchQuery] = useDebounce(query, 300);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            var i;\r\n            var option;\r\n            var year = document.getElementById('year')\r\n            var month = document.getElementById('month')\r\n            for (i = 1; i <= 12 ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                month.add(option, i);\r\n            }\r\n            const thisYear = new Date().getFullYear();\r\n            const thisMonth = new Date().getMonth() + 1;\r\n            const fromYear = 2017;\r\n\r\n            for (i = fromYear ; i <= thisYear ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                year.add(option, i);\r\n            }\r\n\r\n            console.log(thisYear);\r\n            console.log(thisMonth);\r\n            setYear(thisYear);\r\n            setMonth(thisMonth);\r\n            document.getElementById('year').value = thisYear;\r\n            document.getElementById('month').value = thisMonth;\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n//                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n//                const users = userListData.users;\r\n                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\")\r\n\r\n            if (!historyData)\r\n                return\r\n\r\n//            console.log(historyData.rentLog_tests)\r\n\r\n//            const books = historyData.rentLogs;\r\n            const books = historyData.rentLog_tests;\r\n            let results = [];\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const state = book.book_state;\r\n                if (state !== \"1\" && state !== 1)\r\n                    continue\r\n                if (!book.return_data || book.return_data.length === 0)\r\n                    continue\r\n//                console.log(book)\r\n                const bookId = book.book_id;\r\n                const userId = book.user_id;\r\n                var userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                var bookInfo;\r\n                if (bookId in props.doc.book)\r\n                {\r\n                    bookInfo = props.doc.book[bookId];\r\n                }\r\n                else\r\n                {\r\n                    bookInfo = {}\r\n                    bookInfo.author = \"\"\r\n                    bookInfo.totalName = \"\"\r\n                    bookInfo.claim_num = \"\"\r\n                    bookInfo.publish = \"\"\r\n                    bookInfo.title = \"\"\r\n                }\r\n                const resultString = `${bookInfo.title} ${bookInfo.claim_num}`;\r\n                retDate = book.return_data;\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: bookInfo.title,\r\n                    id: bookId,\r\n                    rentDate: book.timestamp,\r\n                    retDate: retDate,\r\n                    author: bookInfo.author,\r\n                    claim_num: bookInfo.claim_num,\r\n                    publish: bookInfo.publisher,\r\n                    claim: bookInfo.claim,\r\n                    user: userId,\r\n                    userName: userName\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n//            console.log(results);\r\n            setRentList(results);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, historyLoading, historyError]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        }, [userList]\r\n    );\r\n*/\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        if (a1.rentDate > a2.rentDate)\r\n            return true;\r\n        else if (a1.rentDate < a2.rentDate)\r\n            return false;\r\n        return a1.title > a2.title;\r\n    }\r\n\r\n/*\r\n    async function updateDoc()\r\n    {\r\n        setInitialized(true);\r\n    }\r\n*/\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td colSpan=\"3\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n    function setProperty(index, value)\r\n    {\r\n        console.log(index);\r\n        console.log(value);\r\n        switch (index)\r\n        {\r\n            case 0:\r\n                setYear(value);\r\n                break;\r\n            case 1:\r\n                setMonth(parseInt(value));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(function () {\r\n        setQuery(yearValue.toString() + \"-\" + monthValue.toString().padStart(2, \"0\"))\r\n\r\n    }, [yearValue, monthValue]\r\n    );\r\n\r\n    useEffect(function () {\r\n        async function search()\r\n        {\r\n            console.log(\"Search\")\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/history\";\r\n                const obj = {\"params\": {\"period\": query}};\r\n                console.log(obj);\r\n                const response = await axios.get(url, obj);\r\n                console.log(response);\r\n\r\n                const books = response.data.return.books;\r\n                let results = [];\r\n                let retDate = \"\";\r\n                for (let i = 0 ; i < books.length ; i++)\r\n                {\r\n                    const book = books[i];\r\n                    const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                    if (\"RETURN_DATE\" in book)\r\n                    {\r\n                        retDate = book.RETURN_DATE;\r\n                    }\r\n                    let resultObject = {\r\n                        index: i,\r\n                        text: resultString,\r\n                        title: book.BOOKNAME,\r\n                        id: book.BARCODE,\r\n        //                rent: getBookState(props.text, book..toString()),\r\n                        rentDate: book.RENT_DATE,\r\n                        retDate: retDate,\r\n                        author: book.AUTHOR,\r\n                        totalName: book.TOTAL_NAME,\r\n                        claim_num: book.CLAMENUM,\r\n                        publish: book.PUBLISH,\r\n                        claim: book.CLAIM,\r\n                        user: book.USER,\r\n                        userName: book.USER_NAME\r\n                    };\r\n                    results.push(resultObject);\r\n                }\r\n                results.sort(compare);\r\n                setRentList(results);\r\n            }\r\n            else\r\n            {\r\n                var queryTo;\r\n                const nextMonth = monthValue + 1\r\n                queryTo = yearValue.toString() + \"-\" + nextMonth.toString().padStart(2, \"0\")\r\n                setFromTime(query)\r\n                setToTime(queryTo)\r\n                console.log(query)\r\n                console.log(queryTo)\r\n\r\n                try {\r\n                    await loadHistory();\r\n                }\r\n                catch (e)\r\n                {\r\n                    console.warn(e.name);\r\n                }\r\n\r\n    /*\r\n                for (const index in rent)\r\n                {\r\n                    const userId = rent[index][\"user\"];\r\n                    let userName;\r\n                    if (userList && userId in userList)\r\n                        userName = userList[userId].name;\r\n                    else\r\n                        userName = \"\"\r\n                    rent[index][\"userName\"] = userName;\r\n                    console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n                }\r\n                setRentList(rent);\r\n    */\r\n            }\r\n        }\r\n        search();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery]\r\n    );\r\n\r\n    function movePrev()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month > 1)\r\n        {\r\n            month -= 1\r\n        }\r\n        else\r\n        {\r\n            year -= 1;\r\n            month = 12;\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    function moveNext()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month < 12)\r\n        {\r\n            month += 1\r\n        }\r\n        else\r\n        {\r\n            year += 1\r\n            month = 1\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"searchRange\">\r\n                <div className=\"page\" id = \"page\">\r\n                    <NavigateBeforeIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {movePrev();} }/>\r\n                </div>\r\n                <select name=\"year\" id=\"year\" className=\"dropdown\" onChange={(event) => {setProperty(0, event.target.value);}}/>\r\n                <select name=\"month\" id=\"month\" className=\"dropdown\" onChange={(event) => {setProperty(1, event.target.value);}}/>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {moveNext();} }/>\r\n                    </div>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue={searchQuery} list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\nimport { Navigate } from 'react-router-dom'\r\nimport UserInfo from \"../UserInfo\";\r\n\r\nfunction NewMember(props) {\r\n//    const [userText, setUserText] = useState(\"\");\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n//    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n//    const [userList, setUserList] = useState({});\r\n//    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized || !props.doc.serverAvailable)\r\n            {\r\n                return;\r\n            }\r\n            import(\"./PageServer.css\");\r\n            console.log(\"=======================================\");\r\n            console.log(\"NewMember initialize\");\r\n            prepareNewMember();\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n*/\r\n\r\n    function prepareNewMember()\r\n    {\r\n        var info = {};\r\n        info.USER_CODE = \"\";\r\n        info.USER_NAME = \"\";\r\n        info.PHONE_NUMBER = \"\";\r\n        info.EMAIL = \"\";\r\n        info.ADDRESS = \"\";\r\n        info.NOTICE = \"\";\r\n        info.USER_LEVEL = -1;\r\n        setUserInfo(info);\r\n    }\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n*/\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n\r\n        const prop = toastProp;\r\n        var text\r\n        if (response.data.return === \"OK\")\r\n        {\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.regSuccess;\r\n            prepareNewMember()\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.regFail;\r\n        }\r\n        prop.autoClose = 3000;\r\n        toast.info(text, prop);\r\n    }\r\n    if (!props.doc.initialized || !props.doc.serverAvailable)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.newMember}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                {props.doc.serverAvailable &&\r\n                    <UserInfo text={props.text} doc={props.doc} info={userInfo} refresh={refresh}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMember;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.dueDate = \"\";\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n//        const response = await axios.get(\"https://ipv4.seeip.org/jsonip\");\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\")\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return;\r\n        return;\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            this.serverAvailable = true;\r\n            axios.get(query, {timeout: 1000})\r\n                .then( (response) => {\r\n                    console.log(\"Server connected\");\r\n                    console.log(response.data);\r\n                    this.admin = response.data.admin;\r\n                    this.dueDate = response.data.dueDate;\r\n                    this.initialized = true;\r\n                })\r\n                .catch(error => {\r\n                  const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n                  window.open(query);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        console.log(serverInfo)\r\n        this.serverInfo = serverInfo;\r\n        console.log(this.serverInfo.globalIp);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = book;\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n//        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\" && state !== 1 && state !== 3)\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n//           console.log(userId);\r\n//           console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n                this.user[userId][\"rent\"] += 1;\r\n            else\r\n                this.user[userId][\"rent\"] = 1;\r\n        }\r\n        console.log(this.user);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\" ||\r\n            userInfo['level'] === 2)\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    async getRent(userId = undefined) {\r\n        let ret = [];\r\n        if (this.serverAvailable) {\r\n            const url = \"https://\" + this.serverInfo.localIp + \":\" +\r\n                this.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": userId}};\r\n            console.log(obj);\r\n            const result = await axios.get(url, obj);\r\n            console.log(result);\r\n            if (\"books\" in result.data.return)\r\n            {\r\n                // BARCODE, BOOKNAME, LENT_DATE, RETURN_DATE, STATS\r\n                // id, title, rentDate, retData,  stat\r\n                for (const entry of result.data.return.books)\r\n                {\r\n                    console.log(entry);\r\n                    const book = {'id': entry.BARCODE, 'title': entry.BOOKNAME, 'rentDate': entry.LENT_DATE, 'retDate': entry.RETURN_DATE, 'stat': entry.STATS, 'extendCount': entry._EXTEND_COUNT}\r\n                    ret.push(book);\r\n                }\r\n//                ret = result.data.return.books;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Check \" + userId);\r\n            console.log(this.bookReady);\r\n            if (!this.bookReady)\r\n                return ret;\r\n    //        console.log(this.rent.length);\r\n            for (let i = 0 ; i < this.rent.length ; i++) {\r\n                const entry = this.rent[i];\r\n                if (userId !== undefined && entry.user_id !== userId)\r\n                    continue;\r\n    //            console.log(entry)\r\n                if (entry.state !== \"1\" && entry.state !== \"3\" && entry.state !== 1 && entry.state !== 3)\r\n                    continue;\r\n    //            console.log(entry);\r\n                const id = entry[\"book_id\"];\r\n                const book = this.book[id];\r\n    //            console.log(book)\r\n                let retEntry = {}\r\n                retEntry[\"id\"] = book._id\r\n                retEntry[\"title\"] = book.title\r\n                retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"user\"] = entry.user_id;\r\n                ret.push(retEntry)\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n    }\n\n    checkLogIn(user, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = user[\"encrypted_email\"];\n            const phoneDb = user[\"encrypted_phone\"];\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \" ; SameSite=Lax ;\" ;\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./DropdownServer.css\");\r\n            }\r\n            if (dropdown !== props.dropdown)\r\n            {\r\n                console.log(\"User clicked \" + props.doc.logged);\r\n                console.log(props.dropdown);\r\n                setClick(!click);\r\n                setDropdown(props.dropdown);\r\n            }\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!click)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n        }, [props.dropdown, dropdown, click, props.doc.logged]\r\n    );\r\n\r\n    const logOut = () =>\r\n    {\r\n        setClick(false);\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (\r\n            <div id='dropdown-menu' onClick={() => { setClick(!click)}} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\" onClick={() => setClick(false)}>\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {props.doc.admin &&\r\n                    <>\r\n                    <hr className=\"hline\"/>\r\n                    <Link className='menu-items' to=\"/userSearch\" onClick={() => setClick(false)}>\r\n                        {props.text.userSearch}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentalSituation\" onClick={() => setClick(false)}>\r\n                        {props.text.situation}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentHistory\" onClick={() => setClick(false)}>\r\n                        {props.text.history}\r\n                    </Link>\r\n                    </>\r\n                }\r\n                {props.doc.serverAvailable && props.doc.admin &&\r\n                    <Link className='menu-items' to=\"/newMember\" onClick={() => setClick(false)}>\r\n                        {props.text.newMember}\r\n                    </Link>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items' onClick={() => logOut()}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar(props) {\r\n    const [dropdown, setDropdown] = useState(false)\r\n\r\n    const onClick = () => {\r\n        const maxWidth = document.getElementById(\"navbar\").style.maxWidth;\r\n        console.log(\"maxWidth\");\r\n        console.log(maxWidth);\r\n        console.log(document.getElementById(\"navbar\").style.width);\r\n        setDropdown(!dropdown);\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <div className='menu' onClick={onClick} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc} dropdown={dropdown}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentalSituation from \"./pages/RentalSituation\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\nimport NewMember from \"./pages/NewMember\";\r\n//import Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {SERVER_QUERY} from \"./api/query.js\";\r\n//import {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query.js\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query_test.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n            setInitialized(true);\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n//            console.log(\"Login check \" + context.cookie.password);\r\n//            const user = userData.user\r\n            const user = userData.user_test\r\n//            console.log(user);\r\n            if (context.cookie.password && context.checkLogIn(user, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n//                doc.setRent(rentData.rents)\r\n                doc.setRent(rentData.rent_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n//                doc.setBook(bookData.books)\r\n                doc.setBook(bookData.book_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n\r\n            console.log(serverData);\r\n            console.log(initialized);\r\n            if (!serverData || !initialized)\r\n                return\r\n\r\n            console.log(\"Server info available\")\r\n            logMsg = logMsg + \"<p>Server info available</p>\";\r\n            console.log(serverData)\r\n            doc.setServerInfo(serverData.serverInfo)\r\n\r\n            if (!doc.serverAvailable)\r\n            {\r\n                console.log(\"Server is not available. Load books from cloud DB\");\r\n                loadBook();\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.LOADING;\r\n                prop.autoClose = false;\r\n                prop.toastId = loadingId;\r\n                toast.loading(textString.loading, prop);\r\n                doc.setLogCallback(updateLog);\r\n            }\r\n        }, [serverLoading, serverError, serverData, loadBook, initialized]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n//        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentalSituation\" element={<RentalSituation context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/newMember\" element={<NewMember context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}