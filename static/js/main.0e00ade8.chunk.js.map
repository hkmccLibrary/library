{"version":3,"sources":["pages/Home.js","Util.js","api/query.js","pages/Notice.js","ListView.js","pages/Search.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","UserInfo.js","pages/UserSearch.js","pages/RentalSituation.js","pages/RentHistory.js","pages/NewMember.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","console","log","doc","setCallback","undefined","initialize","id","dangerouslySetInnerHTML","__html","text","homeText","SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","arguments","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getUserState","state","normal","overDue","stopped","getBookState","available","checkedOut","reserved","lost","damaged","given","notAvailable","deleted","compareRent","a1","a2","rentDate","title","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","BOOK_QUERY","gql","RENT_QUERY","USERS_QUERY","USER_QUERY","HISTORY_QUERY","HISTORY_PERIOD_QUERY","NOTICE_QUERY","CONTENT_QUERY","SERVER_QUERY","Notice","useState","searchResults","setSearchResults","displayedCodes","setDisplayedCodes","pageNum","setPageNum","selectedId","setSelectedId","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","useLazyQuery","loadSelected","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","className","date","colSpan","onClick","_id","notice","content","map","fontSize","sx","color","showCallback","ListView","itemList","setItemList","displayList","setDisplayList","list","keyValue","detail","initialized","Search","inputText","setInputText","useDebounce","searchQuery","selectedRef","useRef","bookList","setBookList","rentList","setRentList","setBookState","bookStateRef","needConfirm","setNeedConfirm","needConfirmRef","queryRequest","toggleQueryRequest","useParams","advancedSearch","setAdvancedSearch","author","setAuthor","fromId","setFromId","toId","setToId","stateFilter","setStateFilter","updateDoc","rl","rm","rented","rent","push","code","book_id","retDate","return_date","key","bl","books","book","name","num","claim","claim_num","totalName","series","category","publisher","publish","isbn","isOpen","serverAvailable","findBooks","results","btoa","url","serverInfo","localIp","port","obj","axios","get","response","return","resultString","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","resultObject","index","BARCODE","AUTHOR","TOTAL_NAME","CLAMENUM","PUBLISH","CLAIM","ISBN","findBookLocally","sort","a","b","sr","current","query","selectId","setState","setSearchState","stateStr","value","document","getElementById","checked","filter","idx","element","ipAddr","portNum","post","then","hidden","entryId","flags","rowSpan","admin","disabled","confirmAction","confirm","cancel","setPeriod","from","row","includes","entry","parseInt","bookSearch","placeholder","searchBook","onChange","event","target","type","advSearch","bookCode","all","search","entries","State","LoggedOut","LoggingIn","LoggedIn","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","history","setHistory","autoLogin","setAutoLogin","loadUser","userData","loadHistory","historyData","expireDate","setExpireDate","setTitle","logged","userInfo","getRent","adminMode","userSearch","checkOut","logIn","context","cookie","Date","setTime","getTime","days","toGMTString","compare","func","bookReady","rentReady","hist","rentLogs","rentLog_tests","book_state","timestamp","split","showEntries","retText","bookName","Fragment","to","showRented","noEntry","toUpperCase","toast","isActive","prop","checkLogIn","user_test","TYPE","SUCCESS","logInSucceed","ERROR","logInFail","render","toastId","update","info","idHolder","onInput","pwHolder","cookieString","toggleAutoLogin","dueDate","LoggingOut","CheckOut","bookText","setBookText","setUserData","scannedBook","setScannedBook","notifyRequest","setNotifyRequest","barcode","setBarcode","setRented","prefixList","getElementsByName","substring","interval","setInterval","scan","clearInterval","notify","RENTED","dismiss","prefix","updateUser","JSON","stringify","user","logOut","imageCaptured","e","files","file","INFO","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","getBase64","img","method","mode","crossDomain","headers","withCredentials","credentials","image","succeededToOpen","INVALID_BOOK","showBook","bookId","htmlFor","pattern","inputMode","USER_CODE","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","accept","capture","numberOnly","bookHolder","confirmRent","ret","rentSucceed","NOT_AVAILABLE","Return","returned","setReturned","NOT_RENTED","confirmReturn","returnSucceed","UserInfo","setDisabled","setUserInfo","setProperty","PHONE_NUMBER","EMAIL","ADDRESS","USER_LEVEL","NOTICE","Object","keys","registeredDate","REG_DATE","phone","email","address","notice_","level","kid","adult","save","confirmSave","refresh","userLoading","userListData","userError","userList","setUserList","extend","users","user_tests","setUser","getUser","extendCount","forceSelect","showUsers","showUser","findUsers","toLowerCase","input","trim","RentHistory","RETURN_DATE","STATS","LENT_DATE","USER","userName","situation","fromTime","setFromTime","toTime","setToTime","historyLoading","historyError","yearValue","setYear","monthValue","setMonth","setQuery","year","month","option","createElement","add","thisYear","getFullYear","thisMonth","getMonth","bookInfo","user_id","padStart","RENT_DATE","nextMonth","queryTo","warn","movePrev","moveNext","NewMember","prepareNewMember","newMember","regSuccess","regFail","Doc","userReady","logCallback","ip","checkServerIp","globalIp","callback","checkState","checkRent","_EXTEND_COUNT","retEntry","rent_date","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","join","decodeURIComponent","passwordTyped","matched","emailDb","phoneDb","sign","numberString","isNaN","DropDown","dropdown","setDropdown","click","setClick","menu","classList","remove","home","checkOutStatus","Navbar","isMobile","maxWidth","style","width","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","serverLoading","serverError","serverData","loadBook","bookLoading","bookError","bookData","notifyInit","updateLog","process","APP_NAME","APP_VERSION","lang","navigator","languages","ts","kr","en","updateIpAddr","nothing","password","setRent","rent_tests","setBook","book_tests","setServerInfo","LOADING","setLogCallback","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","path","UserSearch","RentalSituation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","options","Authorization","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.0e00ade8.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n}\r\n\r\nexport default Home;\r\n","export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\" || state === 0)\r\n        return text.normal;\r\n    else if (state === \"1\" || state === 1)\r\n        return text.overDue;\r\n    else if (state === \"2\" || state === 2)\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    switch (state)\r\n    {\r\n        case \"0\":\r\n        case 0:\r\n            return text.available;\r\n        case \"1\":\r\n        case 1:\r\n            return text.checkedOut;\r\n        case \"2\":\r\n        case 2:\r\n            return text.reserved;\r\n        case \"3\":\r\n        case 3:\r\n            return text.overDue;\r\n        case \"4\":\r\n        case 4:\r\n            return text.lost;\r\n        case \"5\":\r\n        case 5:\r\n            return text.damaged;\r\n        case \"6\":\r\n        case 6:\r\n            return text.given;\r\n        case \"7\":\r\n        case 7:\r\n        default:\r\n            return text.notAvailable;\r\n        case \"8\":\r\n        case 8:\r\n            return text.deleted;\r\n    }\r\n}\r\n\r\nexport const compareRent = function(a1, a2)\r\n{\r\n    if (a1.rentDate > a2.rentDate)\r\n        return true;\r\n    else if (a1.rentDate < a2.rentDate)\r\n        return false;\r\n    return a1.title > a2.title;\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n            isbn\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        users (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (limit: 20000, query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const HISTORY_PERIOD_QUERY = gql`\n    query findLogs ($fromTime: String!, $toTime: String!) {\n        rentLogs(limit: 20000, query: {AND: [{timestamp_gte: $fromTime}, {timestamp_lt: $toTime}]}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div id=\"noticeContent\">\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"noticeList\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        setPageNum(0);\n    }, [props.keyValue]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList, props.detail)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { MAX_SEARCH_ENTRY, getBookState, toUtf8 } from \"../Util\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ListView from \"../ListView\";\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(inputText, 300);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const [bookState, setBookState] = useState(0);\r\n    const bookStateRef = useRef(0);\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const needConfirmRef = useRef(false);\r\n\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n\r\n    const { id } = useParams();\r\n\r\n    const [advancedSearch, setAdvancedSearch] = useState(false);\r\n\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [fromId, setFromId] = useState(\"\");\r\n    const [toId, setToId] = useState(\"\");\r\n\r\n    const [stateFilter, setStateFilter] = useState(0);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setInputText(id);\r\n            }\r\n            else\r\n            {\r\n                setInputText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    const obj = {\"params\": {\"book\": btoa(toUtf8(text)), \"match\":false}};\r\n                    console.log(\"=======================\");\r\n                    console.log(\"Request book list\");\r\n                    console.log(obj);\r\n                    const response = await axios.get(url, obj);\r\n                    console.log(response)\r\n                    if (!(\"books\" in response.data.return))\r\n                        return results;\r\n                    const books = response.data.return.books;\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        let retDate = \"\";\r\n                        if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAMENUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM,\r\n                            state: book._STATE,\r\n                            isbn: book.ISBN\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    results = findBookLocally(bookList);\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                console.log(\"Refresh\");\r\n                if (advancedSearch) {\r\n                    return;\r\n                }\r\n                if (searchQuery) {\r\n                    let sr = await findBooks(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, bookList, rentList, props, queryRequest, advancedSearch]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        let rm = {};\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n           rm[rented[i].book_id] = rented[i].state;\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           const state = (key in rm) ? rm[key] : 0;\r\n           bl.push({code: book._id, name: book.title, state: state, num: book.num, author: book.author, claim: book.claim,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher, isbn: book.isbn});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(books.length);\r\n        setBookList(bl);\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    function setState(state)\r\n    {\r\n        console.log(\"Set state \" + state.toString());\r\n        needConfirmRef.current = true;\r\n        setNeedConfirm(true);\r\n        setBookState(state);\r\n        bookStateRef.current = state;\r\n        console.log(selectedId.toString() + needConfirmRef.current);\r\n    }\r\n\r\n    function setSearchState(state)\r\n    {\r\n        const stateStr = state.toString()\r\n        const value = document.getElementById(stateStr).checked;\r\n        console.log(\"Set Search state \" + stateStr + \" Value: \" + value);\r\n        if (stateStr === \"1023\")\r\n        {\r\n            document.getElementById(\"1023\").checked = value;\r\n            document.getElementById(\"0\").checked = value;\r\n            document.getElementById(\"1\").checked = value;\r\n            document.getElementById(\"3\").checked = value;\r\n            document.getElementById(\"4\").checked = value;\r\n            document.getElementById(\"5\").checked = value;\r\n            document.getElementById(\"6\").checked = value;\r\n            document.getElementById(\"7\").checked = value;\r\n            document.getElementById(\"8\").checked = value;\r\n        }\r\n        else\r\n        {\r\n            document.getElementById(stateStr).checked = value;\r\n        }\r\n\r\n        var filter = 0;\r\n        for (var i = 0 ; i < 9 ; i++)\r\n        {\r\n            const idx = i.toString();\r\n            const element = document.getElementById(idx);\r\n            if (element)\r\n                filter |= (element.checked) ? (1 << i) : 0;\r\n        }\r\n        setStateFilter(filter);\r\n        console.log(\"Filter: \" + filter.toString());\r\n    }\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/book\";\r\n        var obj = {};\r\n        obj[\"book\"] = selectedRef.current;\r\n        obj[\"state\"] = bookStateRef.current;\r\n        console.log(\"=======================\");\r\n        console.log(\"Change book state\");\r\n        console.log(obj);\r\n        await axios.post(url, obj).then( response => {\r\n            console.log(response);\r\n        });\r\n\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        const flags = [false, false, false, false, false, false, false, false, false, false]\r\n        flags[result.state] = true;\r\n        if (result.state === 1 || result.state === 2 || result.state === 3)\r\n            flags[0] = true;\r\n        if (!hidden)\r\n            console.log(flags)\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\"> {result.text}</td>\r\n                        <td className=\"searchRent\"> {result.rent} </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr>\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName} <b>{result.name}</b> { result.claim_num} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.code} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim} </td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n                <div hidden={!props.doc.serverAvailable || !props.doc.admin}>\r\n                    <button className=\"bookStates\" id = \"0\" disabled={flags[0]} onClick={() => setState(0)}> {props.text.available} </button>\r\n                    <button className=\"bookStates\" id = \"4\" disabled={flags[4]} onClick={() => setState(4)}> {props.text.lost} </button>\r\n                    <button className=\"bookStates\" id = \"5\" disabled={flags[5]} onClick={() => setState(5)}> {props.text.damaged} </button>\r\n                    <button className=\"bookStates\" id = \"6\" disabled={flags[6]} onClick={() => setState(6)}> {props.text.given} </button>\r\n                    <button className=\"bookStates\" id = \"7\" disabled={flags[7]} onClick={() => setState(7)}> {props.text.notAvailable} </button>\r\n                    <button className=\"bookStates\" id = \"8\" disabled={flags[8]} onClick={() => setState(8)}> {props.text.deleted} </button>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirmRef.current}>\r\n                    <div id=\"bookName\"> {getBookState(props.text, bookStateRef.current)} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results)\r\n    {\r\n        console.log(\"Redraw \" + needConfirmRef.current);\r\n        return results.map((result) => showEntry(result))\r\n    }\r\n\r\n    function setPeriod(from, text)\r\n    {\r\n        if (from)\r\n            setFromId(text)\r\n        else\r\n            setToId(text)\r\n    }\r\n\r\n    function findBookLocally(bookList)\r\n    {\r\n        let results = [];\r\n        for (let i = 0 ; i < bookList.length ; i++) {\r\n            const row = bookList[i];\r\n            if (results.length >= MAX_SEARCH_ENTRY) break;\r\n\r\n            const text = inputText;\r\n            if (text.length > 0 && row.name && !row.name.toString().includes(text) &&\r\n                row.code !== text && row.isbn !== text)\r\n                continue\r\n            if (advancedSearch)\r\n            {\r\n                if (author.length > 0 && row.author && !row.author.toString().includes(author))\r\n                    continue;\r\n\r\n                if (fromId.length > 0 && row.code < fromId)\r\n                    continue;\r\n\r\n                if (toId.length > 0 && row.code > toId)\r\n                    continue;\r\n\r\n                if (!(1<<(row.state) & stateFilter))\r\n                    continue;\r\n            }\r\n            else if (text.length == 0)\r\n                continue;\r\n\r\n            let resultString = `${row.name} ${row.claim_num}`;\r\n            let retDate = \"\";\r\n            let state = \"0\";\r\n            for (const entry of rentList)\r\n            {\r\n                if (entry.code === row.code)\r\n                {\r\n                    state = entry.state;\r\n                    if (state === \"1\" || state === \"3\")\r\n                    {\r\n                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            let resultObject = {\r\n                index: i,\r\n                text: resultString,\r\n                name: row.name,\r\n                code: row.code.toString(),\r\n                rent: getBookState(props.text, state),\r\n                retDate: retDate,\r\n                author: row.author,\r\n                totalName: row.totalName,\r\n                claim_num: row.claim_num,\r\n                publish: row.publish,\r\n                claim: row.claim,\r\n                state: parseInt(state),\r\n                isbn: row.isbn\r\n            };\r\n            results.push(resultObject);\r\n//            console.log(resultObject);\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    function searchEntry()\r\n    {\r\n        console.log(\"Search\");\r\n        console.log(fromId);\r\n        console.log(toId);\r\n        let results = findBookLocally(bookList);\r\n        results.sort(function(a,b) { return a['code'] > b['code']; });\r\n\r\n        let sr = results;\r\n        if (sr.length > 0)\r\n            setSearchResults(sr);\r\n        else\r\n            setSearchResults([]);\r\n        if (sr.length === 1)\r\n            selectedRef.current = sr[0].code;\r\n    }\r\n\r\n    function toggleAdvancedSearch()\r\n    {\r\n        setAdvancedSearch(!advancedSearch);\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\">\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n                    <div hidden={!props.doc.admin}>\r\n                        <input type=\"checkbox\" id=\"advancedSearch\" checked={advancedSearch} onChange={() => toggleAdvancedSearch()}/>\r\n                        <label>\r\n                            {props.text.advSearch}\r\n                        </label>\r\n                    </div>\r\n                <div hidden={!advancedSearch}>\r\n                    <div>\r\n                    <label> {props.text.author} </label>\r\n                    <input type=\"text\" id=\"author\" onChange={(event) => {setAuthor(event.target.value)}} />\r\n                    </div>\r\n                    <div>\r\n                    <label> {props.text.bookCode} </label>\r\n                    <input type=\"text\" id=\"fromPeriod\" onChange={(event) => {setPeriod(true, event.target.value);}} />\r\n                    <label> ~  </label>\r\n                    <input type=\"text\" id=\"toPeriod\" onChange={(event) => {setPeriod(false, event.target.value);}} />\r\n                    </div>\r\n                    <div>\r\n                    <table><tbody>\r\n                        <tr key=\"stateName\" className=\"bookData\">\r\n                            <td className =\"stateName\"> {props.text.all} </td>\r\n                            <td className =\"stateName\"> {props.text.available} </td>\r\n                            <td className =\"stateName\"> {props.text.checkedOut} </td>\r\n                            <td className =\"stateName\"> {props.text.overDue} </td>\r\n                            <td className =\"stateName\"> {props.text.lost} </td>\r\n                            <td className =\"stateName\"> {props.text.damaged} </td>\r\n                            <td className =\"stateName\"> {props.text.given} </td>\r\n                            <td className =\"stateName\"> {props.text.notAvailable} </td>\r\n                            <td className =\"stateName\"> {props.text.deleted} </td>\r\n                        </tr>\r\n                        <tr key=\"stateButton\" className=\"bookData\">\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1023\" onChange={() => setSearchState(1023)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"0\" onChange={() => setSearchState(0)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1\" onChange={() => setSearchState(1)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"3\" onChange={() => setSearchState(3)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"4\" onChange={() => setSearchState(4)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"5\" onChange={() => setSearchState(5)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"6\" onChange={() => setSearchState(6)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"7\" onChange={() => setSearchState(7)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"8\" onChange={() => setSearchState(8)}/>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                    </div>\r\n                    <div>\r\n                    <button id=\"searchEntry\" onClick={searchEntry}> {props.text.search} </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ListView keyValue={searchQuery} list={searchResults} detail={selectedId + needConfirm} showCallback={(entries, detail) => { return showEntries(entries); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, compareRent } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\n//import {USER_QUERY, HISTORY_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(() => {\r\n            async function func() {\r\n                console.log(\"User data updated \");\r\n                await compare();\r\n            }\r\n            func();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n            let hist = [];\r\n//            const rentLogs = historyData.rentLogs;\r\n            const rentLogs = historyData.rentLog_tests;\r\n            for (let i = 0 ; i < rentLogs.length ; i++)\r\n            {\r\n                const entry = rentLogs[i];\r\n                if (entry.book_state !== \"1\" && entry.book_state !== 1)\r\n                    continue;\r\n                if (! (\"return_date\" in entry) || ! entry.return_date)\r\n                    continue;\r\n                console.log(entry);\r\n                const id = entry.book_id;\r\n                const title = (id in props.doc.book) ? props.doc.book[id].title : \"N/A\";\r\n                const date = entry.timestamp.split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                const retDate = entry.return_date;\r\n                const claim = (id in props.doc.book) ? props.doc.book[id].claim : \"N/A\";\r\n                hist.push({\"id\": id, \"title\": title, \"rentDate\": date, \"retDate\": retDate, \"claim\": claim});\r\n\r\n            }\r\n            hist.sort(compareRent);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const claim = rent[\"claim\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n//        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result, retText) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{retText}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        await compare();\r\n    }\r\n\r\n    const compare = async () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData.user_test, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user_test);\r\n\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults, props.text.dueDate) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries, props.text.returnDate); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [userData, setUserData] = useState({});\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [rented, setRented] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n            const prefixList = document.getElementsByName(\"idPrefix\");\r\n            const prefix = barcode.substring(0, 2);\r\n            for (var i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                const id = prefixList[i].id\r\n                if (\"AB\" === id)\r\n                    prefixList[i].checked = true\r\n                else\r\n                    prefixList[i].checked = false\r\n\r\n            }\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n//            console.log(props.doc.serverInfo);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            import(\"./PageServer.css\");\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const code = response.data.scan;\r\n                        if (code) {\r\n                            console.log(code)\r\n                            setBarcode(code)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                setState(State.LoggedOut);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n                setBarcode(\"\")\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                const prefixList = document.getElementsByName(\"idPrefix\");\r\n                var prefix = \"\"\r\n                for (var i = 0 ; i < prefixList.length ; i++)\r\n                {\r\n                    if (prefixList[i].checked)\r\n                        prefix = prefixList[i].id\r\n                        console.log(\"Pressed [\" + i.toString() + \" \" + prefix + \"]\")\r\n\r\n                }\r\n                const barcode = prefix + userText\r\n                setBarcode(barcode);\r\n            }\r\n        }, [state, userText]\r\n    );\r\n\r\n    const updateUser = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const obj = {\"params\": {\"user\": userText, \"data\":\"nothing\"}};\r\n        console.log(obj);\r\n        const response = await axios.get(url, btoa(JSON.stringify(obj)));\r\n        const user = response.data.return;\r\n\r\n        setUserData(user);\r\n        console.log(user);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        console.log(\"LOGIN\");\r\n        console.log(barcode);\r\n        if (barcode.length === 0)\r\n            return;\r\n        setState(State.LoggingIn);\r\n        const id = barcode.toUpperCase();\r\n        setUserId(id);\r\n        updateUser(id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Log Out\");\r\n        setUserData({});\r\n        setUserText(\"\");\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n        setRented([])\r\n        document.getElementById('barcodeScan').value= null;\r\n    }\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            console.log(url)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(response);\r\n                        console.log(book);\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            console.log(\"Failed\");\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR});\r\n                            setScannedBook({});\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            console.log(book.books)\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Set barcode: \" + barcode);\r\n            if (barcode.length === 0)\r\n                return;\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                if (barcode.search(\"AA\") === 0 || barcode.search(\"AB\") === 0 )\r\n                {\r\n                    const prefixList = document.getElementsByName(\"idPrefix\");\r\n                    const prefix = barcode.substring(0, 2);\r\n                    for (var i = 0 ; i < prefixList.length ; i++)\r\n                    {\r\n                        const id = prefixList[i].id\r\n                        if (prefix === id)\r\n                            prefixList[i].checked = true\r\n                        else\r\n                            prefixList[i].checked = false\r\n\r\n                    }\r\n                    setUserText(barcode.substring(2));\r\n                }\r\n            }\r\n            else if (barcode.search(\"HK\") === 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc, state]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n        document.getElementById('barcodeScan').value= null;\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE,\r\n                user: userId\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return\r\n            console.log(\"Rent confirmed\");\r\n            console.log(ret)\r\n\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.rentSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n                rented.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n                console.log(rented)\r\n                setRented(rented)\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n            updateUser(userId);\r\n        });\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n    /*\r\n        return (<React.Fragment key={index + \"Fragment\"}>\r\n                    <tr key={index}>\r\n                        <td className=\"bookCell\"> {rent.id} </td>\r\n                        <td colSpan=\"3\" className=\"bookCell\"> {rent.name} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    */\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    <div id=\"dueDate\">\r\n                    {props.text.dueDate} : {props.doc.dueDate}\r\n                    </div>\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n    /*\r\n                    <table><tbody>\r\n                        {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                    </tbody></table>\r\n    */\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        document.getElementById('barcodeScan').value= null;\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"radio\" id = \"AA\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AA\" className=\"idPrefix\" name=\"idPrefix\"> AA </label>\r\n                <input type=\"radio\" id = \"AB\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AB\" className=\"idPrefix\" name=\"idPrefix\"> AB </label>\r\n                <input type=\"text\" id=\"searchInput\" pattern=\"[0-9]*\" inputMode=\"numeric\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"barcodeScan\" hidden>\r\n                        <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                        <span>\r\n                        <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                        </span>\r\n                    </label>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {rented.length > 0 &&\r\n                    <ListView list={rented} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n                <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.logOut} </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n//    const [initialized, setInitialized] = useState(false);\r\n//    const [userId, setUserId] = useState(\"\");\r\n//    const [state, setState] = useState(State.LoggedOut);\r\n//    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n//                     { \"variables\": { \"_id\": userId } });\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [returned, setReturned] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            import(\"./PageServer.css\")\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(book.search(\"HK\"))\r\n                            if (book.search(\"HK\") === 0) {\r\n                                console.log(barcode + \" -> \" + book)\r\n                                setBarcode(book)\r\n                            }\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc]\r\n    );\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR})\r\n                            setScannedBook({})\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 1 || scannedBook._STATE === 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Returned updated\");\r\n            console.log(returned);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            console.log(\"Update return list\");\r\n            const bookId = \"HK\" + bookText;\r\n            console.log(\"Search book1 \" + bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n            const obj = {\"params\": {\"books\": returned}};\r\n            console.log(obj);\r\n            axios.get(url, obj).then( response => {\r\n//                    const book = response.data.return;\r\n//                    console.log(book)\r\n                }\r\n            );\r\n        },\r\n        [returned]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return;\r\n            console.log(ret);\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.returnSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n                returned.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n                console.log(returned)\r\n                setReturned(returned)\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {returned.length > 0 &&\r\n                    <ListView list={returned} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toUtf8 } from \"./Util\";\nimport \"./UserInfo.css\";\n\nfunction UserInfo(props) {\n    const [needConfirm, setNeedConfirm] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(function() {\n        console.log(\"User Info\");\n        console.log(props.info);\n        document.getElementById('userName').value = props.info.USER_NAME ? props.info.USER_NAME : \"\";\n        document.getElementById('phone').value = props.info.PHONE_NUMBER ? props.info.PHONE_NUMBER : \"\";\n        document.getElementById('email').value = props.info.EMAIL ? props.info.EMAIL : \"\";\n        document.getElementById('address').value = props.info.ADDRESS ? props.info.ADDRESS : \"\";\n        document.getElementById('notice_').value = props.info.NOTICE ? props.info.NOTICE : \"\";\n        document.getElementById('user_level').value = props.info.USER_LEVEL;\n        setUserInfo({\"USER_CODE\": props.info.USER_CODE});\n        setDisabled(true);\n\n    }, [props.info]);\n\n    function setProperty(index, value)\n    {\n        console.log(index);\n        console.log(value);\n        var info = userInfo;\n        switch (index)\n        {\n        case 0:\n            info.USER_NAME = value;\n            break;\n        case 1:\n            info.PHONE_NUMBER = value;\n            break;\n        case 2:\n            info.EMAIL = value;\n            break;\n        case 3:\n            info.ADDRESS = value;\n            break;\n        case 4:\n            info.USER_LEVEL = value;\n            break;\n        case 5:\n            info.NOTICE = value;\n            break;\n        default:\n            break;\n        }\n        const length = Object.keys(info).length;\n        console.log(length);\n//        if (length >= 1 && \"USER_LEVEL\" in info && info.USER_LEVEL >= 0 && info.USER_LEVEL <= 2)\n        if (length > 1)\n            setDisabled(false);\n        setUserInfo(info);\n    }\n\n    function confirmAction()\n    {\n        console.log(\"Save modification\");\n        console.log(userInfo);\n        const ipAddr = props.doc.serverInfo.localIp;\n        const portNum = props.doc.serverInfo.port;\n        if (ipAddr.length === 0 || portNum <= 0)\n            return;\n\n        const url = \"https://\" + ipAddr + \":\" +\n            portNum + \"/user\";\n\n        var obj = {};\n        console.log(userInfo)\n        for (const key in userInfo)\n        {\n            obj[key] = btoa(toUtf8(userInfo[key]));\n        }\n        axios.post(url, obj).then( response => {\n            console.log(response);\n            props.refresh(response);\n        });\n        setNeedConfirm(false);\n    }\n\n    function cancelAction()\n    {\n        setNeedConfirm(false);\n    }\n\n    return (\n        <div>\n            <table><tbody>\n                <tr key=\"Name\">\n                    <td> {props.text.name} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"userName\" onChange={(event) => {setProperty(0, event.target.value);}} />\n                    </td>\n                </tr>\n                {\"REG_DATE\" in props.info &&\n                    <tr key=\"Register\">\n                        <td> {props.text.registeredDate} </td>\n                        <td colSpan=\"3\" className=\"data\">\n                            {props.info.REG_DATE}\n                        </td>\n                    </tr>\n                }\n                <tr key=\"Phone\">\n                    <td> {props.text.phone} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"phone\" onChange={(event) => {setProperty(1, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Email\">\n                    <td> {props.text.email} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"email\" onChange={(event) => {setProperty(2, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Address\">\n                    <td> {props.text.address} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"address\" onChange={(event) => {setProperty(3, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Notice\">\n                    <td> {props.text.notice_} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"notice_\" onChange={(event) => {setProperty(5, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Level\">\n                    <td> {props.text.level} </td>\n                    <td colSpan=\"3\" className=\"cell\">\n                        <select name=\"User Level\" id=\"user_level\" className=\"dropdown\" onChange={(event) => {setProperty(4, event.target.value);}}>\n                            <option value=\"0\"> {props.text.kid} </option>\n                            <option value=\"1\"> {props.text.adult} </option>\n                            <option value=\"2\"> {props.text.admin} </option>\n                        </select>\n                    </td>\n                </tr>\n            </tbody></table>\n           <button id=\"modify\" hidden={needConfirm} onClick={async () => setNeedConfirm(true)} disabled={disabled}> {props.text.save} </button>\n            <div id=\"checkModify\" hidden={!needConfirm}>\n                <div id=\"noticeMsg\"> {props.text.confirmSave} </div>\n                <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\n                <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\n            </div>\n        </div>\n    );\n}\nexport default UserInfo;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, MAX_SEARCH_ENTRY, getUserState, toUtf8 } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate, useParams } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport UserInfo from \"../UserInfo\";\r\nimport axios from \"axios\";\r\n\r\n//var rentList = [];\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 300);\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n//    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const { id } = useParams();\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                return;\r\n            }\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n//                const users = userListData.users;\r\n                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    async function extend(key)\r\n    {\r\n        console.log(\"Extend \" + key);\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/extend\";\r\n        var obj = {};\r\n        obj[\"book\"] = key\r\n\r\n        const ret = await axios.post(url, obj);\r\n        console.log(\"Extended\")\r\n        console.log(ret)\r\n        selectId(selectedRef.current, true);\r\n        if (ret.data.return === \"SUCCESS\")\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.extend, prop);\r\n        }\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const extendCount = rent.extendCount;\r\n        const key = index.toString();\r\n//                        <td colSpan={props.doc.serverAvailable?\"3\":\"2\"} className=\"bookName\">{bookName}</td>\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan={props.doc.serverAvailable?\"2\":\"3\"} className=\"bookName\">{bookName}</td>\r\n                        {props.doc.serverAvailable &&\r\n                            <td className=\"bookName\"><button className=\"extend\" onClick={() => extend(id)}>{props.text.extend + \" (\" + extendCount.toString() + \")\"}</button></td>\r\n                        }\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id, forceSelect = false) => {\r\n        const rent = await props.doc.getRent(id);\r\n        console.log(rent);\r\n        if (selectedRef.current === -1 || selectedRef.current !== id || forceSelect )\r\n        {\r\n            console.log(\"Select \" + id);\r\n//            setSelectedId(id);\r\n            selectedRef.current = id;\r\n            console.log(\"Set Rent List\");\r\n            console.log(rent)\r\n            setRentList(rent);\r\n//            rentList = rent;\r\n        }\r\n        else if (searchResults.length > 1)\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n//            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n            setRentList([]);\r\n//            rentList = [];\r\n        }\r\n    }\r\n\r\n    const showUser = (user, detail, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div key={key}>\r\n                    <table><tbody>\r\n                        <tr key={user.id} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user, detail) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result, detail) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, detail, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (user, detail) => {\r\n        console.log(\"Detail\");\r\n        console.log(user);\r\n        return (<>\r\n                    {props.doc.serverAvailable &&\r\n                        <UserInfo text={props.text} doc={props.doc} info={user} refresh={refresh}/>\r\n                    }\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        detail.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        detail.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a.name > b.name; });\r\n                console.log(results);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                const input = userText.trim()\r\n                console.log(\"Query \" + input + \" \" + searchQuery)\r\n                if (input.length > 0 && searchQuery) {\r\n\r\n                    let sr;\r\n                    if (props.doc.serverAvailable)\r\n                    {\r\n                        console.log(\"from CLIB\")\r\n                        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/users\";\r\n                        const obj = {\"params\": {\"user\": btoa(toUtf8(input))}};\r\n                        console.log(obj);\r\n                        const response = await axios.get(url, obj);\r\n                        const users = response.data.return.data;\r\n                        console.log(response.data.return);\r\n                        sr = [];\r\n                        if (users) {\r\n                            for (const entry of response.data.return.data)\r\n                            {\r\n                                console.log(entry);\r\n                                let user = entry;\r\n                                user.id = entry.USER_CODE;\r\n                                user.name = entry.USER_NAME;\r\n                                user.state = getUserState(props.text, entry.USER_STATE);\r\n                                user.rent = entry._RENT.length;\r\n                                sr.push(user);\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"from DB\")\r\n                        sr = await findUsers(searchQuery);\r\n                    }\r\n\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                   else\r\n                       selectId(0);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n       [searchQuery, props, userList, queryRequest, userText]\r\n    );\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView keyValue={searchQuery} list={searchResults} detail={rentList} showCallback={(entries, detail) => { return showUsers(entries, detail); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getBookState } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n//                const users = userListData.users;\r\n                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userList]\r\n    );\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        return a1.rentDate > a2.rentDate;\r\n    }\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.serverAvailable)\r\n        {\r\n            let results = [];\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": \"*\", \"match\":false}};\r\n//            console.log(obj);\r\n            const response = await axios.get(url, obj);\r\n//           console.log(response)\r\n//            if (!(\"books\" in response.data.return))\r\n//                return results;\r\n            const books = response.data.return.books;\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                const state = book._STATE;\r\n                let retDate = \"\";\r\n                if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                {\r\n                    retDate = book.RETURN_DATE;\r\n                }\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: book.BOOKNAME,\r\n                    id: book.BARCODE,\r\n                    rent: getBookState(props.text, book.STATS.toString()),\r\n                    rentDate: book.LENT_DATE,\r\n                    retDate: retDate,\r\n                    author: book.AUTHOR,\r\n                    totalName: book.TOTAL_NAME,\r\n                    claim_num: book.CLAMENUM,\r\n                    publish: book.PUBLISH,\r\n                    claim: book.CLAIM,\r\n                    user: book.USER,\r\n                    userName: book.USER_NAME\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compare);\r\n            setRentList(results);\r\n        }\r\n        else\r\n        {\r\n\r\n            const rent = await props.doc.getRent();\r\n            console.log(\"Rent\");\r\n            console.log(rent);\r\n            rent.sort(compare);\r\n            for (const index in rent)\r\n            {\r\n                const userId = rent[index][\"user\"];\r\n                let userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                rent[index][\"userName\"] = userName;\r\n//                console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n            }\r\n            setRentList(rent);\r\n        }\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        const claim = rent[\"claim\"];\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"situation\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.situation}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue=\"\" list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n//    const [initialized, setInitialized] = useState(false);\r\n    const [fromTime, setFromTime] = useState(\"\");\r\n    const [toTime, setToTime] = useState(\"\");\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [loadHistory, {loading: historyLoading, data: historyData, error: historyError }] = useLazyQuery(HISTORY_PERIOD_QUERY,\r\n            {\"variables\": { \"fromTime\" : fromTime, \"toTime\": toTime}});\r\n    const [userList, setUserList] = useState({});\r\n    const [yearValue, setYear] = useState(0);\r\n    const [monthValue, setMonth] = useState(0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [searchQuery] = useDebounce(query, 300);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            var i;\r\n            var option;\r\n            var year = document.getElementById('year')\r\n            var month = document.getElementById('month')\r\n            for (i = 1; i <= 12 ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                month.add(option, i);\r\n            }\r\n            const thisYear = new Date().getFullYear();\r\n            const thisMonth = new Date().getMonth() + 1;\r\n            const fromYear = 2017;\r\n\r\n            for (i = fromYear ; i <= thisYear ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                year.add(option, i);\r\n            }\r\n\r\n            console.log(thisYear);\r\n            console.log(thisMonth);\r\n            setYear(thisYear);\r\n            setMonth(thisMonth);\r\n            document.getElementById('year').value = thisYear;\r\n            document.getElementById('month').value = thisMonth;\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n//                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n//                const users = userListData.users;\r\n                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\")\r\n\r\n            if (!historyData)\r\n                return\r\n\r\n//            console.log(historyData.rentLog_tests)\r\n\r\n//            const books = historyData.rentLogs;\r\n            const books = historyData.rentLog_tests;\r\n            let results = [];\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const state = book.book_state;\r\n                if (state !== \"1\" && state !== 1)\r\n                    continue\r\n                if (!book.return_date || book.return_date.length === 0)\r\n                    continue\r\n//                console.log(book)\r\n                const bookId = book.book_id;\r\n                const userId = book.user_id;\r\n                var userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                var bookInfo;\r\n                if (bookId in props.doc.book)\r\n                {\r\n                    bookInfo = props.doc.book[bookId];\r\n                }\r\n                else\r\n                {\r\n                    bookInfo = {}\r\n                    bookInfo.author = \"\"\r\n                    bookInfo.totalName = \"\"\r\n                    bookInfo.claim_num = \"\"\r\n                    bookInfo.publish = \"\"\r\n                    bookInfo.title = \"\"\r\n                }\r\n                const resultString = `${bookInfo.title} ${bookInfo.claim_num}`;\r\n                retDate = book.return_date;\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: bookInfo.title,\r\n                    id: bookId,\r\n                    rentDate: book.timestamp,\r\n                    retDate: retDate,\r\n                    author: bookInfo.author,\r\n                    claim_num: bookInfo.claim_num,\r\n                    publish: bookInfo.publisher,\r\n                    claim: bookInfo.claim,\r\n                    user: userId,\r\n                    userName: userName\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n//            console.log(results);\r\n            setRentList(results);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, historyLoading, historyError]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        }, [userList]\r\n    );\r\n*/\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        if (a1.rentDate > a2.rentDate)\r\n            return true;\r\n        else if (a1.rentDate < a2.rentDate)\r\n            return false;\r\n        return a1.title > a2.title;\r\n    }\r\n\r\n/*\r\n    async function updateDoc()\r\n    {\r\n        setInitialized(true);\r\n    }\r\n*/\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const claim = rent[\"claim\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n    function setProperty(index, value)\r\n    {\r\n        console.log(index);\r\n        console.log(value);\r\n        switch (index)\r\n        {\r\n            case 0:\r\n                setYear(value);\r\n                break;\r\n            case 1:\r\n                setMonth(parseInt(value));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(function () {\r\n        setQuery(yearValue.toString() + \"-\" + monthValue.toString().padStart(2, \"0\"))\r\n\r\n    }, [yearValue, monthValue]\r\n    );\r\n\r\n    useEffect(function () {\r\n        async function search()\r\n        {\r\n            console.log(\"Search\")\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/history\";\r\n                const obj = {\"params\": {\"period\": query}};\r\n                console.log(obj);\r\n                const response = await axios.get(url, obj);\r\n                console.log(response);\r\n\r\n                const books = response.data.return.books;\r\n                let results = [];\r\n                let retDate = \"\";\r\n                for (let i = 0 ; i < books.length ; i++)\r\n                {\r\n                    const book = books[i];\r\n                    const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                    if (\"RETURN_DATE\" in book)\r\n                    {\r\n                        retDate = book.RETURN_DATE;\r\n                    }\r\n                    let resultObject = {\r\n                        index: i,\r\n                        text: resultString,\r\n                        title: book.BOOKNAME,\r\n                        id: book.BARCODE,\r\n        //                rent: getBookState(props.text, book..toString()),\r\n                        rentDate: book.RENT_DATE,\r\n                        retDate: retDate,\r\n                        author: book.AUTHOR,\r\n                        totalName: book.TOTAL_NAME,\r\n                        claim_num: book.CLAMENUM,\r\n                        publish: book.PUBLISH,\r\n                        claim: book.CLAIM,\r\n                        user: book.USER,\r\n                        userName: book.USER_NAME\r\n                    };\r\n                    results.push(resultObject);\r\n                }\r\n                results.sort(compare);\r\n                setRentList(results);\r\n            }\r\n            else\r\n            {\r\n                var queryTo;\r\n                const nextMonth = monthValue + 1\r\n                queryTo = yearValue.toString() + \"-\" + nextMonth.toString().padStart(2, \"0\")\r\n                setFromTime(query)\r\n                setToTime(queryTo)\r\n                console.log(query)\r\n                console.log(queryTo)\r\n\r\n                try {\r\n                    await loadHistory();\r\n                }\r\n                catch (e)\r\n                {\r\n                    console.warn(e.name);\r\n                }\r\n\r\n    /*\r\n                for (const index in rent)\r\n                {\r\n                    const userId = rent[index][\"user\"];\r\n                    let userName;\r\n                    if (userList && userId in userList)\r\n                        userName = userList[userId].name;\r\n                    else\r\n                        userName = \"\"\r\n                    rent[index][\"userName\"] = userName;\r\n                    console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n                }\r\n                setRentList(rent);\r\n    */\r\n            }\r\n        }\r\n        search();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery]\r\n    );\r\n\r\n    function movePrev()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month > 1)\r\n        {\r\n            month -= 1\r\n        }\r\n        else\r\n        {\r\n            year -= 1;\r\n            month = 12;\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    function moveNext()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month < 12)\r\n        {\r\n            month += 1\r\n        }\r\n        else\r\n        {\r\n            year += 1\r\n            month = 1\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"searchRange\">\r\n                <div className=\"page\" id = \"page\">\r\n                    <NavigateBeforeIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {movePrev();} }/>\r\n                </div>\r\n                <select name=\"year\" id=\"year\" className=\"dropdown\" onChange={(event) => {setProperty(0, event.target.value);}}/>\r\n                <select name=\"month\" id=\"month\" className=\"dropdown\" onChange={(event) => {setProperty(1, event.target.value);}}/>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {moveNext();} }/>\r\n                    </div>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue={searchQuery} list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\nimport { Navigate } from 'react-router-dom'\r\nimport UserInfo from \"../UserInfo\";\r\n\r\nfunction NewMember(props) {\r\n//    const [userText, setUserText] = useState(\"\");\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n//    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n//    const [userList, setUserList] = useState({});\r\n//    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized || !props.doc.serverAvailable)\r\n            {\r\n                return;\r\n            }\r\n            import(\"./PageServer.css\");\r\n            console.log(\"=======================================\");\r\n            console.log(\"NewMember initialize\");\r\n            prepareNewMember();\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n*/\r\n\r\n    function prepareNewMember()\r\n    {\r\n        var info = {};\r\n        info.USER_CODE = \"\";\r\n        info.USER_NAME = \"\";\r\n        info.PHONE_NUMBER = \"\";\r\n        info.EMAIL = \"\";\r\n        info.ADDRESS = \"\";\r\n        info.NOTICE = \"\";\r\n        info.USER_LEVEL = -1;\r\n        setUserInfo(info);\r\n    }\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n*/\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n\r\n        const prop = toastProp;\r\n        var text\r\n        if (response.data.return === \"OK\")\r\n        {\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.regSuccess;\r\n            prepareNewMember()\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.regFail;\r\n        }\r\n        prop.autoClose = 3000;\r\n        toast.info(text, prop);\r\n    }\r\n    if (!props.doc.initialized || !props.doc.serverAvailable)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.newMember}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                {props.doc.serverAvailable &&\r\n                    <UserInfo text={props.text} doc={props.doc} info={userInfo} refresh={refresh}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMember;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.dueDate = \"\";\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n//        const response = await axios.get(\"https://ipv4.seeip.org/jsonip\");\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\")\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return;\r\n\r\n        return;\r\n\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            this.serverAvailable = true;\r\n            axios.get(query, {timeout: 1000})\r\n                .then( (response) => {\r\n                    console.log(\"Server connected\");\r\n                    console.log(response.data);\r\n                    this.admin = response.data.admin;\r\n                    this.dueDate = response.data.dueDate;\r\n                    this.initialized = true;\r\n                })\r\n                .catch(error => {\r\n                  const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n                  window.open(query);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        console.log(serverInfo)\r\n        this.serverInfo = serverInfo;\r\n        console.log(this.serverInfo.globalIp);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = book;\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n//        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\" && state !== 1 && state !== 3)\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n//           console.log(userId);\r\n//           console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n                this.user[userId][\"rent\"] += 1;\r\n            else\r\n                this.user[userId][\"rent\"] = 1;\r\n        }\r\n        console.log(this.user);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\" ||\r\n            userInfo['level'] === 2)\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    async getRent(userId = undefined) {\r\n        let ret = [];\r\n        if (this.serverAvailable) {\r\n            const url = \"https://\" + this.serverInfo.localIp + \":\" +\r\n                this.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": userId}};\r\n            console.log(obj);\r\n            const result = await axios.get(url, obj);\r\n            console.log(result);\r\n            if (\"books\" in result.data.return)\r\n            {\r\n                // BARCODE, BOOKNAME, LENT_DATE, RETURN_DATE, STATS\r\n                // id, title, rentDate, retData,  stat\r\n                for (const entry of result.data.return.books)\r\n                {\r\n                    console.log(entry);\r\n                    const book = {'id': entry.BARCODE, 'title': entry.BOOKNAME, 'claim': entry.CLAIM, 'rentDate': entry.LENT_DATE, 'retDate': entry.RETURN_DATE, 'stat': entry.STATS, 'extendCount': entry._EXTEND_COUNT}\r\n                    ret.push(book);\r\n                }\r\n//                ret = result.data.return.books;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Check \" + userId);\r\n            console.log(this.bookReady);\r\n            if (!this.bookReady)\r\n                return ret;\r\n    //        console.log(this.rent.length);\r\n            for (let i = 0 ; i < this.rent.length ; i++) {\r\n                const entry = this.rent[i];\r\n                if (userId !== undefined && entry.user_id !== userId)\r\n                    continue;\r\n    //            console.log(entry)\r\n                if (entry.state !== \"1\" && entry.state !== \"3\" && entry.state !== 1 && entry.state !== 3)\r\n                    continue;\r\n    //            console.log(entry);\r\n                const id = entry[\"book_id\"];\r\n                const book = this.book[id];\r\n    //            console.log(book)\r\n                let retEntry = {}\r\n                retEntry[\"id\"] = book._id\r\n                retEntry[\"title\"] = book.title\r\n                retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"claim\"] = book.claim\r\n                retEntry[\"user\"] = entry.user_id;\r\n                ret.push(retEntry)\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n    }\n\n    checkLogIn(user, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = user[\"encrypted_email\"];\n            const phoneDb = user[\"encrypted_phone\"];\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \" ; SameSite=Lax ;\" ;\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./DropdownServer.css\");\r\n            }\r\n            if (dropdown !== props.dropdown)\r\n            {\r\n                console.log(\"User clicked \" + props.doc.logged);\r\n                console.log(props.dropdown);\r\n                setClick(!click);\r\n                setDropdown(props.dropdown);\r\n            }\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!click)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n        }, [props.dropdown, dropdown, click, props.doc.logged]\r\n    );\r\n\r\n    const logOut = () =>\r\n    {\r\n        setClick(false);\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (\r\n            <div id='dropdown-menu' onClick={() => { setClick(!click)}} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\" onClick={() => setClick(false)}>\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {props.doc.admin &&\r\n                    <>\r\n                    <hr className=\"hline\"/>\r\n                    <Link className='menu-items' to=\"/userSearch\" onClick={() => setClick(false)}>\r\n                        {props.text.userSearch}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentalSituation\" onClick={() => setClick(false)}>\r\n                        {props.text.situation}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentHistory\" onClick={() => setClick(false)}>\r\n                        {props.text.history}\r\n                    </Link>\r\n                    </>\r\n                }\r\n                {props.doc.serverAvailable && props.doc.admin &&\r\n                    <Link className='menu-items' to=\"/newMember\" onClick={() => setClick(false)}>\r\n                        {props.text.newMember}\r\n                    </Link>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items' onClick={() => logOut()}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar(props) {\r\n    const [dropdown, setDropdown] = useState(false)\r\n\r\n    const onClick = () => {\r\n        const maxWidth = document.getElementById(\"navbar\").style.maxWidth;\r\n        console.log(\"maxWidth\");\r\n        console.log(maxWidth);\r\n        console.log(document.getElementById(\"navbar\").style.width);\r\n        setDropdown(!dropdown);\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <div className='menu' onClick={onClick} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc} dropdown={dropdown}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentalSituation from \"./pages/RentalSituation\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\nimport NewMember from \"./pages/NewMember\";\r\n//import Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {SERVER_QUERY} from \"./api/query.js\";\r\n//import {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query.js\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n            setInitialized(true);\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n//            console.log(\"Login check \" + context.cookie.password);\r\n//            const user = userData.user\r\n            const user = userData.user_test\r\n//            console.log(user);\r\n            if (context.cookie.password && context.checkLogIn(user, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(\"Rent Error\");\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n//                doc.setRent(rentData.rents)\r\n                doc.setRent(rentData.rent_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n//                doc.setBook(bookData.books)\r\n                doc.setBook(bookData.book_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n\r\n            console.log(serverData);\r\n            console.log(initialized);\r\n            if (!serverData || !initialized)\r\n                return\r\n\r\n            console.log(\"Server info available\")\r\n            logMsg = logMsg + \"<p>Server info available</p>\";\r\n            console.log(serverData)\r\n            doc.setServerInfo(serverData.serverInfo)\r\n\r\n            if (!doc.serverAvailable)\r\n            {\r\n                console.log(\"Server is not available. Load books from cloud DB\");\r\n                loadBook();\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.LOADING;\r\n                prop.autoClose = false;\r\n                prop.toastId = loadingId;\r\n                toast.loading(textString.loading, prop);\r\n                doc.setLogCallback(updateLog);\r\n            }\r\n        }, [serverLoading, serverError, serverData, loadBook, initialized]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n//        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentalSituation\" element={<RentalSituation context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/newMember\" element={<NewMember context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}