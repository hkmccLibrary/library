{"version":3,"sources":["pages/Home.js","Util.js","ListView.js","api/query.js","pages/Notice.js","pages/Search.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","UserInfo.js","pages/UserSearch.js","pages/RentalSituation.js","pages/RentHistory.js","pages/NewMember.js","pages/RequestBook.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","async","console","log","doc","setCallback","undefined","initialize","serverAvailable","_jsxs","id","children","_jsx","Link","className","to","text","checkOut","return","dangerouslySetInnerHTML","__html","homeText","SEARCH_PER_SCREEN","String","prototype","format","formatted","this","i","arguments","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getUserState","state","normal","overDue","stopped","getBookState","available","checkedOut","reserved","lost","damaged","given","notAvailable","deleted","compareBook","book1","book2","name","claim1","parseInt","claim_num","claim2","compareUser","a1","a2","compareRent","rentDate","title","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","showCallback","ListView","itemList","setItemList","useState","pageNum","setPageNum","displayList","setDisplayList","list","keyValue","startIdx","count","Math","min","slice","detail","NavigateBeforeIcon","fontSize","sx","color","onClick","NavigateNextIcon","gql","_templateObject","_taggedTemplateLiteral","RENT_QUERY","_templateObject2","USERS_QUERY","_templateObject3","USER_QUERY","_templateObject4","HISTORY_QUERY","_templateObject5","HISTORY_BOOK_QUERY","_templateObject6","HISTORY_PERIOD_QUERY","_templateObject7","NOTICE_QUERY","_templateObject8","CONTENT_QUERY","_templateObject9","SERVER_QUERY","_templateObject10","REQUEST_QUERY","_templateObject11","Notice","searchResults","setSearchResults","displayedCodes","setDisplayedCodes","loading","noticeLoading","data","noticeData","error","noticeError","useQuery","useParams","loadSelected","selectedLoading","selectedData","selectedError","useLazyQuery","notice","toString","showEntry","result","date","colSpan","_id","content","entries","map","initialized","Search","inputText","setInputText","selectedId","setSelectedId","bookList","setBookList","rentList","setRentList","bookState","setBookState","needConfirm","setNeedConfirm","queryRequest","toggleQueryRequest","bookId","setBookId","advancedSearch","setAdvancedSearch","author","setAuthor","fromId","setFromId","toId","setToId","fromDate","setFromDate","toDate","setToDate","stateFilter","setStateFilter","rentHistory","setRentHistory","searchQuery","useDebounce","loadHistory","historyData","selectedRef","useRef","needConfirmRef","bookStateRef","historyAvailable","updateDoc","rl","rm","rented","rent","push","code","book_id","retDate","return_date","bl","books","book","key","num","claim","regDate","registration_date","totalName","series","category","publisher","publish","isbn","setState","current","setSearchState","stateStr","value","document","getElementById","checked","filter","idx","element","isOpen","keyword","sr","results","btoa","url","serverInfo","localIp","port","param","response","requestGet","resultString","concat","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","resultObject","index","BARCODE","REG_DATE","AUTHOR","TOTAL_NAME","PUBLISH","CLAIM","ISBN","findBookLocally","sort","findBooks","query","history","rentLog","book_state","pair","timestamp","hidden","entryId","flags","selectId","rowSpan","entry","showHistoryEntry","admin","disabled","ipAddr","portNum","obj","requestPost","confirmAction","confirm","cancel","setPeriod","from","toLowerCase","row","includes","bookSearch","placeholder","searchBook","onChange","event","target","type","advSearch","bookCode","registeredDate","Calendar","date1","date2","dateStr1","getFullYear","getMonth","padStart","getDate","dateStr2","selectRange","all","search","showEntries","State","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","setHistory","extendCount","setExtendCount","autoLogin","setAutoLogin","loadUser","userData","loadRequest","requestData","expireDate","setExpireDate","setTitle","logged","userInfo","getRent","adminMode","userSearch","logIn","context","cookie","Date","setTime","getTime","days","toGMTString","compare","func","bookReady","rentReady","hist","rentLogs","split","setRequest","request","retText","dueDate","showRented","maxExtended","titleRowSpan","extending","hasRequest","React","Fragment","extend","maxExtend","noEntry","toISOString","sendRequest","addRequest","toast","isActive","prop","user","checkLogIn","TYPE","SUCCESS","logInSucceed","ERROR","logInFail","render","toastId","update","info","idHolder","onInput","pwHolder","toggleAutoLogin","cookieString","toUpperCase","Navigate","CheckOut","bookText","setBookText","bookValue","barcode","setBarcode","notifyRequest","setNotifyRequest","setRented","setUserData","bookData","setBookData","navigate","useNavigate","interval","setInterval","scan","prefixList","getElementsByName","prefix","clearInterval","notify","RENTED","dismiss","getUserData","USER_CODE","inputId","substring","found","userValue","showBook","_bookId","setBookValue","htmlFor","pattern","inputMode","onKeyDown","setUserKeyDown","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","numberOnly","bookHolder","confirmRent","ret","rentSucceed","NOT_AVAILABLE","logOut","finish","Return","scannedBook","setScannedBook","returned","setReturned","NOT_RENTED","CameraAltIcon","confirmReturn","returnSucceed","UserInfo","setDisabled","setUserInfo","setProperty","PHONE_NUMBER","EMAIL","ADDRESS","USER_LEVEL","NOTICE","Object","keys","phone","email","address","notice_","level","kid","adult","save","confirmSave","refresh","userLoading","userListData","userError","userList","setUserList","succeededToOpen","users","setUser","getUser","bookName","forceSelect","showUsers","showUser","_Fragment","input","trim","findUsers","RentHistory","RETURN_DATE","STATS","LENT_DATE","CLAMENUM","USER","userName","situation","fromTime","setFromTime","toTime","setToTime","historyLoading","historyError","yearValue","setYear","monthValue","setMonth","setQuery","option","year","month","createElement","add","thisYear","thisMonth","user_id","bookInfo","_RETURN_DATE","RENT_DATE","queryTo","nextMonth","e","warn","movePrev","moveNext","NewMember","prepareNewMember","newMember","regSuccess","regFail","RequestBook","setPublisher","note","setNote","today","setToday","setReadOnly","readonly","readOnly","requestBook","submit","Doc","constructor","userReady","Set","logCallback","os","navigator","platform","axios","get","post","updateIpAddr","checkServerIp","checkState","callback","setLogCallback","setRent","checkRent","action","has","setServerInfo","globalIp","proxy","setBook","clear","_EXTEND_COUNT","retEntry","rent_date","extend_count","openDoc","updateFunc","NodeRSA","require","queueUri","config","Context","env","rawCookie","v","reduce","acc","shift","join","decodeURIComponent","aws_key","REACT_APP_AWSS_KEY1","REACT_APP_AWSS_KEY2","aws_sec","REACT_APP_AWSS_SECRET1","REACT_APP_AWSS_SECRET2","configObject","region","credentials","accessKeyId","secretAccessKey","sqsClient","SQSClient","prk","REACT_APP_PRIVATE_KEY","passwordTyped","matched","emailDb","phoneDb","sign","numberString","isNaN","body","deduplicationId","floor","random","command","SendMessageCommand","MessageBody","QueueUrl","MessageGroupId","MessageDeduplicationId","send","receiveRequest","requests","ReceiveMessageCommand","AttributeNames","MessageAttributeNames","MaxNumberOfMessages","VisibilityTimeout","WaitTimeSeconds","Messages","msg","JSON","parse","Body","DropDown","dropdown","setDropdown","setTimeout","window","addEventListener","close","menu","classList","remove","removeEventListener","toggleMenu","MenuIcon","home","checkOutStatus","Navbar","selectedValue","setSelectedValue","lang","isMobile","newLang","go","process","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","serverLoading","serverError","serverData","notifyInit","updateLog","REACT_APP_QUEUE_URL","languages","ts","kr","en","nothing","password","LOADING","fileName","book_path","then","Router","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","Routes","Route","path","UserSearch","RentalSituation","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","link","HttpLink","uri","graphql_url","headers","cache","InMemoryCache","container","createRoot","StrictMode","ApolloProvider"],"mappings":"ulRAgCeA,MA5Bf,SAAcC,GAUV,OATAC,qBAAU,YACNC,iBACIC,QAAQC,IAAI,QACZJ,EAAMK,IAAIC,iBAAYC,EAC1B,CACAC,EAEJ,GAAG,IAEER,EAAMK,IAAII,iBAMX,kCACQC,eAAA,OAAKC,GAAG,OAAMC,SAAA,CACVC,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,YAAWJ,SACtCZ,EAAMiB,KAAKC,WAEhBL,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,UAASJ,SACpCZ,EAAMiB,KAAKE,aAVpBN,cAAA,OAAKF,GAAG,OAAOS,wBAAyB,CAACC,OAAOrB,EAAMiB,KAAKK,WAc3E,E,yBC9BO,MAAMC,EAAoB,GAajCC,OAAOC,UAAUC,OAAS,WACtB,IAAIC,EAAYC,KAChB,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACvC,IAAIG,EAAS,IAAIC,OAAO,MAAMJ,EAAE,MAAO,MACvCF,EAAYA,EAAUO,QAAQF,EAAQF,UAAUD,GACpD,CACA,OAAOF,CACX,EAEO,MAAMQ,EAAY,CACrBC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUnC,GAGDoC,EAAe,SAAS1B,EAAM2B,GACvC,MAAc,MAAVA,GAA2B,IAAVA,EACV3B,EAAK4B,OACG,MAAVD,GAA2B,IAAVA,EACf3B,EAAK6B,QACG,MAAVF,GAA2B,IAAVA,EACf3B,EAAK8B,aADX,CAET,EAEaC,EAAe,SAAS/B,EAAM2B,GACvC,OAAQA,GAEJ,IAAK,IACL,KAAK,EACD,OAAO3B,EAAKgC,UAChB,IAAK,IACL,KAAK,EACD,OAAOhC,EAAKiC,WAChB,IAAK,IACL,KAAK,EACD,OAAOjC,EAAKkC,SAChB,IAAK,IACL,KAAK,EACD,OAAOlC,EAAK6B,QAChB,IAAK,IACL,KAAK,EACD,OAAO7B,EAAKmC,KAChB,IAAK,IACL,KAAK,EACD,OAAOnC,EAAKoC,QAChB,IAAK,IACL,KAAK,EACD,OAAOpC,EAAKqC,MAChB,IAAK,IACL,KAAK,EACL,QACI,OAAOrC,EAAKsC,aAChB,IAAK,IACL,KAAK,EACD,OAAOtC,EAAKuC,QAExB,EAEaC,EAAc,SAASC,EAAOC,GAEvC,GAAID,EAAME,KAAOD,EAAMC,KACnB,OAAO,EACN,GAAIF,EAAME,KAAOD,EAAMC,KACxB,OAAQ,EACZ,MAAMC,EAASC,SAASJ,EAAMK,WACxBC,EAASF,SAASH,EAAMI,WAC9B,OAAIF,EAASG,EACF,EACFH,EAASG,GACN,EAEL,CACX,EAEaC,EAAc,SAASC,EAAIC,GAEpC,OAAID,EAAGN,KAAOO,EAAGP,KACN,EACFM,EAAGN,KAAOO,EAAGP,MACV,EAED,CACf,EAEaQ,EAAc,SAASF,EAAIC,GAEpC,OAAID,EAAGG,SAAWF,EAAGE,SACV,EACFH,EAAGG,SAAWF,EAAGE,UACd,EACRH,EAAGI,MAAQH,EAAGG,MACP,EACFJ,EAAGI,MAAQH,EAAGG,OACX,EAED,CACf,EAEaC,EAAS,SAAStD,GAC3B,OAAOuD,SAASC,mBAAmBxD,GACvC,EAMayD,EAAY,oBACZC,EAAY,oB,+CCnHzB,IAAIC,EAJJ,WACIzE,QAAQC,IAAI,gBAChB,EAiFeyE,I,sBAAAA,EA9Ef,SAAkB7E,GACV,MAAO8E,EAAUC,GAAeC,mBAAS,KAElCC,EAASC,GAAcF,mBAAS,IAChCG,EAAaC,GAAkBJ,mBAAS,IAuDnD,OArDA/E,qBAAU,WACNE,QAAQC,IAAI,iBAChB,GAAG,IAEHH,qBAAU,WAEN8E,EAAY/E,EAAMqF,KACtB,GAAG,CAACrF,EAAMqF,OAEVpF,qBAAU,WACNiF,EAAW,EACf,GAAG,CAAClF,EAAMsF,WAEVrF,qBAAU,WACFD,EAAM4E,eAINA,EAAe5E,EAAM4E,aAE7B,GAAG,CAAC5E,EAAM4E,eAEV3E,qBAAU,WACN,MAAM8B,EAAS+C,EAAS/C,OAExB,GAAIA,EAASR,EACb,CACI,MAAMgE,EAAWN,EAAU1D,EACrBiE,EAAQC,KAAKC,IAAInE,EAAmBQ,EAASwD,GACnDH,EAAeN,EAASa,MAAMJ,EAASA,EAASC,GACpD,MAGIJ,EAAeN,EAEvB,GAAG,CAACA,EAAUG,IAmBVvE,eAAA,OAAKC,GAAG,WAAUC,SAAA,CACbgE,EAAaO,EAAanF,EAAM4F,QAChCd,GAAYA,EAAS/C,OAASR,GAC3Bb,eAAA,OAAKC,GAAG,cAAaC,SAAA,CACjBC,cAAA,OAAKE,UAAU,OAAOJ,GAAK,OAAMC,SAC7BC,cAACgF,IAAkB,CAACC,SAAS,QAAQC,GAAI,CAACC,MAAoB,IAAZf,EAAiB,UAAU,WAAYgB,QAASA,KArBlH9F,QAAQC,IAAI,QACR6E,EAAU,GAEVC,EAAWD,EAAU,EAkB0G,MAEvHpE,cAAA,OAAKE,UAAU,UAAUJ,GAAG,UAASC,SAChCqE,EAAQ,IAEbpE,cAAA,OAAKE,UAAU,OAAOJ,GAAK,OAAMC,SAC7BC,cAACqF,IAAgB,CAACJ,SAAS,QAAQC,GAAI,CAACC,MAAQlB,EAAS/C,SAAWkD,EAAU,GAAK1D,EAAqB,UAAU,WAAY0E,QAASA,KAnBvJ9F,QAAQC,IAAI,QACR0E,EAAS/C,QAAUkD,EAAU,GAAK1D,GAElC2D,EAAWD,EAAU,EAgB+I,WAMhL,E,gBCrF0BkB,YAAGC,MAAAC,YAAA,4VAAtB,MAoBMC,EAAaH,YAAGI,MAAAF,YAAA,sOAchBG,EAAcL,YAAGM,MAAAJ,YAAA,uJAUjBK,EAAaP,YAAGQ,MAAAN,YAAA,4OAYhBO,EAAgBT,YAAGU,MAAAR,YAAA,yQAYnBS,EAAqBX,YAAGY,MAAAV,YAAA,yQAYxBW,EAAuBb,YAAGc,MAAAZ,YAAA,8SAY1Ba,EAAef,YAAGgB,MAAAd,YAAA,+JASlBe,EAAgBjB,YAAGkB,MAAAhB,YAAA,0LAUnBiB,EAAenB,YAAGoB,MAAAlB,YAAA,8LAYlBmB,EAAgBrB,YAAGsB,MAAApB,YAAA,4OCWjBqB,MAhIf,SAAgB1H,GACZ,MAAO2H,EAAeC,GAAoB5C,mBAAS,KAC5C6C,EAAgBC,GAAqB9C,mBAAS,KAC9CC,EAASC,GAAcF,mBAAS,IAC/B+C,QAASC,EAAeC,KAAMC,EAAYC,MAAOC,GAAgBC,YAASnB,IAC5E,GAAEvG,GAAO2H,eACRC,GAAgBR,QAASS,EAAiBP,KAAMQ,EAAcN,MAAOO,IAAkBC,YAAavB,EACnG,CAAC,UAAa,CAAC,IAAOzG,KAE9BV,qBAAU,YACNC,iBACIC,QAAQC,IAAI,UACZJ,EAAMK,IAAIC,iBAAYC,EAC1B,CACAC,EAEJ,GAAG,IAEHP,qBACI,KACIE,QAAQC,IAAI,cAIR8H,GAEAN,EAAiBM,EAAWU,OAChC,GACD,CAACV,EAAYE,EAAaJ,IAGjC/H,qBACI,KACIE,QAAQC,IAAI,cAMxB,GAEW,CAACqI,EAAcC,EAAeF,IAGrCvI,qBACI,KACI,MAAM8B,EAAS4F,EAAc5F,OAG7B,GAFA5B,QAAQC,IAAI,YAAc6E,EAAQ4D,WAAa,KAC/C1I,QAAQC,IAAI2B,GACRA,EAASR,EACb,CACI,MAAMgE,EAAWN,EAAU1D,EACrBiE,EAAQC,KAAKC,IAAInE,EAAmBQ,EAASwD,GACnDuC,EAAkBH,EAAchC,MAAMJ,EAASA,EAASC,GAC5D,MAGIsC,EAAkBH,GAClBzC,EAAW,EACf,GACD,CAACyC,EAAe1C,IAGvBhF,qBACI,QAEG,CAAC4H,IAGR5H,qBACI,KACIE,QAAQC,IAAI,cAAgBO,GACxBA,GAEA4H,GACJ,GACD,CAAC5H,EAAI4H,IAGZ,MAUMO,EAAaC,GAGPrI,eAAA,MAAIK,UAAU,GAAEH,SAAA,CACZF,eAAA,MAAIK,UAAU,GAAEH,SAAA,CAAC,IAAEmI,EAAOC,KAAK,OAC/BtI,eAAA,MAAIK,UAAU,cAAckI,QAAQ,IAAGrI,SAAA,CAClCD,IAAOoI,EAAOG,KACVrI,cAACC,IAAI,CAACE,GAAI,WAAW+H,EAAOG,IAAItI,SAAEmI,EAAOzE,QAC7C3D,IAAOoI,EAAOG,KACVrI,cAACC,IAAI,CAACE,GAAI,UAAUJ,SAAEmI,EAAOzE,aANpByE,EAAOG,KAYzC,OACQxI,eAAA,OAAKC,GAAG,SAAQC,SAAA,CACZC,cAAA,OAAKF,GAAG,QAAOC,SACXC,cAAA,MAAAD,SACKZ,EAAMiB,KAAK2H,WAGnBjI,GAAM8H,GACH5H,cAAA,OAAKF,GAAG,gBAAeC,SACnBC,cAAA,SAAOE,UAAU,UAASH,SAACF,eAAA,SAAAE,SAAA,CACnBkI,EAAUL,EAAaG,OAAO,IAClC/H,cAAA,MAAAD,SACIC,cAAA,MAAIE,UAAU,UAAUkI,QAAQ,IAAGrI,SAC9B6H,EAAaG,OAAO,GAAGO,mBAM5CtI,cAACgE,EAAQ,CAACQ,KAAMsC,EAAe/C,aAAewE,GA1ClDvI,cAAA,OAAKF,GAAG,aAAYC,SAChBC,cAAA,SAAAD,SAAOC,cAAA,SAAAD,SACHiH,EAAe9F,OAAS,GAAK8F,EAAewB,KAAKN,GAAWD,EAAUC,eA2C1F,E,wBC3HA,IAAIO,IAAc,EAomBHC,OAlmBf,SAAgBvJ,GACZ,MAAOwJ,EAAWC,GAAgBzE,mBAAS,KACpC2C,EAAeC,GAAoB5C,mBAAS,KAC5C0E,EAAYC,GAAiB3E,mBAAS,IAEtC4E,EAAUC,GAAe7E,mBAAS,KAClC8E,EAAUC,GAAe/E,mBAAS,KAElCgF,EAAWC,GAAgBjF,mBAAS,IACpCkF,EAAaC,GAAkBnF,oBAAS,IAExCoF,EAAcC,GAAsBrF,oBAAS,IAE7CsF,EAAQC,GAAavF,mBAAS,KAE9BwF,EAAgBC,GAAqBzF,oBAAS,IAE9C0F,EAAQC,GAAa3F,mBAAS,KAC9B4F,EAAQC,GAAa7F,mBAAS,KAC9B8F,EAAMC,GAAW/F,mBAAS,KAC1BgG,EAAUC,GAAejG,mBAAS,KAClCkG,EAAQC,GAAanG,mBAAS,KAE9BoG,EAAaC,GAAkBrG,mBAAS,IACxCsG,EAAaC,GAAkBvG,mBAAS,KAExCwG,GAAeC,YAAYjC,EAAW,MACtCkC,GAAczD,KAAM0D,IAAgBhD,YAAa7B,EAChD,CAAC,UAAa,CAAE,QAAWwD,KAC7BsB,EAAcC,iBAAO,KACrBC,EAAiBD,kBAAO,GACxBE,EAAeF,iBAAO,GACtBG,GAAmBH,kBAAO,IAC1B,GAAElL,IAAO2H,cAsJfpI,eAAe+L,KAEX9L,QAAQC,IAAI,mBAAqBkJ,IACjCA,IAAc,EAEd,IAAI4C,EAAK,GACLC,EAAK,CAAC,EACV,MAAMC,EAASpM,EAAMK,IAAIgM,KACzB,IAAK,IAAIxK,EAAI,EAAIA,EAAIuK,EAAOrK,OAAQF,IAEjCqK,EAAGI,KAAK,CAACC,KAAKH,EAAOvK,GAAG2K,QAASC,QAAQL,EAAOvK,GAAG6K,YAAa9J,MAAMwJ,EAAOvK,GAAGe,QAChFuJ,EAAGC,EAAOvK,GAAG2K,SAAWJ,EAAOvK,GAAGe,MAErCmH,EAAYmC,GAEZ,IAAIS,EAAK,GACT,MAAMC,EAAQ5M,EAAMK,IAAIwM,KACxB,IAAK,MAAMC,KAAOF,EAClB,CACG,MAAMC,EAAOD,EAAME,GACblK,EAASkK,KAAOX,EAAMA,EAAGW,GAAO,EACtCH,EAAGL,KAAK,CAACC,KAAMM,EAAK3D,IAAKtF,KAAMiJ,EAAKvI,MAAO1B,MAAOA,EAAOmK,IAAKF,EAAKE,IAAKrC,OAAQmC,EAAKnC,OAAQsC,MAAOH,EAAKG,MAChGC,QAASJ,EAAKK,kBACdnJ,UAAW8I,EAAK9I,UAAWoJ,UAAWN,EAAKO,OAAQC,SAAUR,EAAKS,UAAWC,QAASV,EAAKS,UAAWE,KAAMX,EAAKW,KAAMhK,QAASqJ,EAAKrJ,SACjJ,CACArD,QAAQC,IAAI,QACZD,QAAQC,IAAIuM,EAAG5K,QACf8H,EAAY8C,GAEZxM,QAAQC,IAAIkK,GACG,KAAXA,IAEAnK,QAAQC,IAAI,gBACZsL,IAER,CAkBA,SAAS+B,GAAS7K,GAEdzC,QAAQC,IAAI,aAAe4J,EAAY,OAASpH,EAAMiG,YACtDiD,EAAe4B,SAAU,EACzBvD,GAAe,GACfF,EAAarH,GACbmJ,EAAa2B,QAAU9K,EACvBzC,QAAQC,IAAIsJ,EAAWb,WAAaiD,EAAe4B,QACvD,CAEA,SAASC,GAAe/K,GAEpB,MAAMgL,EAAWhL,EAAMiG,WACjBgF,EAAQC,SAASC,eAAeH,GAAUI,QAChD7N,QAAQC,IAAI,oBAAsBwN,EAAW,WAAaC,GACzC,SAAbD,GAEAE,SAASC,eAAe,QAAQC,QAAUH,EAC1CC,SAASC,eAAe,KAAKC,QAAUH,EACvCC,SAASC,eAAe,KAAKC,QAAUH,EACvCC,SAASC,eAAe,KAAKC,QAAUH,EACvCC,SAASC,eAAe,KAAKC,QAAUH,EACvCC,SAASC,eAAe,KAAKC,QAAUH,EACvCC,SAASC,eAAe,KAAKC,QAAUH,EACvCC,SAASC,eAAe,KAAKC,QAAUH,EACvCC,SAASC,eAAe,KAAKC,QAAUH,GAIvCC,SAASC,eAAeH,GAAUI,QAAUH,EAIhD,IADA,IAAII,EAAS,EACJpM,EAAI,EAAIA,EAAI,EAAIA,IACzB,CACI,MAAMqM,EAAMrM,EAAEgH,WACRsF,EAAUL,SAASC,eAAeG,GACpCC,IACAF,GAAWE,EAAQH,QAAY,GAAKnM,EAAK,EACjD,CACAwJ,EAAe4C,GACf9N,QAAQC,IAAI,WAAa6N,EAAOpF,WACpC,CAlPA5I,qBAAU,YACNC,iBACQF,EAAMK,IAAI+N,SACVnC,KAEAjM,EAAMK,IAAIC,YAAY2L,IACtBjM,EAAMK,IAAII,iBAEV,kCAEJN,QAAQC,IAAI,YAAcO,GAC9B,CACAH,EAEJ,GAAG,IAEHP,qBACI,KACIE,QAAQC,IAAI,eAAiBO,IACzBA,IAEAR,QAAQC,IAAI,eAAiBO,IAE7B4J,EAAU5J,IACV+K,KAKAnB,EAAU,GACd,GACD,CAAC5J,GAAI+K,IAGZzL,qBACI,MAsDIC,iBAKI,IAAImO,EAHJ,GADAlO,QAAQC,IAAI,YACRoK,EASJ,GAJI6D,EADW,KAAX/D,EACUA,EAEAkB,EACdrL,QAAQC,IAAIiO,GACRA,EAAS,CACT,IAAIC,QAjEZpO,eAAyBe,GACrB,IAAIsN,EAAU,GAEd,GAAIvO,EAAMK,IAAII,gBACd,CACIN,QAAQC,IAAImE,EAAOtD,IACnBd,QAAQC,IAAIoO,KAAKjK,EAAOtD,KACxB,MAAMwN,EAAM,WAAazO,EAAMK,IAAIqO,WAAWC,QAAU,IACpD3O,EAAMK,IAAIqO,WAAWE,KAAO,QAChCzO,QAAQC,IAAI,2BACZD,QAAQC,IAAI,qBACZ,MAAMyO,EAAQ,CAAC,KAAQL,KAAKjK,EAAOtD,IAAQ,OAAQ,GAC7C6N,QAAiB9O,EAAMK,IAAI0O,WAAWN,EAAKI,GAEjD,GADA1O,QAAQC,IAAI0O,KACN,UAAWA,EAAS7G,KAAK9G,QAC3B,OAAOoN,EACX,MAAM3B,EAAQkC,EAAS7G,KAAK9G,OAAOyL,MACnC,IAAK,IAAI/K,EAAI,EAAIA,EAAI+K,EAAM7K,OAASF,IACpC,CACI,MAAMgL,EAAOD,EAAM/K,GACbmN,EAAY,GAAAC,OAAMpC,EAAKqC,SAAQ,KAAAD,OAAIpC,EAAKsC,UACxCvM,EAAQiK,EAAKuC,OACnB,IAAI3C,EAAU,GACA,IAAV7J,GAAyB,IAAVA,GAAyB,MAAVA,GAA2B,MAAVA,IAE/C6J,EAAUzM,EAAMiB,KAAKoO,WAAa,IAAMxC,EAAKyC,SAEjD,IAAIC,EAAe,CACfC,MAAO3N,EACPZ,KAAM+N,EACNpL,KAAMiJ,EAAKqC,SACX3C,KAAMM,EAAK4C,QACXpD,KAAMrJ,EAAahD,EAAMiB,KAAM4L,EAAKuC,OAAOvG,YAC3C4D,QAASA,EACTQ,QAASJ,EAAK6C,SACdhF,OAAQmC,EAAK8C,OACbxC,UAAWN,EAAK+C,WAChB7L,UAAW8I,EAAKsC,SAChB5B,QAASV,EAAKgD,QACd7C,MAAOH,EAAKiD,MACZlN,MAAOiK,EAAKuC,OACZ5B,KAAMX,EAAKkD,MAEfxB,EAAQjC,KAAKiD,EACjB,CACJ,MAGIhB,EAAUyB,GAAgB/O,EAAM2I,GAGpC,OADA2E,EAAQ0B,KAAKxM,GACN8K,CACX,CAauB2B,CAAU7B,GACrBC,EAAGvM,OAAS,EACZ6F,EAAiB0G,GAEjB1G,EAAiB,IACH,IAAd0G,EAAGvM,SACH6J,EAAY8B,QAAUY,EAAG,GAAG/B,KACpC,MACI3E,EAAiB,GAEzB,CACAuI,EAAO,GAGX,CAAC3E,EAAalB,EAAQV,EAAUE,EAAU9J,EAAOoK,EAAcI,IAEnEvK,qBACI,KAGI,GAFAE,QAAQC,IAAI,kBACZD,QAAQC,IAAIuL,IACPA,EAID,OAFAJ,EAAe,SACfS,GAAiB0B,SAAU,GAG/B,IAAI0C,EAAU,GACd,IAAK,IAAIvO,EAAI,EAAIA,EAAI8J,EAAY0E,QAAQtO,OAASF,IAClD,CACI,MAAMwK,EAAOV,EAAY0E,QAAQxO,GACjC,GAAwB,IAApBwK,EAAKiE,WACL,SACJ,IAAIC,EAAO,CAAClE,EAAKmE,WAEbD,EAAKjE,KAAKD,EAAKK,aAGnB0D,EAAQ9D,KAAKiE,EACjB,CACApQ,QAAQC,IAAIgQ,EAAQrO,QACpBwJ,EAAe6E,GACfpE,GAAiB0B,QAAW0C,EAAQrO,OAAS,CAAE,GAEnD,CAAC4J,IAkIL,MAIM7C,GAAYA,CAACC,EAAQnD,KACvB,MAAM6K,EAAU1H,EAAOwD,OAASX,EAAY8B,QACtCgD,EAAWD,EAAU,eAAiB,uBACtCE,EAAQ,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAC9EA,EAAM5H,EAAOnG,QAAS,EACD,IAAjBmG,EAAOnG,OAAgC,IAAjBmG,EAAOnG,OAAgC,IAAjBmG,EAAOnG,QACnD+N,EAAM,IAAK,GAMf,MAAMrF,EAAc1F,EAAO,GAC3B,OACIlF,eAAA,OAAAE,SAAA,CACAC,cAAA,OAAKF,GAAI+P,EAASzK,QAAS/F,cA7GlBA,WACbC,QAAQC,IAAI,QAAUwL,EAAY8B,SACL,IAAzB/F,EAAc5F,SAAyC,IAAzB6J,EAAY8B,SAAkB9B,EAAY8B,UAAYnB,GAEpFpM,QAAQC,IAAI,UAAYmM,GACxB5C,EAAc4C,GACdX,EAAY8B,QAAUnB,IAItBpM,QAAQC,IAAI,YAAcmM,GAC1B5C,GAAe,GACfiC,EAAY8B,SAAW,EAC3B,EAgGiDkD,CAAS7H,EAAOwD,MAAM3L,SAC/DC,cAAA,SAAAD,SAAOC,cAAA,SAAAD,SACHF,eAAA,MAAIK,UAAU,WAAUH,SAAA,CACpBC,cAAA,MAAIE,UAAU,cAAaH,SAAEmI,EAAO9H,OACpCJ,cAAA,MAAIE,UAAU,aAAYH,SAAEmI,EAAOsD,iBAI7CoE,GACF/P,eAAA,OAAAE,SAAA,CACIC,cAAA,SAAAD,SAAOF,eAAA,SAAAE,SAAA,CACPF,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAKmI,EAAO2B,OAAO,OACnBhK,eAAA,MAAIuI,QAAQ,IAAI4H,QAAQ,IAAGjQ,SAAA,CAAEmI,EAAOoE,UAAY,IAAItM,cAAA,KAAAD,SAAImI,EAAOnF,OAAU,IAAMmF,EAAOhF,eAFlF,QAIRlD,cAAA,MAAAD,SACIC,cAAA,MAAAD,SACIC,cAACC,IAAI,CAACE,GAAI,WAAW+H,EAAOwD,KAAK3L,SAAEmI,EAAOwD,UAF1C,QAKR7L,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAAD,SAAKmI,EAAOwE,UACZ1M,cAAA,MAAIoI,QAASF,EAAO0D,QAAQ1K,OAAS,EAAI,IAAI,IAAInB,SAAEmI,EAAOiE,QACzDjE,EAAO0D,QAAQ1K,OAAS,GAAKlB,cAAA,MAAAD,SAAKmI,EAAO0D,YAHtC,aAMR5L,cAAA,SAAOE,UAAU,cAAc0P,QAASzE,GAAiB0B,QAAQ9M,SAACF,eAAA,SAAAE,SAAA,CAC9DF,eAAA,MAAIC,GAAG,SAAQC,SAAA,CAACC,cAAA,MAAAD,SAAKZ,EAAMiB,KAAKoD,WAAcxD,cAAA,MAAAD,SAAKZ,EAAMiB,KAAKoO,gBAC7D/D,EAAYjC,KAAIyH,GA/CPA,IACdpQ,eAAA,MAAAE,SAAA,CAAmBC,cAAA,MAAAD,SAA0BkQ,EAAM,IAAvBA,EAAM,GAAK,KAAoBjQ,cAAA,MAAAD,SAAKkQ,EAAM,OAA7DA,EAAM,IA8CeC,CAAiBD,UAE/CpQ,eAAA,OAAK+P,QAASzQ,EAAMK,IAAII,kBAAoBT,EAAMK,IAAI2Q,MAAMpQ,SAAA,CACxDF,eAAA,UAAQK,UAAU,aAAaJ,GAAK,IAAIsQ,SAAUN,EAAM,GAAI1K,QAASA,IAAMwH,GAAS,GAAG7M,SAAA,CAAC,IAAEZ,EAAMiB,KAAKgC,UAAU,OAC/GvC,eAAA,UAAQK,UAAU,aAAaJ,GAAK,IAAIsQ,SAAUN,EAAM,GAAI1K,QAASA,IAAMwH,GAAS,GAAG7M,SAAA,CAAC,IAAEZ,EAAMiB,KAAKmC,KAAK,OAC1G1C,eAAA,UAAQK,UAAU,aAAaJ,GAAK,IAAIsQ,SAAUN,EAAM,GAAI1K,QAASA,IAAMwH,GAAS,GAAG7M,SAAA,CAAC,IAAEZ,EAAMiB,KAAKoC,QAAQ,OAC7G3C,eAAA,UAAQK,UAAU,aAAaJ,GAAK,IAAIsQ,SAAUN,EAAM,GAAI1K,QAASA,IAAMwH,GAAS,GAAG7M,SAAA,CAAC,IAAEZ,EAAMiB,KAAKqC,MAAM,OAC3G5C,eAAA,UAAQK,UAAU,aAAaJ,GAAK,IAAIsQ,SAAUN,EAAM,GAAI1K,QAASA,IAAMwH,GAAS,GAAG7M,SAAA,CAAC,IAAEZ,EAAMiB,KAAKsC,aAAa,OAClH7C,eAAA,UAAQK,UAAU,aAAaJ,GAAK,IAAIsQ,SAAUN,EAAM,GAAI1K,QAASA,IAAMwH,GAAS,GAAG7M,SAAA,CAAC,IAAEZ,EAAMiB,KAAKuC,QAAQ,UAEjH9C,eAAA,OAAKC,GAAG,YAAY8P,QAAS3E,EAAe4B,QAAQ9M,SAAA,CAChDF,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAEoC,EAAahD,EAAMiB,KAAM8K,EAAa2B,SAAS,OACpEhN,eAAA,UAAQC,GAAG,UAAUsF,QAASA,IAzF9C/F,iBAEIC,QAAQC,IAAI,aACZ0L,EAAe4B,SAAU,EACzBvD,GAAe,GAEf,MAAM+G,EAASlR,EAAMK,IAAIqO,WAAWC,QAC9BwC,EAAUnR,EAAMK,IAAIqO,WAAWE,KACrC,GAAsB,IAAlBsC,EAAOnP,QAAgBoP,GAAW,EAClC,OAEJ,MAAM1C,EAAM,WAAayC,EAAS,IAC9BC,EAAU,QACd,IAAIC,EAAM,CAAC,EACXA,EAAU,KAAIxF,EAAY8B,QAC1B0D,EAAW,MAAIrF,EAAa2B,QAC5BvN,QAAQC,IAAI,2BACZD,QAAQC,IAAI,2BACNJ,EAAMK,IAAIgR,YAAY5C,EAAK2C,GAEjC/G,GAAoBD,EACxB,CAoEoDkH,GAAgB1Q,SAAA,CAAC,IAAEZ,EAAMiB,KAAKsQ,QAAQ,OAC1E7Q,eAAA,UAAQC,GAAG,SAASsF,QAASA,KAjEzC9F,QAAQC,IAAI,aACZ0L,EAAe4B,SAAU,OACzBvD,GAAe,IA+D+CvJ,SAAA,CAAC,IAAEZ,EAAMiB,KAAKuQ,OAAO,eA1CrEzI,EAAOwD,KA8CX,EAYd,SAASkF,GAAUC,EAAMzQ,GAEjByQ,EACA7G,EAAU5J,GAEV8J,EAAQ9J,EAChB,CAEA,SAAS+O,GAAgB3B,EAASzE,GAE9B,IAAI2E,EAAU,GACdpO,QAAQC,IAAIoK,GACZ,MAAMvJ,EAAOoN,EAAQsD,cACrBxR,QAAQC,IAAIa,GACZ,IAAK,IAAIY,EAAI,EAAIA,EAAI+H,EAAS7H,OAASF,IAAK,CACxC,MAAM+P,EAAMhI,EAAS/H,GACrB,GAAI0M,EAAQxM,QJ9ZQ,II8ZoB,MAExC,GAAId,EAAKc,OAAS,KACZ6P,EAAIhO,OAASgO,EAAIhO,KAAKiF,WAAW8I,cAAcE,SAAS5Q,OACxD2Q,EAAIzE,YAAcyE,EAAIzE,UAAUtE,WAAW8I,cAAcE,SAAS5Q,OAClE2Q,EAAIlH,SAAWkH,EAAIlH,OAAO7B,WAAW8I,cAAcE,SAAS5Q,KAC9D2Q,EAAIrF,KAAKoF,gBAAkB1Q,GAAQ2Q,EAAIpE,OAASvM,EAChD,SACJ,GAAI2Q,EAAIpO,SAA2B,MAAhBoO,EAAIpO,QACnB,SAGJ,GAAIgH,EACJ,CACI,GAAIE,EAAO3I,OAAS,GAAK6P,EAAIlH,SAAWkH,EAAIlH,OAAO7B,WAAW8I,cAAcE,SAASnH,EAAOiH,eACxF,SAEJ,GAAI/G,EAAO7I,OAAS,GAAK6P,EAAIrF,KAAO3B,EAChC,SAEJ,GAAIE,EAAK/I,OAAS,GAAK6P,EAAIrF,KAAOzB,EAC9B,SAEJ,MAAMmC,EAAU2E,EAAI3E,QAEpB,GAAIA,EAAUjC,GAAYiC,EAAU/B,EAChC,SAMJ,GALA/K,QAAQC,IAAIwR,GACZzR,QAAQC,IAAI6M,GACZ9M,QAAQC,IAAI6M,EAAUjC,GACtB7K,QAAQC,IAAI6M,EAAU/B,KAEf,GAAG0G,EAAIhP,MAASwI,GACnB,QACR,MACK,GAAoB,IAAhBnK,EAAKc,OACV,SAEJ,IAAIiN,EAAY,GAAAC,OAAM2C,EAAIhO,KAAI,KAAAqL,OAAI2C,EAAI7N,WAClC0I,EAAU,GACV7J,EAAQ,IACZ,IAAK,MAAMkO,KAAShH,EAEhB,GAAIgH,EAAMvE,OAASqF,EAAIrF,KACvB,CACI3J,EAAQkO,EAAMlO,MACA,MAAVA,GAA2B,MAAVA,IAEjB6J,EAAUzM,EAAMiB,KAAKoO,WAAa,IAAMyB,EAAMrE,SAElD,KACJ,CAEJ,IAAI8C,EAAe,CACfC,MAAO3N,EACPZ,KAAM+N,EACNpL,KAAMgO,EAAIhO,KACV2I,KAAMqF,EAAIrF,KAAK1D,WACfwD,KAAMrJ,EAAahD,EAAMiB,KAAM2B,GAC/B6J,QAASA,EACTQ,QAAS2E,EAAI3E,QACbvC,OAAQkH,EAAIlH,OACZyC,UAAWyE,EAAIzE,UACfpJ,UAAW6N,EAAI7N,UACfwJ,QAASqE,EAAIrE,QACbP,MAAO4E,EAAI5E,MACXpK,MAAOkB,SAASlB,GAChB4K,KAAMoE,EAAIpE,MAEde,EAAQjC,KAAKiD,EAEjB,CAGA,OAFApP,QAAQC,IAAImO,EAAQxM,QAEbwM,CACX,CA8CA,OACI7N,eAAA,OAAKC,GAAG,SAAQC,SAAA,CACZC,cAAA,OAAKF,GAAG,QAAOC,SACXF,eAAA,MAAAE,SAAA,CAAI,IAAEZ,EAAMiB,KAAK6Q,WAAW,SAEhCpR,eAAA,OAAKC,GAAG,iBAAiB8P,OAAmB,KAAXnG,EAAc1J,SAAA,CAC3CC,cAAA,SAAOF,GAAG,cACNoR,YAAa/R,EAAMiB,KAAK+Q,WACxBnE,MAAOrE,EACPyI,SAAWC,IACPzI,EAAayI,EAAMC,OAAOtE,MAAM,IAEpCnN,eAAA,OAAK+P,QAASzQ,EAAMK,IAAI2Q,MAAMpQ,SAAA,CAC1BC,cAAA,SAAOuR,KAAK,WAAWzR,GAAG,iBAAiBqN,QAASxD,EAAgByH,SAAUA,KAhB9FxH,GAAmBD,EAgBwG,IAC3G3J,cAAA,SAAAD,SACKZ,EAAMiB,KAAKoR,eAGxB3R,eAAA,OAAK+P,QAASjG,EAAe5J,SAAA,CACzBF,eAAA,OAAAE,SAAA,CACAF,eAAA,SAAAE,SAAA,CAAO,IAAEZ,EAAMiB,KAAKyJ,OAAO,OAC3B7J,cAAA,SAAOuR,KAAK,OAAOzR,GAAG,SAASsR,SAAWC,IAAWvH,EAAUuH,EAAMC,OAAOtE,MAAM,OAElFnN,eAAA,OAAAE,SAAA,CACAF,eAAA,SAAAE,SAAA,CAAO,IAAEZ,EAAMiB,KAAKqR,SAAS,OAC7BzR,cAAA,SAAOuR,KAAK,OAAOzR,GAAG,aAAasR,SAAWC,IAAWT,IAAU,EAAMS,EAAMC,OAAOtE,MAAM,IAC5FhN,cAAA,SAAAD,SAAO,SACPC,cAAA,SAAOuR,KAAK,OAAOzR,GAAG,WAAWsR,SAAWC,IAAWT,IAAU,EAAOS,EAAMC,OAAOtE,MAAM,OAE3FnN,eAAA,OAAAE,SAAA,CACAF,eAAA,SAAAE,SAAA,CAAO,IAAEZ,EAAMiB,KAAKsR,eAAe,OACnC1R,cAAC2R,IAAQ,CAACP,SA3E1B,SAAsBjJ,GAElB7I,QAAQC,IAAI4I,GACZ,MAAMyJ,EAAQzJ,EAAK,GACb0J,EAAQ1J,EAAK,GAIb2J,EAHKF,EAAMG,cAAc/J,WAGT,KAFV4J,EAAMI,WAAa,GAAGhK,WAAWiK,SAAS,EAAG,KAExB,IADtBL,EAAMM,UAAUlK,WAAWiK,SAAS,EAAG,KAElD3S,QAAQC,IAAIuS,GACZ1H,EAAY0H,GAEZ,MAGMK,EAHKN,EAAME,cAAc/J,WAGT,KAFV6J,EAAMG,WAAa,GAAGhK,WAAWiK,SAAS,EAAG,KAExB,IADtBJ,EAAMK,UAAUlK,WAAWiK,SAAS,EAAG,KAElD3S,QAAQC,IAAI4S,GACZ7H,EAAU6H,EACd,EAyDkDC,aAAa,OAE/CpS,cAAA,OAAAD,SACAC,cAAA,SAAAD,SAAOF,eAAA,SAAAE,SAAA,CACHF,eAAA,MAAoBK,UAAU,WAAUH,SAAA,CACpCC,cAAA,MAAIE,UAAW,YAAWH,SAAEZ,EAAMiB,KAAKiS,MACvCrS,cAAA,MAAIE,UAAW,YAAWH,SAAEZ,EAAMiB,KAAKgC,YACvCpC,cAAA,MAAIE,UAAW,YAAWH,SAAEZ,EAAMiB,KAAKiC,aACvCrC,cAAA,MAAIE,UAAW,YAAWH,SAAEZ,EAAMiB,KAAK6B,UACvCjC,cAAA,MAAIE,UAAW,YAAWH,SAAEZ,EAAMiB,KAAKmC,OACvCvC,cAAA,MAAIE,UAAW,YAAWH,SAAEZ,EAAMiB,KAAKoC,UACvCxC,cAAA,MAAIE,UAAW,YAAWH,SAAEZ,EAAMiB,KAAKqC,QACvCzC,cAAA,MAAIE,UAAW,YAAWH,SAAEZ,EAAMiB,KAAKsC,eACvC1C,cAAA,MAAIE,UAAW,YAAWH,SAAEZ,EAAMiB,KAAKuC,YATnC,aAWR9C,eAAA,MAAsBK,UAAU,WAAUH,SAAA,CACtCC,cAAA,MAAIE,UAAW,cAAaH,SAC5BC,cAAA,SAAOuR,KAAK,WAAWrR,UAAU,aAAaJ,GAAK,OAAOsR,SAAUA,IAAMtE,GAAe,UAEzF9M,cAAA,MAAIE,UAAW,cAAaH,SAC5BC,cAAA,SAAOuR,KAAK,WAAWrR,UAAU,aAAaJ,GAAK,IAAIsR,SAAUA,IAAMtE,GAAe,OAEtF9M,cAAA,MAAIE,UAAW,cAAaH,SAC5BC,cAAA,SAAOuR,KAAK,WAAWrR,UAAU,aAAaJ,GAAK,IAAIsR,SAAUA,IAAMtE,GAAe,OAEtF9M,cAAA,MAAIE,UAAW,cAAaH,SAC5BC,cAAA,SAAOuR,KAAK,WAAWrR,UAAU,aAAaJ,GAAK,IAAIsR,SAAUA,IAAMtE,GAAe,OAEtF9M,cAAA,MAAIE,UAAW,cAAaH,SAC5BC,cAAA,SAAOuR,KAAK,WAAWrR,UAAU,aAAaJ,GAAK,IAAIsR,SAAUA,IAAMtE,GAAe,OAEtF9M,cAAA,MAAIE,UAAW,cAAaH,SAC5BC,cAAA,SAAOuR,KAAK,WAAWrR,UAAU,aAAaJ,GAAK,IAAIsR,SAAUA,IAAMtE,GAAe,OAEtF9M,cAAA,MAAIE,UAAW,cAAaH,SAC5BC,cAAA,SAAOuR,KAAK,WAAWrR,UAAU,aAAaJ,GAAK,IAAIsR,SAAUA,IAAMtE,GAAe,OAEtF9M,cAAA,MAAIE,UAAW,cAAaH,SAC5BC,cAAA,SAAOuR,KAAK,WAAWrR,UAAU,aAAaJ,GAAK,IAAIsR,SAAUA,IAAMtE,GAAe,OAEtF9M,cAAA,MAAIE,UAAW,cAAaH,SAC5BC,cAAA,SAAOuR,KAAK,WAAWrR,UAAU,aAAaJ,GAAK,IAAIsR,SAAUA,IAAMtE,GAAe,SA1BlF,sBA+BZ9M,cAAA,OAAAD,SACAF,eAAA,UAAQC,GAAG,cAAcsF,QAtGzC,WAEI9F,QAAQC,IAAI,UACZD,QAAQC,IAAIwK,GACZzK,QAAQC,IAAI0K,GACZ3K,QAAQC,IAAI4K,GACZ7K,QAAQC,IAAI8K,GACZ,IAAIqD,EAAUyB,GAAgBxG,EAAWI,GACzC2E,EAAQ0B,KAAKxM,GAEb,IAAI6K,EAAKC,EACLD,EAAGvM,OAAS,EACZ6F,EAAiB0G,GAEjB1G,EAAiB,IACH,IAAd0G,EAAGvM,SACH6J,EAAY8B,QAAUY,EAAG,GAAG/B,KACpC,EAqF8D3L,SAAA,CAAC,IAAEZ,EAAMiB,KAAKkS,OAAO,eAI3EtS,cAACgE,EAAQ,CAACS,SAAUkG,EAAanG,KAAMsC,EAAe/B,OAAQ,CAAC8D,EAAYQ,EAAaoB,GAAc1G,aAAcA,CAACwE,EAASxD,IAnOtI,SAAqB2I,EAAS3I,GAK1B,OAHAzF,QAAQC,IAAI,UAAY0L,EAAe4B,SACvCvN,QAAQC,IAAI4L,GAAiB0B,SAC7BvN,QAAQC,IAAIwF,GACL2I,EAAQlF,KAAKN,GAAWD,GAAUC,EAAQnD,IACrD,CA6N0JwN,CAAYhK,EAASxD,OAGnL,E,SCnmBA,MAAMyN,GACS,EADTA,GAES,EAFTA,GAGS,EAuWAC,OAlWf,SAAwBtT,GACpB,MAAOuT,EAAUC,GAAexO,mBAAS,KAClCyO,EAAcC,GAAmB1O,mBAAS,KAC1C2C,EAAeC,GAAoB5C,mBAAS,KAC5CsE,EAAaqK,GAAkB3O,oBAAS,IACxC4O,EAAQC,GAAa7O,mBAAS,KAC9BpC,EAAO6K,GAAYzI,mBAASqO,KAC5BjD,EAAS0D,GAAc9O,mBAAS,KAChC+O,EAAaC,GAAkBhP,mBAAS,IACxCiP,EAAWC,GAAgBlP,oBAAS,IACpCmP,GAAYlM,KAAMmM,IAAczL,YAAajC,EACnC,CAAE,UAAa,CAAE,IAAOkN,MAClClI,GAAezD,KAAM0D,IAAiBhD,YAAa/B,EACzC,CAAE,UAAa,CAAE,QAAWgN,MACtCS,GAAepM,KAAMqM,IAAiB3L,YAAanB,EACzC,CAAE,UAAa,CAAE,QAAWoM,MACtCW,EAAYC,GAAiBxP,mBAAS,KACtCV,EAAOmQ,GAAYzP,mBAAS,IA2GnC9E,eAAe+L,IAGX,GADA9L,QAAQC,IAAI,mBAAqBkJ,GAC7BtJ,EAAMK,IAAIqU,OACd,CACIjH,EAAS4F,IACT,MAAMO,EAAS5T,EAAMK,IAAIsU,SAAc,IACvCd,EAAUD,GACVhM,QAAuB5H,EAAMK,IAAIuU,QAAQhB,IACzCzT,QAAQC,IAAIJ,EAAMK,IAAIuU,QAAQhB,UACxBlI,UACA2I,GAEV,MAGI5G,EAAS4F,IACTQ,EAAU,IACVH,EAAgB,IAGpBvT,QAAQC,IAAI,aAAeJ,EAAMK,IAAIqU,QACjC1U,EAAMK,IAAIqU,OAEN1U,EAAMK,IAAIwU,UACVJ,EAASzU,EAAMiB,KAAK6T,YAEpBL,EAASzU,EAAMiB,KAAKC,UAIxBuT,EAASzU,EAAMiB,KAAK8T,OAExB5U,QAAQC,IAAI,QACZuT,GAAe,EACnB,CA5IA1T,qBAAU,YACNC,iBACI,IAAKF,EAAMK,IAAIiJ,YACX,OAYJ,GAVItJ,EAAMK,IAAI+N,UACVnC,IACJ9L,QAAQC,IAAI,2CACZD,QAAQC,IAAI,6BAERJ,EAAMK,IAAII,iBAEV,kCAGA,cAAeT,EAAMgV,QAAQC,OACjC,CACI,MAAMhB,EAAgD,SAAnCjU,EAAMgV,QAAQC,OAAOhB,UACxCC,EAAaD,EACjB,CACA,MAAMjL,EAAO,IAAIkM,KAEjBlM,EAAKmM,QAAQnM,EAAKoM,UAAWC,QAC7Bb,EAAcxL,EAAKsM,cACvB,CAEA9U,EAEJ,GAAG,IAEHP,qBACI,KACIE,QAAQC,IAAI,sBACZ6L,GAAW,GAGf,CAACjM,EAAMK,IAAIqU,SAGfzU,qBAAU,MACFC,iBACIC,QAAQC,IAAI,4BACNmV,GACV,CACAC,EAAM,GAGV,CAACpB,IAGLnU,qBACI,KACI,IAAK0L,IAAgB3L,EAAMK,IAAIoV,YAAczV,EAAMK,IAAIqV,UACnD,OACJvV,QAAQC,IAAI,oBAEZ,IAAIuV,EAAO,GACX,MAAMC,EAAWjK,EAAY0E,QAE7B,IAAK,IAAIxO,EAAI,EAAIA,EAAI+T,EAAS7T,OAASF,IACvC,CACI,MAAMiP,EAAQ8E,EAAS/T,GACvB,GAAyB,MAArBiP,EAAMR,YAA2C,IAArBQ,EAAMR,WAClC,SACJ,KAAO,gBAAiBQ,KAAYA,EAAMpE,YACtC,SAEJ,MAAM/L,EAAKmQ,EAAMtE,QACjB,KAAM7L,KAAMX,EAAMK,IAAIwM,MAClB,SAEJ,MAAMA,EAAO7M,EAAMK,IAAIwM,KAAKlM,GAEtB2D,EAAQuI,EAAKvI,MACb0I,EAAQH,EAAKG,MACbhE,EAAO8H,EAAMN,UAAUqF,MAAM,KAAK,GAAG3T,QAAQ,IAAK,IAAK,GAAGA,QAAQ,IAAK,KACvEuK,EAAUqE,EAAMpE,YAAYmJ,MAAM,KAAK,GAAG3T,QAAQ,IAAK,IAAK,GAAGA,QAAQ,IAAK,KAClFyT,EAAKrJ,KACD,CAAC,GAAM3L,EAAI,MAAS2D,EAAO,SAAY0E,EAAM,QAAWyD,EAAS,MAASO,EACzE,UAAaH,EAAKO,OAAQ,UAAaP,EAAK9I,WAIrD,CACA4R,EAAK1F,KAAK7L,GACVjE,QAAQC,IAAI,eACZ0T,EAAW6B,EAAK,GAGpB,CAAChK,EAAa3L,EAAMK,IAAIoV,UAAWzV,EAAMK,IAAIqV,YAGjDzV,qBACI,KACIE,QAAQC,IAAI,gBACRkU,IAEAnU,QAAQC,IAAI,qBACZJ,EAAMK,IAAIyV,WAAWxB,EAAYyB,SACrC,GAGJ,CAACzB,IAwCL,MAuDMlB,EAAcA,CAACrK,EAAQqH,KACzB,IAAI4F,EAKJ,OAHIA,EADA5F,EACUpQ,EAAMiB,KAAKoO,WAEXrP,EAAMiB,KAAKgV,QACjBpV,cAAA,OAAAD,SACIC,cAAA,SAAAD,SAAOF,eAAA,SAAAE,SAAA,CACPF,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,GAAG,KAAIC,SAAEZ,EAAMiB,KAAKN,KACxBE,cAAA,MAAIF,GAAG,WAAUC,SAAEZ,EAAMiB,KAAKoD,WAC9BxD,cAAA,MAAIF,GAAG,aAAYC,SAAEoV,MAHjB,MAMJjN,EAAOM,KAAI,CAACgD,EAAMmD,IArEnB0G,EAAC7J,EAAMmD,EAAOY,KAC7B,MAAMzP,EAAK0L,EAAS,GACdhI,EAAWgI,EAAe,SAC1BI,EAAUJ,EAAc,QACxBW,EAAQX,EAAY,MACpBS,EAAM0C,EAAM3G,WACZkL,EAAc1H,EAAK0H,YACnBoC,EAAcpC,GA1KT,EA2KX,IAAIqC,EACAC,EAUJ,OATIjG,EAEAgG,EAAe,KAIfC,EAAYrW,EAAMK,IAAIiW,WAAW3V,GACjCyV,EAAe,KAEX1V,eAAC6V,IAAMC,SAAQ,CAAA5V,SAAA,CACXF,eAAA,MAAcK,UAAU,WAAUH,SAAA,CAC9BC,cAAA,MAAIE,UAAU,WAAUH,SAACC,cAACC,IAAI,CAACE,GAAI,WAAWL,EAAGC,SAAED,MACnDE,cAAA,MAAIE,UAAU,WAAUH,SAAEyD,IAC1BxD,cAAA,MAAIE,UAAU,WAAUH,SAAE6L,MAHrBK,GAKTpM,eAAA,MAAwBK,UAAU,WAAUH,SAAA,CACxCC,cAAA,MAAIE,UAAU,WAAUH,SAAEoM,IAC1BtM,eAAA,MAAIuI,QAAQ,IAAI4H,QAASuF,EAAcrV,UAAU,WAAUH,SAAA,CACtDyL,EAAKc,UAAY,IAAItM,cAAA,KAAAD,SAAIyL,EAAK/H,QAAW,IAAM+H,EAAKtI,eAHpD+I,EAAM,UAMbsD,GACEvP,cAAA,MAAyBE,UAAU,aAAYH,SAC3CF,eAAA,MAAIK,UAAU,aAAYH,SAAA,CAAC,IAACF,eAAA,UAAQC,GAAG,SAASsF,QAAS/F,SAAYuW,EAAO9V,GACxEsQ,SAAUoF,GAAaF,EAAYvV,SAAA,CAClCuV,GAAenW,EAAMiB,KAAKyV,UACzBL,IAAcF,GAAgBnW,EAAMiB,KAAKoV,YACxCA,GAAaF,IAAgBnW,EAAMiB,KAAKwV,OAAO,IAChD1C,EAAY,WANbjH,EAAM,YAbFA,EAAM,WAuBV,EA4BEoJ,CAAW7J,EAAMmD,EAAOY,KAIjB,IAAlBrH,EAAOhH,QAAgBlB,cAAA,MAAAD,SAAeC,cAAA,MAAIoI,QAAQ,IAAGrI,SAAEZ,EAAMiB,KAAK0V,WAAnC,cAGjC,EAaZF,EAASvW,UACXC,QAAQC,IAAI,UACZ,MAAM4I,GAAO,IAAIkM,MAAO0B,cAAc1U,QAAQ,IAAK,KAAKA,QAAQ,IAAK,IACrE/B,QAAQC,IAAI4I,GACZ,MAAM+M,EACF,mBACqBnC,EADrB,oBAEqBtJ,EAFrB,iBAGkBtB,EAHlB,+BAOJhJ,EAAMgV,QAAQ6B,YAAYd,GAC1B/V,EAAMK,IAAIyW,WAAWxM,GACrB0J,EAAeD,EAAc,EAAE,EAG7BwB,EAAUrV,UACZ,IAAKkU,GAAYxR,IAAUyQ,GACvB,OAEJlT,QAAQC,IAAI2W,KAAMC,SAASrS,IAC3B,MAAMsS,EAAO9U,EAGb,IAAIlB,EADJd,QAAQC,IAAIqT,GAEZ,MAAMyD,EAAO9C,EAAS8C,KAAK,GACvBlX,EAAMgV,QAAQmC,WAAWD,EAAMzD,IAE/BzT,EAAMK,IAAI0U,MAAMmC,GAEhBtP,QAAuB5H,EAAMK,IAAIuU,QAAQhB,IACzCnG,EAAS4F,IAET4D,EAAK7E,KAAO2E,KAAMK,KAAKC,QACvBpW,EAAOjB,EAAMiB,KAAKqW,aAClBxJ,SAASmH,OAAS,WAAarB,EAAS,aAAeW,EAAa,MAIpE0C,EAAK7E,KAAO2E,KAAMK,KAAKG,MACvBtW,EAAOjB,EAAMiB,KAAKuW,WAEtBP,EAAKQ,OAASxW,EACdgW,EAAK5U,UAAY,IACjB4U,EAAKS,QAAU/S,EACXoS,KAAMC,SAASrS,IAEfxE,QAAQC,IAAI,gBACZ2W,KAAMY,OAAOhT,EAAWsS,KAIxB9W,QAAQC,IAAI,aACZ2W,KAAMa,KAAK3W,EAAMgW,GACrB,EAGJ,OAAKjX,EAAMK,IAAIiJ,YAIX5I,eAAA,OAAKC,GAAG,WAAUC,SAAA,CACdC,cAAA,OAAKF,GAAG,QAAOC,SACXC,cAAA,MAAAD,SACK0D,MAGT5D,eAAA,OAAKC,GAAG,gBAAgB8P,SAAU7N,IAAUyQ,IAAgBzS,SAAA,CACxDC,cAAA,SAAOuR,KAAK,OAAOzR,GAAG,cAClBoR,YAAa/R,EAAMiB,KAAK4W,SACxBhK,MAAO0F,EACPtC,UAAW3H,EACXwO,QAAU5F,IACNsB,EAAYtB,EAAMC,OAAOtE,MAAM,IAEvChN,cAAA,SAAOuR,KAAK,WAAWzR,GAAG,iBACtBoR,YAAa/R,EAAMiB,KAAK8W,SACxBlK,MAAO4F,EACPxC,UAAW3H,EACXwO,QAAU5F,IACNwB,EAAgBxB,EAAMC,OAAOtE,MAAM,IAE3CnN,eAAA,OAAKC,GAAG,YAAWC,SAAA,CACfC,cAAA,SAAOuR,KAAK,WAAWzR,GAAG,kBAAkBqN,QAASiG,EAAWhC,SAAUA,IA/HlE+F,MACpB7X,QAAQC,IAAI,oBACZ,MAAM6X,EAAe,cAAgBhE,EAAY,QAAQ,QAAU,aAAeM,EAAa,IAE/FzG,SAASmH,OAASgD,EAClB/D,GAAcD,EAAU,EA0HoE+D,KAChFnX,cAAA,SAAAD,SACSZ,EAAMiB,KAAKgT,eAGzBvT,eAAA,UAAQC,GAAG,QAAQsF,QAAS/F,SAnGzBA,WACVuN,EAAS4F,IACTQ,EAAUN,EAAS2E,qBACb/D,UACAzI,UACA2I,IACNlU,QAAQC,IAAI,gBACNmV,GAAS,EA4FgCR,GAAQnU,SAAA,CAAC,IAAEZ,EAAMiB,KAAK8T,MAAM,UAEvErU,eAAA,OAAKC,GAAG,iBAAiB8P,SAAU7N,IAAUyQ,IAAgBzS,SAAA,CACzDC,cAAA,OAAAD,SACMwS,EAAYzL,GAAe,KAGjC9G,cAAA,OAAKF,GAAG,OAAMC,SAAEZ,EAAMiB,KAAKmP,UAC3BvP,cAACgE,EAAQ,CAACQ,KAAM+K,EAASxL,aAAewE,GAAqBgK,EAAYhK,GAAS,WAtCnFvI,cAACsX,IAAQ,CAACnX,GAAG,KA0C5B,ECzWA,MAAMqS,GACS,EADTA,GAES,EAFTA,GAGS,EA0gBA+E,OAtgBf,SAAkBpY,GACd,MAAO4T,EAAQC,GAAa7O,mBAAS,KAE9BqT,EAAUC,GAAetT,mBAAS,KAClCuT,GAAa9M,YAAY4M,EAAU,MACnC/N,EAAQC,GAAavF,mBAAS,KAE9BkF,EAAaC,GAAkBnF,oBAAS,IAExCwT,EAASC,GAAczT,mBAAS,KAEhC0T,EAAeC,GAAoB3T,mBAAS,CAAC,IAE7CoH,EAAQwM,GAAa5T,mBAAS,KAC9BoP,EAAUyE,GAAe7T,mBAAS,CAAC,IACnC8T,EAAUC,GAAe/T,mBAAS,CAAC,IACnCpC,EAAO6K,GAAYzI,mBAASqO,KAE7B,GAAE1S,GAAO2H,cAET0Q,EAAWC,cAEjBhZ,qBAAU,WAuBN,MAAMiZ,EAAWC,aAAYjZ,UAEzB,KAAM,YAAaF,EAAMK,IAAIqO,eAAiB,SAAU1O,EAAMK,IAAIqO,YAC9D,OACJ,GAAI1O,EAAMK,IAAI2Q,MACV,OACJ,kCACA,MAAME,EAASlR,EAAMK,IAAIqO,WAAWC,QAC9BwC,EAAUnR,EAAMK,IAAIqO,WAAWE,KACrC,GAAIsC,EAAOnP,OAAS,GAAKoP,EAAU,EACnC,CACI,MAAM1C,EAAM,WAAayC,EAAS,IAC9BC,EAAU,eAER5E,SADiBvM,EAAMK,IAAI0O,WAAWN,EAAK,CAAC,IAC5BxG,KAAKmR,KACvB7M,IACApM,QAAQC,IAAImM,GACZpM,QAAQC,IAAIwC,GACZ6V,EAAWlM,GAEnB,IACD,KAGH,OA9CArM,iBACIC,QAAQC,IAAI,2CACZD,QAAQC,IAAI,uBACZ,MAAMiZ,EAAavL,SAASwL,kBAAkB,YAC9C,IAAK,IAAIzX,EAAI,EAAIA,EAAIwX,EAAWtX,OAASF,IACzC,CACI,MAAM0X,EAASF,EAAWxX,GAAGlB,GAEzB0Y,EAAWxX,GAAGmM,QADd,OAASuL,CAKjB,CACApZ,QAAQC,IAAI,OAASO,GACjBA,GAAoB,IAAdA,EAAGoB,SAGT8R,EAAUlT,GACVoU,EAAMpU,GAEd,CAyBAH,GACO,IAAMgZ,cAAcN,EAE/B,GAAG,IAEHjZ,qBACI,KACIE,QAAQC,IAAI,eAAiBO,EAAG,GACjC,CAACA,IAGRV,qBACI,KACSuY,IAELrY,QAAQC,IAAI,oBAAsBoY,GAClCrY,QAAQC,IAAI,WAAawC,GACrBA,IAAUyQ,GACV9I,EAAUiO,GACL5V,IAAUyQ,IACf0B,EAAMyD,GAAQ,GAEnB,CAACA,IAGRvY,qBACI,KACIE,QAAQC,IAAI,sBACZD,QAAQC,IAAI2W,KAAMC,SAASrS,IAC3B,MAAMsS,EAAO9U,EAEb,IAAIlB,EACAwY,GAAS,EACT,cAAerF,GAAYxR,IAAUyQ,IAErClT,QAAQC,IAAI,8BAAgCwC,GAC5C6K,EAAS4F,IAET4D,EAAK7E,KAAO2E,KAAMK,KAAKC,QACvBpW,EAAOjB,EAAMiB,KAAKqW,aAClBmC,GAAS,GAEF,cAAerF,IAEtBjU,QAAQC,IAAI,+BAAiCwC,GAEzCA,IAAUyQ,KAEV4D,EAAK7E,KAAO2E,KAAMK,KAAKG,MACvBtW,EAAOjB,EAAMiB,KAAKuW,UAClBiC,GAAS,GAEbhM,EAAS4F,KAGToG,GAEAd,EAAiB,CAAC,GAAMjU,EACN,KAAQzD,EACR,KAAQgW,EAAK7E,MACnC,GAGJ,CAACgC,IAGLnU,qBACI,KACIE,QAAQC,IAAI,iBACR,YAAa0Y,EAEW,IAApBA,EAAS1J,OAETjF,GAAe,IAIfwO,EAAiB,CAAC,GAAMjU,EACN,KAAQ1E,EAAMiB,KAAKyY,OACnB,KAAQ3C,KAAMK,KAAKG,QACrCpN,GAAe,KAKnBA,GAAe,GAEfI,EAAU,IACd,GAGJ,CAACuO,IAGL7Y,qBACI,KACI,KAAO,SAAUyY,GACb,OAEJ3B,KAAM4C,UACNxZ,QAAQC,IAAI,gBAAkBsY,EAAczX,MAC5C,MAAMgW,EAAO9U,EACb8U,EAAK7E,KAAOsG,EAActG,KAC1B6E,EAAK5U,UAAY,IASb0U,KAAMa,KAAKc,EAAczX,KAAMgW,EAAK,GAG5C,CAACyB,IA8BL,MAAMkB,EAAc1Z,UAChB,MAAMuO,EAAM,WAAazO,EAAMK,IAAIqO,WAAWC,QAAU,IAAM3O,EAAMK,IAAIqO,WAAWE,KAAO,cAAgB2E,EACpG1E,EAAQ,CAAC,KAAQ0E,EAAU,KAAO,WAElC2D,SADiBlX,EAAMK,IAAI0O,WAAWN,EAAKI,IAC3B5G,KAAK9G,OAE3B0X,EAAY3B,GACZ/W,QAAQC,IAAI8W,GACZrD,EAAUqD,EAAK2C,UAAU,EAGvB9E,EAAQ7U,iBAAgC,IAAzB4Z,EAAOhY,UAAAC,OAAA,QAAAxB,IAAAuB,UAAA,GAAAA,UAAA,QAAGvB,EAC3B,IAAIqT,EAEA/R,EADA0X,EAAS,GAEb,MAAMF,EAAavL,SAASwL,kBAAkB,YAC9C,GAAIQ,EACJ,CACI,GAAIA,EAAQ/X,QAAU,EAClB,OACJwX,EAASO,EAAQC,UAAU,EAAG,GAC9B,IAAIC,GAAQ,EACZ,IAAKnY,EAAI,EAAIA,EAAIwX,EAAWtX,OAASF,IAEjC,GAAI0X,IAAWF,EAAWxX,GAAGlB,GAC7B,CACIqZ,GAAQ,EACR,KACJ,CAEJ,IAAKA,EACD,OACJpG,EAASkG,CACb,KAEA,CACI,MAAMG,EAAYnM,SAASC,eAAe,aAAaF,MACvD,IAAKhM,EAAI,EAAIA,EAAIwX,EAAWtX,OAASF,IAE7BwX,EAAWxX,GAAGmM,UACduL,EAASF,EAAWxX,GAAGlB,IACvBR,QAAQC,IAAI,YAAcyB,EAAEgH,WAAa,IAAM0Q,EAAS,KAI5D3F,EADiB,MAAjBqG,EAAU,IAA+B,MAAjBA,EAAU,GACzBA,EAEAV,EAASU,CAC1B,CAGA,GAFA9Z,QAAQC,IAAI,SACZD,QAAQC,IAAIwT,GACU,IAAlBA,EAAO7R,OACP,OACJ5B,QAAQC,IAAI,+BAAiCwC,GAC7C6K,EAAS4F,IACT,MAAMnK,EAAM0K,EAAOsE,cACnB0B,EAAY1Q,EAChB,EA2JA,SAASgR,EAAStN,GAEd,OAAQlM,eAAA,OAAKC,GAAG,WAAUC,SAAA,CACdF,eAAA,OAAKC,GAAG,UAASC,SAAA,CAChBZ,EAAMiB,KAAKgV,QAAQ,MAAIjW,EAAMK,IAAI4V,WAEjCrJ,EAAMvD,KAAI,CAACgD,EAAMmD,IAxBlC,SAAmBA,EAAOnD,GAWtB,OAAQ3L,eAAA,OAAKC,GAAG,YAAWC,SAAA,CACfF,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAEyL,EAAK1L,GAAG,OAC7BD,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAEyL,EAAKzI,KAAK,SAFVyI,EAAK1L,GAK1C,CAQqDmI,CAAU0G,EAAOnD,OAEtE,CA4BA,OAvKApM,qBAAU,MACNC,iBACI,GAAIqY,EAAUxW,QAAU,EACpB,OACJ,IAAIoY,EAEAA,EADAna,EAAMK,IAAI2Q,MACAuH,EAEA,KAAOA,EACrBpY,QAAQC,IAAI,gBAAkB+Z,GAC9B,MAAM1L,EAAM,WAAazO,EAAMK,IAAIqO,WAAWC,QAAU,IACpD3O,EAAMK,IAAIqO,WAAWE,KAAO,QAE1BC,EAAQ,CAAC,KAAQsL,EAAS,OAAS,GAEnCtN,SADiB7M,EAAMK,IAAI0O,WAAWN,EAAKI,IAC3B5G,KAAK9G,OAC3BhB,QAAQC,IAAIyM,GAER,UAAWA,GAAQ,aAAcA,EAAKD,QAEtCzM,QAAQC,IAAIyM,EAAKD,OACjBmM,EAAYlM,EAAKD,OAEzB,CACAwN,EAAc,GACf,CAAC7B,EAAWvY,EAAMK,MAErBJ,qBAAU,MACNC,iBAEI,GADAC,QAAQC,IAAI,eAAiBkK,GACP,IAAlBA,EAAOvI,OACP,OACJ5B,QAAQC,IAAI,gBAAkBkK,GAC9B,MAAMmE,EAAM,WAAazO,EAAMK,IAAIqO,WAAWC,QAAU,IACpD3O,EAAMK,IAAIqO,WAAWE,KAAO,QAE1BC,EAAQ,CAAC,KAAQvE,EAAQ,OAAS,GAElCuC,SADiB7M,EAAMK,IAAI0O,WAAWN,EAAKI,IAC3B5G,KAAK9G,OAC3BhB,QAAQC,IAAIyM,GACR,UAAWA,GAAQ,aAAcA,EAAKD,OAEtCmM,EAAYlM,EAAKD,MAEzB,CACArC,EAAW,GACZ,CAACD,EAAQtK,EAAMK,MAElBJ,qBAAU,MACNC,iBAEI,GADAC,QAAQC,IAAI,eAAiBwT,GACxBA,GAA4B,IAAlBA,EAAO7R,SAEM,IAAxB6R,EAAOT,OAAO,OAAuC,IAAxBS,EAAOT,OAAO,OAC/C,CACI,MAAMkG,EAAavL,SAASwL,kBAAkB,YACxCC,EAAS3F,EAAOmG,UAAU,EAAG,GACnC,IAAK,IAAIlY,EAAI,EAAIA,EAAIwX,EAAWtX,OAASF,IACzC,CACI,MAAMlB,EAAK0Y,EAAWxX,GAAGlB,GAErB0Y,EAAWxX,GAAGmM,QADduL,IAAW5Y,CAKnB,CACJ,CACJ,CACJkT,EAAW,GACR,CAACD,IAmGAlT,eAAA,OAAKC,GAAG,WAAUC,SAAA,CACdC,cAAA,OAAKF,GAAG,QAAOC,SACXC,cAAA,MAAAD,SACKZ,EAAMiB,KAAKC,aAGpBR,eAAA,OAAKC,GAAG,gBAAgB8P,OAAQ7N,IAAUyQ,GAAezS,SAAA,CACrDC,cAAA,SAAOuR,KAAK,QAAQzR,GAAK,KAAKiD,KAAK,aACnC/C,cAAA,SAAOwZ,QAAQ,KAAKtZ,UAAU,WAAW6C,KAAK,WAAUhD,SAAC,SACzDC,cAAA,SAAOuR,KAAK,QAAQzR,GAAK,KAAKiD,KAAK,aACnC/C,cAAA,SAAOwZ,QAAQ,KAAKtZ,UAAU,WAAW6C,KAAK,WAAUhD,SAAC,SACzDC,cAAA,SAAOuR,KAAK,OAAOzR,GAAG,YAAY2Z,QAAQ,SAASC,UAAU,UACzDxI,YAAa/R,EAAMiB,KAAK4W,SACxB2C,UAAYtI,KA1B5B,SAAwBA,GAEF,UAAdA,EAAMpF,MAEN3M,QAAQC,IAAI8R,GACZ/R,QAAQC,IAAI0N,SAASC,eAAe,aAAaF,OACjDkH,IAER,CAmBoB0F,CAAevI,EAAM,IAE9BxR,eAAA,UAAQC,GAAG,QAAQsF,QAAS/F,SAAY6U,IAAQnU,SAAA,CAAC,IAAEZ,EAAMiB,KAAK8T,MAAM,UAEvErU,eAAA,OAAKC,GAAG,iBAAiB8P,OAAQ7N,IAAUyQ,GAAezS,SAAA,CACrDwT,EAASyF,WACNnZ,eAAA,OAAKC,GAAG,WAAUC,SAAA,CACdC,cAAA,OAAKF,GAAG,WAAUC,SACbwT,EAASyF,UAAY,MAAQzF,EAASsG,UAAY1a,EAAMiB,KAAK0Z,aAElEja,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAE+B,EAAa3C,EAAMiB,KAAMmT,EAASwG,YAAY,OACnEla,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAEwT,EAASyG,MAAM9Y,OAAS,IAAM/B,EAAMiB,KAAK6Z,WAAW,UAGjFja,cAAA,OAAKF,GAAG,YAAY8P,OAAQvG,EAAYtJ,SACpCF,eAAA,SAAOC,GAAG,cAAaC,SAAA,CACnBC,cAAA,OAAKF,GAAG,WAAUC,SACjBZ,EAAMiB,KAAK8Z,aAEZla,cAAA,SAAO0Z,UAAU,UAAUD,QAAQ,SAASlI,KAAK,OAAOzR,GAAG,YACvDoR,YAAa/R,EAAMiB,KAAK+Z,WACxBlD,QAAU5F,IACNoG,EAAYpG,EAAMC,OAAOtE,MAAM,SAI/CnN,eAAA,OAAKC,GAAG,YAAY8P,QAASvG,EAAYtJ,SAAA,CACrCF,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAEZ,EAAMiB,KAAKga,YAAY,OAC5Cva,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAEkY,EAASnJ,OAAS,IAAI,OAC3CjP,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAEkY,EAAS5J,SAAS,OACvCxO,eAAA,UAAQC,GAAG,UAAUsF,QAAS/F,SA7I9CA,iBAEIC,QAAQC,IAAI,aACZ+J,GAAe,GACfhK,QAAQC,IAAI0Y,GACZ,MAAMrK,EAAM,WAAazO,EAAMK,IAAIqO,WAAWC,QAAU,IAAM3O,EAAMK,IAAIqO,WAAWE,KAAO,YACpFC,EAAQ,CACVhC,KAAMiM,EAASrJ,QACfyH,KAAMtD,GAGJsH,SADiBlb,EAAMK,IAAIgR,YAAY5C,EAAKI,IAC7B5G,KAAK9G,OAI1B,GAHAhB,QAAQC,IAAI,kBACZD,QAAQC,IAAI8a,GAEA,YAARA,EAEAvC,EAAiB,CAAC,GAAMjU,EACN,KAAQ1E,EAAMiB,KAAKka,YACnB,KAAQpE,KAAMK,KAAKC,UACrCjL,EAAOE,KAAK,CAAC,GAAMwM,EAASrJ,QAAS,KAAQqJ,EAAS5J,WACtD/O,QAAQC,IAAIgM,GACZwM,EAAUxM,OAGd,CACI,IAAInL,EAEAA,EADAia,KAAOlb,EAAMiB,KACNjB,EAAMiB,KAAKia,GAEXlb,EAAMiB,KAAKma,cACtBjb,QAAQC,IAAIa,GACZ0X,EAAiB,CAAC,GAAMjU,EACN,KAAQzD,EACR,KAAQ8V,KAAMK,KAAKG,OACzC,CACAwB,EAAY,CAAC,GAEbxO,EAAU,IACVqP,EAAYhG,EAChB,CAqG0DtC,GAAgB1Q,SAAA,CAAC,IAAEZ,EAAMiB,KAAKsQ,QAAQ,OAChF7Q,eAAA,UAAQC,GAAG,SAASsF,QAASA,KAjEzC9F,QAAQC,IAAI,aACZ+J,GAAe,GACf4O,EAAY,CAAC,QAEbxO,EAAU,KA6DoD3J,SAAA,CAAC,IAAEZ,EAAMiB,KAAKuQ,OAAO,UAE1EpF,EAAOrK,OAAS,GACblB,cAACgE,EAAQ,CAACQ,KAAM+G,EAAQxH,aAAekM,GAAkBoJ,EAASpJ,QAG1EpQ,eAAA,UAAQC,GAAG,eAAesF,QAASA,IAjP5B/F,WACXC,QAAQC,IAAI,UACZyY,EAAY,CAAC,GACbE,EAAY,CAAC,GAEblF,EAAU,IACVtJ,EAAU,IACVqO,EAAU,IACVI,EAAS,IAAI,EAyOgCqC,GAASza,SAAA,CAAC,IAAEZ,EAAMiB,KAAKqa,OAAO,SAGnF,E,qBC/LeC,OA5Uf,SAAgBvb,GACZ,MAAOqY,EAAUC,GAAetT,mBAAS,KAClCwG,GAAeC,YAAY4M,EAAU,MAQrCmD,EAAaC,GAAkBzW,mBAAS,CAAC,IACzCkF,EAAaC,GAAkBnF,oBAAS,IACxC0T,EAAeC,GAAoB3T,mBAAS,CAAC,IAC7CwT,EAASC,GAAczT,mBAAS,KAChC0W,EAAUC,GAAe3W,mBAAS,IACnCgU,EAAWC,cAuQjB,SAASiB,EAAStN,GAEd,OAAQ/L,cAAA,OAAKF,GAAG,WAAUC,SACbgM,EAAMvD,KAAI,CAACgD,EAAMmD,IAXlC,SAAmBA,EAAOnD,GAEtB,OAAQ3L,eAAA,OAAKC,GAAG,YAAWC,SAAA,CACfF,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAEyL,EAAK1L,GAAG,OAC7BD,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAEyL,EAAKzI,KAAK,SAFVyI,EAAK1L,GAI1C,CAKqDmI,CAAU0G,EAAOnD,MAEtE,CAOA,OAjRApM,qBAAU,WAON,MAAMiZ,EAAWC,aAAYjZ,UACzB,KAAM,YAAaF,EAAMK,IAAIqO,eAAiB,SAAU1O,EAAMK,IAAIqO,YAC9D,OACJ,GAAI1O,EAAMK,IAAI2Q,MACV,OACJ,kCACA,MAAME,EAASlR,EAAMK,IAAIqO,WAAWC,QAC9BwC,EAAUnR,EAAMK,IAAIqO,WAAWE,KACrC,GAAIsC,GAAUA,EAAOnP,OAAS,GAAKoP,EAAU,EAC7C,CACI,MAAM1C,EAAM,WAAayC,EAAS,IAC9BC,EAAU,eAERtE,SADiB7M,EAAMK,IAAI0O,WAAWN,EAAK,CAAC,IAC5BxG,KAAKmR,KACvBvM,IACA1M,QAAQC,IAAIyM,EAAKsG,OAAO,OACE,IAAtBtG,EAAKsG,OAAO,QACZhT,QAAQC,IAAIoY,EAAU,OAAS3L,GAC/B4L,EAAW5L,IAGvB,IACD,KAGH,OA/BA3M,iBACIF,EAAMK,IAAIC,iBAAYC,GACtBJ,QAAQC,IAAI,2CACZD,QAAQC,IAAI,oBAChB,CA0BAI,GACO,IAAMgZ,cAAcN,EAE/B,GAAG,IA8CHjZ,qBAAU,MACNC,iBACI,GAAImY,EAAStW,OAAS,EACtB,CACI,IAAIuI,EAEAA,EADAtK,EAAMK,IAAI2Q,MACDqH,EAEA,KAAOA,EACpBlY,QAAQC,IAAI,gBAAkBkK,GAC9B,MAAMmE,EAAM,WAAazO,EAAMK,IAAIqO,WAAWC,QAAU,IACpD3O,EAAMK,IAAIqO,WAAWE,KAAO,QAE1BC,EAAQ,CAAC,KAAQvE,EAAQ,OAAS,GAElCuC,SADiB7M,EAAMK,IAAI0O,WAAWN,EAAKI,IAC3B5G,KAAK9G,OACvB,UAAW0L,GAAQ,aAAcA,EAAKD,OAEtC6O,EAAe5O,EAAKD,MAE5B,CACJ,CACArC,EAAW,GACZ,CAACiB,EAAaxL,EAAMK,IAAKgY,IAE5BpY,qBAAU,MACNC,iBAEI,GADAC,QAAQC,IAAI,IAAMoY,GACdA,EAAQzW,OAAS,EACrB,CACI,MAAMuI,EAASkO,EACfrY,QAAQC,IAAI,gBAAkBkK,GAC9B,MAAMmE,EAAM,WAAazO,EAAMK,IAAIqO,WAAWC,QAAU,IACpD3O,EAAMK,IAAIqO,WAAWE,KAAO,QAC1BC,EAAQ,CAAC,KAAQvE,EAAQ,OAAS,GAElCuC,SADiB7M,EAAMK,IAAI0O,WAAWN,EAAKI,IAC3B5G,KAAK9G,OAC3BhB,QAAQC,IAAIyM,GACR,UAAWA,GAAQ,aAAcA,EAAKD,OAEtC6O,EAAe5O,EAAKD,MAE5B,CACJ,CACA6L,EAAY,GACb,CAACD,EAASxY,EAAMK,MAanBJ,qBACI,KACIE,QAAQC,IAAI,iBACR,YAAaob,EAEc,IAAvBA,EAAYpM,QAAuC,IAAvBoM,EAAYpM,OAExCjF,GAAe,IAIfhK,QAAQC,IAAI,cACZuY,EAAiB,CAAC,GAAMjU,EACN,KAAQ1E,EAAMiB,KAAK2a,WACnB,KAAQ7E,KAAMK,KAAKG,QACrCzJ,SAASC,eAAe,eAAeF,MAAO,KAC9C1D,GAAe,GACfsO,EAAW,KAKftO,GAAe,EACnB,GAGJ,CAACqR,IAGLvb,qBACI,KACI,KAAO,SAAUyY,GACb,OAEJ3B,KAAM4C,UACN,MAAM1C,EAAO9U,EACb8U,EAAK7E,KAAOsG,EAActG,KAC1B6E,EAAK5U,UAAY,IASb0U,KAAMa,KAAKc,EAAczX,KAAMgW,EAAK,GAG5C,CAACyB,IAGLzY,qBACI,KAGI,GAFAE,QAAQC,IAAI,oBACZD,QAAQC,IAAIsb,KACN,YAAa1b,EAAMK,IAAIqO,eAAiB,SAAU1O,EAAMK,IAAIqO,YAC9D,OACJvO,QAAQC,IAAI,sBACZ,MAAMkK,EAAS,KAAO+N,EACtBlY,QAAQC,IAAI,gBAAkBkK,GAC9B,MAAMmE,EAAM,WAAazO,EAAMK,IAAIqO,WAAWC,QAAU,IACpD3O,EAAMK,IAAIqO,WAAWE,KAAO,QAC1BC,EAAQ,CAAC,MAAS6M,GACxB1b,EAAMK,IAAI0O,WAAWN,EAAKI,EAAM,GAEpC,CAAC6M,EAAUrD,EAAUrY,EAAMK,MAsE3BK,eAAA,OAAKC,GAAG,WAAUC,SAAA,CACdC,cAAA,OAAKF,GAAG,QAAOC,SACXC,cAAA,MAAAD,SACKZ,EAAMiB,KAAKE,WAGpBT,eAAA,OAAKC,GAAG,iBAAgBC,SAAA,CACpBF,eAAA,OAAKC,GAAG,YAAY8P,OAAQvG,EAAYtJ,SAAA,CACxCF,eAAA,SAAOC,GAAG,cAAc8P,QAAM,EAAA7P,SAAA,CAC1BC,cAACgb,KAAa,CAAC/V,SAAS,QAAQC,GAAI,CAACC,MAAO,aAC5CnF,cAAA,cAGJH,eAAA,SAAOC,GAAG,cAAaC,SAAA,CACnBC,cAAA,OAAKF,GAAG,WAAUC,SACbZ,EAAMiB,KAAK8Z,aAEhBla,cAAA,SAAO0Z,UAAU,UAAUD,QAAQ,OAAMlI,KAAK,OAAOzR,GAAG,cACpDoR,YAAa/R,EAAMiB,KAAK+Z,WACxBlD,QAAU5F,IACNoG,EAAYpG,EAAMC,OAAOtE,MAAM,UAI3CnN,eAAA,OAAKC,GAAG,cAAc8P,QAASvG,EAAYtJ,SAAA,CACvCF,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAEZ,EAAMiB,KAAK6a,cAAc,OAC9Cpb,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAE4a,EAAY7L,OAAS,IAAI,OAC9CjP,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAE4a,EAAYtM,SAAS,OAC1CxO,eAAA,UAAQC,GAAG,UAAUsF,QAASA,IA/F9C/F,iBAEIC,QAAQC,IAAI,aACZ+J,GAAe,GACfhK,QAAQC,IAAIob,GAEZ,MAAM/M,EAAM,WAAazO,EAAMK,IAAIqO,WAAWC,QAAU,IAAM3O,EAAMK,IAAIqO,WAAWE,KAAO,UACpFC,EAAQ,CACVhC,KAAM2O,EAAY/L,SAGhByL,SADiBlb,EAAMK,IAAIgR,YAAY5C,EAAKI,IAC7B5G,KAAK9G,OAE1B,GADAhB,QAAQC,IAAI8a,GACA,YAARA,EAEAvC,EAAiB,CAAC,GAAMjU,EACN,KAAQ1E,EAAMiB,KAAK8a,cACnB,KAAQhF,KAAMK,KAAKC,UACrCqE,EAASpP,KAAK,CAAC,GAAMkP,EAAY/L,QAAS,KAAQ+L,EAAYtM,WAC9D/O,QAAQC,IAAIsb,GACZC,EAAYD,OAGhB,CACI,IAAIza,EAEAA,EADAia,KAAOlb,EAAMiB,KACNjB,EAAMiB,KAAKia,GAEXlb,EAAMiB,KAAKma,cACtBjb,QAAQC,IAAIa,GACZ0X,EAAiB,CAAC,GAAMjU,EACN,KAAQzD,EACR,KAAQ8V,KAAMK,KAAKG,OACzC,CACAkE,EAAe,CAAC,GAChBhD,EAAW,GACf,CA2DoDnH,GAAgB1Q,SAAA,CAAC,IAAEZ,EAAMiB,KAAKsQ,QAAQ,OAC1E7Q,eAAA,UAAQC,GAAG,SAASsF,QAASA,KAxDzC9F,QAAQC,IAAI,aACZ+J,GAAe,GACfsR,EAAe,CAAC,QAChBhD,EAAW,KAqDmD7X,SAAA,CAAC,IAAEZ,EAAMiB,KAAKuQ,OAAO,UAE1EkK,EAAS3Z,OAAS,GACflB,cAACgE,EAAQ,CAACQ,KAAMqW,EAAU9W,aAAekM,GAAkBoJ,EAASpJ,QAG5EpQ,eAAA,UAAQC,GAAG,eAAesF,QAASA,IAzC5B/F,WACXC,QAAQC,IAAI,UACZ4Y,EAAS,IAAI,EAuCgCqC,GAASza,SAAA,CAAC,IAAEZ,EAAMiB,KAAKqa,OAAO,SAGnF,E,OC7LeU,OAjJf,SAAkBhc,GACd,MAAOkK,EAAaC,GAAkBnF,oBAAS,IACxCiM,EAAUgL,GAAejX,oBAAS,IAClC2P,EAAUuH,GAAelX,mBAAS,CAAC,GAgB1C,SAASmX,EAAY3M,EAAO3B,GAExB1N,QAAQC,IAAIoP,GACZrP,QAAQC,IAAIyN,GACZ,IAAI+J,EAAOjD,EACX,OAAQnF,GAER,KAAK,EACDoI,EAAK8C,UAAY7M,EACjB,MACJ,KAAK,EACD+J,EAAKwE,aAAevO,EACpB,MACJ,KAAK,EACD+J,EAAKyE,MAAQxO,EACb,MACJ,KAAK,EACD+J,EAAK0E,QAAUzO,EACf,MACJ,KAAK,EACD+J,EAAK2E,WAAa1O,EAClB,MACJ,KAAK,EACD+J,EAAK4E,OAAS3O,EAKlB,MAAM9L,EAAS0a,OAAOC,KAAK9E,GAAM7V,OACjC5B,QAAQC,IAAI2B,GAERA,EAAS,GACTka,GAAY,GAChBC,EAAYtE,EAChB,CA+BA,OA/EA3X,qBAAU,WACNE,QAAQC,IAAI,aACZD,QAAQC,IAAIJ,EAAM4X,MAClB9J,SAASC,eAAe,YAAYF,MAAQ7N,EAAM4X,KAAK8C,UAAY1a,EAAM4X,KAAK8C,UAAY,GAC1F5M,SAASC,eAAe,SAASF,MAAQ7N,EAAM4X,KAAKwE,aAAepc,EAAM4X,KAAKwE,aAAe,GAC7FtO,SAASC,eAAe,SAASF,MAAQ7N,EAAM4X,KAAKyE,MAAQrc,EAAM4X,KAAKyE,MAAQ,GAC/EvO,SAASC,eAAe,WAAWF,MAAQ7N,EAAM4X,KAAK0E,QAAUtc,EAAM4X,KAAK0E,QAAU,GACrFxO,SAASC,eAAe,WAAWF,MAAQ7N,EAAM4X,KAAK4E,OAASxc,EAAM4X,KAAK4E,OAAS,GACnF1O,SAASC,eAAe,cAAcF,MAAQ7N,EAAM4X,KAAK2E,WACzDL,EAAY,CAAC,UAAalc,EAAM4X,KAAKiC,YACrCoC,GAAY,EAEhB,GAAG,CAACjc,EAAM4X,OAoENlX,eAAA,OAAAE,SAAA,CACIC,cAAA,SAAAD,SAAOF,eAAA,SAAAE,SAAA,CACHF,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAEZ,EAAMiB,KAAK2C,KAAK,OACtB/C,cAAA,MAAIoI,QAAQ,IAAGrI,SACXC,cAAA,SAAOuR,KAAK,OAAOrR,UAAU,QAAQJ,GAAG,WAAWsR,SAAWC,IAAWiK,EAAY,EAAGjK,EAAMC,OAAOtE,MAAM,QAH3G,QAMP,aAAc7N,EAAM4X,MACjBlX,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAEZ,EAAMiB,KAAKsR,eAAe,OAChC1R,cAAA,MAAIoI,QAAQ,IAAIlI,UAAU,OAAMH,SAC3BZ,EAAM4X,KAAKlI,aAHZ,YAOZhP,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAEZ,EAAMiB,KAAK0b,MAAM,OACvB9b,cAAA,MAAIoI,QAAQ,IAAGrI,SACXC,cAAA,SAAOuR,KAAK,OAAOrR,UAAU,QAAQJ,GAAG,QAAQsR,SAAWC,IAAWiK,EAAY,EAAGjK,EAAMC,OAAOtE,MAAM,QAHxG,SAMRnN,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAEZ,EAAMiB,KAAK2b,MAAM,OACvB/b,cAAA,MAAIoI,QAAQ,IAAGrI,SACXC,cAAA,SAAOuR,KAAK,OAAOrR,UAAU,QAAQJ,GAAG,QAAQsR,SAAWC,IAAWiK,EAAY,EAAGjK,EAAMC,OAAOtE,MAAM,QAHxG,SAMRnN,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAEZ,EAAMiB,KAAK4b,QAAQ,OACzBhc,cAAA,MAAIoI,QAAQ,IAAGrI,SACXC,cAAA,SAAOuR,KAAK,OAAOrR,UAAU,QAAQJ,GAAG,UAAUsR,SAAWC,IAAWiK,EAAY,EAAGjK,EAAMC,OAAOtE,MAAM,QAH1G,WAMRnN,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAEZ,EAAMiB,KAAK6b,QAAQ,OACzBjc,cAAA,MAAIoI,QAAQ,IAAGrI,SACXC,cAAA,SAAOuR,KAAK,OAAOrR,UAAU,QAAQJ,GAAG,UAAUsR,SAAWC,IAAWiK,EAAY,EAAGjK,EAAMC,OAAOtE,MAAM,QAH1G,UAMRnN,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAEZ,EAAMiB,KAAK8b,MAAM,OACvBlc,cAAA,MAAIoI,QAAQ,IAAIlI,UAAU,OAAMH,SAC5BF,eAAA,UAAQkD,KAAK,aAAajD,GAAG,aAAaI,UAAU,WAAWkR,SAAWC,IAAWiK,EAAY,EAAGjK,EAAMC,OAAOtE,MAAM,EAAGjN,SAAA,CACtHF,eAAA,UAAQmN,MAAM,IAAGjN,SAAA,CAAC,IAAEZ,EAAMiB,KAAK+b,IAAI,OACnCtc,eAAA,UAAQmN,MAAM,IAAGjN,SAAA,CAAC,IAAEZ,EAAMiB,KAAKgc,MAAM,OACrCvc,eAAA,UAAQmN,MAAM,IAAGjN,SAAA,CAAC,IAAEZ,EAAMiB,KAAK+P,MAAM,cANzC,cAWbtQ,eAAA,UAAQC,GAAG,SAAS8P,OAAQvG,EAAajE,QAAS/F,SAAYiK,GAAe,GAAO8G,SAAUA,EAASrQ,SAAA,CAAC,IAAEZ,EAAMiB,KAAKic,KAAK,OACzHxc,eAAA,OAAKC,GAAG,cAAc8P,QAASvG,EAAYtJ,SAAA,CACvCF,eAAA,OAAKC,GAAG,YAAWC,SAAA,CAAC,IAAEZ,EAAMiB,KAAKkc,YAAY,OAC7Czc,eAAA,UAAQC,GAAG,UAAUsF,QAASA,IApF1C/F,iBAEIC,QAAQC,IAAI,qBACZD,QAAQC,IAAIuU,GACZ,MAAMzD,EAASlR,EAAMK,IAAIqO,WAAWC,QAC9BwC,EAAUnR,EAAMK,IAAIqO,WAAWE,KACrC,GAAsB,IAAlBsC,EAAOnP,QAAgBoP,GAAW,EAClC,OAEJ,MAAM1C,EAAM,WAAayC,EAAS,IAC9BC,EAAU,QAEd,IAAIC,EAAM,CAAC,EACXjR,QAAQC,IAAIuU,GACZ,IAAK,MAAM7H,KAAO6H,EAEdvD,EAAItE,GAAO0B,KAAKjK,EAAOoQ,EAAS7H,KAEpC,MAAMgC,QAAiB9O,EAAMK,IAAIgR,YAAY5C,EAAK2C,GAClDjR,QAAQC,IAAI0O,GACZ9O,EAAMod,QAAQtO,GACd3E,GAAe,EACnB,CA8DgDmH,GAAgB1Q,SAAA,CAAC,IAAEZ,EAAMiB,KAAKsQ,QAAQ,OAC1E7Q,eAAA,UAAQC,GAAG,SAASsF,QAASA,KA3DrCkE,GAAe,EA2D2C,EAAAvJ,SAAA,CAAC,IAAEZ,EAAMiB,KAAKuQ,OAAO,YAIvF,ECsNe4G,OA5Vf,SAAkBpY,GACd,MAAOuT,EAAUC,GAAexO,mBAAS,KAClCwG,GAAeC,YAAY8H,EAAU,MACrCnJ,EAAcC,GAAsBrF,oBAAS,IAC7C2C,EAAeC,GAAoB5C,mBAAS,KAC5CsE,EAAaqK,GAAkB3O,oBAAS,IACxCmP,GAAWpM,QAASsV,EAAapV,KAAMqV,EAAcnV,MAAOoV,IAAe5U,YAAanC,IACxFgX,EAAUC,GAAezY,mBAAS,CAAC,GAEpC4G,EAAcC,iBAAO,MACrB,GAAElL,GAAO2H,eACRwB,EAAUC,GAAe/E,mBAAS,IACnCgU,EAAWC,cAgFjB/Y,eAAe+L,IACd,IADwBwN,IAAM3X,UAAAC,OAAA,QAAAxB,IAAAuB,UAAA,KAAAA,UAAA,GAI3B,GAFA3B,QAAQC,IAAI,mBAAqBkJ,GAE7BmQ,EACJ,CACI,MAAMxC,EAAO9U,EACb8U,EAAK7E,KAAO2E,KAAMK,KAAKC,QACvBJ,EAAKQ,OAASzX,EAAMiB,KAAKyc,gBACzBzG,EAAK5U,UAAY,IACjB4U,EAAKS,QAAU,GACfX,KAAMa,KAAK5X,EAAMiB,KAAKyc,gBAAiBzG,EAC3C,CACA9W,QAAQC,IAAI,aAAeJ,EAAM0U,QACjCvU,QAAQC,IAAI,QACZuT,GAAe,EACnB,CAEA,SAASyJ,EAAQtO,GAEb3O,QAAQC,IAAI,gBAAkBgK,GAC9BjK,QAAQC,IAAI0O,GACZzE,GAAoBD,EACxB,CArGAnK,qBAAU,YACNC,iBACSF,EAAMK,IAAIiJ,cAIXtJ,EAAMK,IAAI+N,SACVnC,GAAU,GAEVjM,EAAMK,IAAIC,YAAY2L,GAC1B9L,QAAQC,IAAI,2CACZD,QAAQC,IAAI,yBACZD,QAAQC,IAAI,YAAcO,GAEtBX,EAAMK,IAAII,gBAEV,mCAIAN,QAAQC,IAAI,cACZ+T,KAER,CAEA3T,EAEJ,GAAG,IAEHP,qBACI,KACIE,QAAQC,IAAI,eAAiBO,GAGzB6S,EAFA7S,GAMY,GAChB,GACD,CAACA,IAGRV,qBACI,KACIE,QAAQC,IAAI,sBACZ6L,GAAU,EAAM,GAGpB,CAACjM,EAAM0U,SAGXzU,qBACI,KAII,GAHAE,QAAQC,IAAI,oBACZD,QAAQC,IAAImd,GACZpd,QAAQC,IAAIid,GACRC,EACJ,CACI,MAAMK,EAAQL,EAAapG,KAE3B,IAAI7R,EAAO,GACXlF,QAAQC,IAAI,uBACZ,IAAK,IAAIyB,EAAI,EAAGA,EAAI8b,EAAM5b,OAAQF,IAClC,CACI,MAAMqV,EAAOyG,EAAM9b,GACbiP,EAAQ,CAAC,GAAMoG,EAAKhO,IAAK,KAAQgO,EAAKtT,KAAM,MAASsT,EAAK6F,MAAO,MAASpa,EAAa3C,EAAMiB,KAAMiW,EAAKtU,QAC9GyC,EAAKiH,KAAKwE,EACd,CACA3Q,QAAQC,IAAIiF,GACZrF,EAAMK,IAAIud,QAAQvY,GAClBlF,QAAQC,IAAIJ,EAAMK,IAAIwd,WACtBJ,EAAYzd,EAAMK,IAAIwd,UAC1B,IAEJ,CAACP,EAAcD,EAAaE,EAAWvd,IAwD3C,MAAMkW,EAAaA,CAAC7J,EAAMmD,KACtB,MAAM7O,EAAK0L,EAAS,GACdhI,EAAWgI,EAAe,SAC1BI,EAAUJ,EAAc,QACxByR,EAAWzR,EAAY,MACvB0H,EAAc1H,EAAK0H,YACnBjH,EAAM0C,EAAM3G,WAElB,OAAQnI,eAAC6V,IAAMC,SAAQ,CAAA5V,SAAA,CACXF,eAAA,MAAcK,UAAU,WAAUH,SAAA,CAC9BC,cAAA,MAAIE,UAAU,WAAUH,SAACC,cAACC,IAAI,CAACE,GAAI,WAAWL,EAAGC,SAAED,MACnDE,cAAA,MAAIE,UAAU,WAAUH,SAAEyD,IAC1BxD,cAAA,MAAIE,UAAU,WAAUH,SAAE6L,MAHrBK,GAKTpM,eAAA,MAAwBK,UAAU,WAAUH,SAAA,CACxCC,cAAA,MAAIoI,QAASjJ,EAAMK,IAAII,gBAAgB,IAAI,IAAKM,UAAU,WAAUH,SAAEkd,IACrE9d,EAAMK,IAAII,iBACPI,cAAA,MAAIE,UAAU,WAAUH,SAACC,cAAA,UAAQE,UAAU,SAASkF,QAASA,IA7CrF/F,eAAsB4M,GAElB3M,QAAQC,IAAI,UAAY0M,GACxB,MAAMoE,EAASlR,EAAMK,IAAIqO,WAAWC,QAC9BwC,EAAUnR,EAAMK,IAAIqO,WAAWE,KACrC,GAAsB,IAAlBsC,EAAOnP,QAAgBoP,GAAW,EAClC,OAEJ,MAAM1C,EAAM,WAAayC,EAAS,IAC9BC,EAAU,UACd,IAAIC,EAAM,CAAC,EACXA,EAAU,KAAItE,EAEd,MAAMoO,QAAYlb,EAAMK,IAAIgR,YAAY5C,EAAK2C,GAI7C,GAHAjR,QAAQC,IAAI,YACZD,QAAQC,IAAI8a,GACZtK,EAAShF,EAAY8B,SAAS,GACN,YAApBwN,EAAIjT,KAAK9G,OACb,CACI,MAAM8V,EAAO9U,EACb8U,EAAK7E,KAAO2E,KAAMK,KAAKC,QACvBJ,EAAKQ,OAASzX,EAAMiB,KAAKyc,gBACzBzG,EAAK5U,UAAY,IACjB4U,EAAKS,QAAU,GACfX,KAAMa,KAAK5X,EAAMiB,KAAKwV,OAAQQ,EAClC,CACJ,CAmB2FR,CAAO9V,GAAIC,SAAEZ,EAAMiB,KAAKwV,OAAS,KAAO1C,EAAYlL,WAAa,UAHnIiE,EAAM,WANEA,EAAM,WAYV,EAIvB8D,EAAW1Q,eAAOS,GAA6B,IAAzBod,EAAWjc,UAAAC,OAAA,QAAAxB,IAAAuB,UAAA,IAAAA,UAAA,GACnC,MAAMuK,QAAarM,EAAMK,IAAIuU,QAAQjU,GACrCR,QAAQC,IAAIiM,IACiB,IAAzBT,EAAY8B,SAAkB9B,EAAY8B,UAAY/M,GAAMod,GAE5D5d,QAAQC,IAAI,UAAYO,GAExBiL,EAAY8B,QAAU/M,EACtBR,QAAQC,IAAI,iBACZD,QAAQC,IAAIiM,GACZtC,EAAYsC,IAGP1E,EAAc5F,OAAS,IAE5B5B,QAAQC,IAAI,YAAcO,GAE1BiL,EAAY8B,SAAW,EACvB3D,EAAY,IAGpB,EAmBMiU,EAAYA,CAACjV,EAAQnD,IACflF,eAAA,OAAAE,SAAA,CAEQmI,EAAOM,KAAI,CAAC6N,EAAM1H,IApBrByO,EAAC/G,EAAMtR,EAAQ4J,KAC5B,MAAM1C,EAAM0C,EAAM3G,WAClB,OACQnI,eAAA,OAAAE,SAAA,CACIC,cAAA,SAAAD,SAAOC,cAAA,SAAAD,SACHF,eAAA,MAAkBK,UAAU,WAAWkF,QAAS/F,eAAiB0Q,EAASsG,EAAKvW,IAAIC,SAAA,CAC/EC,cAAA,MAAIE,UAAU,WAAUH,SAAEsW,EAAKvW,KAC/BE,cAAA,MAAIE,UAAU,WAAUH,SAAEsW,EAAKtT,OAC/B/C,cAAA,MAAIE,UAAU,WAAUH,SAAEsW,EAAKtU,QAC/B/B,cAAA,MAAIE,UAAU,WAAUH,SAAEsW,EAAK7K,SAJ1B6K,EAAKvW,QAObuW,EAAKvW,KAAOiL,EAAY8B,SAAW0F,EAAY8D,EAAMtR,KATpDkH,EAUJ,EAQamR,CAAS/G,EAAMtR,EAAQ4J,KAIhB,IAAlBzG,EAAOhH,QACPlB,cAAA,SAAAD,SAAOC,cAAA,SAAAD,SACHC,cAAA,MAAAD,SAAeC,cAAA,MAAIoI,QAAQ,IAAGrI,SAAEZ,EAAMiB,KAAK0V,WAAnC,eAM1BvD,EAAcA,CAAC8D,EAAMtR,KACvBzF,QAAQC,IAAI,UACZD,QAAQC,IAAI8W,GACJxW,eAAAwd,WAAA,CAAAtd,SAAA,CACKZ,EAAMK,IAAII,iBACPC,eAAA,OAAAE,SAAA,CACAC,cAACmb,GAAQ,CAAC/a,KAAMjB,EAAMiB,KAAMZ,IAAKL,EAAMK,IAAKuX,KAAMV,EAAMkG,QAASA,IACjE1c,eAAA,UAAQC,GAAG,SAASsF,QAASA,IAAM+S,EAAS,aAAe9B,EAAK2C,WAAWjZ,SAAA,CAAC,IAAEZ,EAAMiB,KAAKC,SAAS,UAGtGL,cAAA,SAAAD,SAAOF,eAAA,SAAAE,SAAA,CACPF,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,GAAG,KAAIC,SAAEZ,EAAMiB,KAAKN,KACxBE,cAAA,MAAIF,GAAG,WAAUC,SAAEZ,EAAMiB,KAAKoD,WAC9BxD,cAAA,MAAIF,GAAG,aAAYC,SAAEZ,EAAMiB,KAAKgV,YAH5B,MAMJrQ,EAAOyD,KAAI,CAACgD,EAAMmD,IACP0G,EAAW7J,EAAMmD,KAIV,IAAlB5J,EAAO7D,QAAgBlB,cAAA,MAAAD,SAAeC,cAAA,MAAIoI,QAAQ,IAAGrI,SAAEZ,EAAMiB,KAAK0V,WAAnC,iBA4EnD,OAvEA1W,qBACI,MAkBIC,iBACI,MAAMie,EAAQ5K,EAAS6K,OAEvB,GADAje,QAAQC,IAAI,SAAW+d,EAAQ,IAAM3S,GACjC2S,EAAMpc,OAAS,GAAKyJ,EAAa,CAEjC,IAAI8C,EACJ,GAAItO,EAAMK,IAAII,gBACd,CACIN,QAAQC,IAAI,aACZ,MAAMqO,EAAM,WAAazO,EAAMK,IAAIqO,WAAWC,QAAU,IAAM3O,EAAMK,IAAIqO,WAAWE,KAAO,SACpFC,EAAQ,CAAC,KAAQL,KAAKjK,EAAO4Z,KAC7BrP,QAAiB9O,EAAMK,IAAI0O,WAAWN,EAAKI,GAC3C8O,EAAQ7O,EAAS7G,KAAK9G,OAAO8G,KAGnC,GAFA9H,QAAQC,IAAI0O,EAAS7G,KAAK9G,QAC1BmN,EAAK,GACDqP,EACA,IAAK,MAAM7M,KAAShC,EAAS7G,KAAK9G,OAAO8G,KACzC,CACI9H,QAAQC,IAAI0Q,GACZ,IAAIoG,EAAOpG,EACXoG,EAAKvW,GAAKmQ,EAAM+I,UAChB3C,EAAKtT,KAAOkN,EAAM4J,UAClBxD,EAAKtU,MAAQD,EAAa3C,EAAMiB,KAAM6P,EAAM8J,YAC5C1D,EAAK7K,KAAOyE,EAAM+J,MAAM9Y,OACxBuM,EAAGhC,KAAK4K,EACZ,CAER,MAGI/W,QAAQC,IAAI,WACZkO,QAhDZpO,eAAyBe,GACrB,IAAIsN,EAAU,GAGZ,IAAK,MAAMzB,KAAO0Q,EAAU,CAC1B,MAAM5L,EAAM4L,EAAS1Q,GACrB,GAAIyB,EAAQxM,QTjRA,ISiR4B,OACnC6P,EAAIhO,MAAQgO,EAAIhO,KAAKiF,WAAWgJ,SAAS5Q,IACzC2Q,EAAIjR,GAAGgR,gBAAkB1Q,EAAK0Q,gBAE/BpD,EAAQjC,KAAKsF,EAErB,CAGA,OAFArD,EAAQ0B,KAAKhM,GACb9D,QAAQC,IAAImO,GACLA,CACX,CAgCuB8P,CAAU7S,GAGrB8C,EAAGvM,OAAS,EACZ6F,EAAiB0G,GAEjB1G,EAAiB,IACH,IAAd0G,EAAGvM,OACJ6O,EAAStC,EAAG,GAAG3N,IAEfiQ,EAAS,EAChB,MACIhJ,EAAiB,GAEzB,CACAuI,EAAO,GAGZ,CAAC3E,EAAaxL,EAAOwd,EAAUpT,EAAcmJ,IAG3CvT,EAAMK,IAAIiJ,YAIX5I,eAAA,OAAKC,GAAG,WAAUC,SAAA,CACdC,cAAA,OAAKF,GAAG,QAAOC,SACXC,cAAA,MAAAD,SACKZ,EAAMiB,KAAK6T,eAGpBpU,eAAA,OAAKC,GAAG,gBAAgB8P,QAASzQ,EAAMK,IAAI2Q,MAAMpQ,SAAA,CAC7CC,cAAA,SAAOuR,KAAK,OAAOzR,GAAG,cAClBoR,YAAa/R,EAAMiB,KAAK4W,SACxBhK,MAAO0F,EACPtB,SAAWC,IACPsB,EAAYtB,EAAMC,OAAOtE,MAAM,IAEvChN,cAAA,OAAAD,SACIC,cAACgE,EAAQ,CAACS,SAAUkG,EAAanG,KAAMsC,EAAe/B,OAAQkE,EAAUlF,aAAcA,CAACwE,EAASxD,IAAoBoY,EAAU5U,EAASxD,aAjB5I/E,cAACsX,IAAQ,CAACnX,GAAG,KAsB5B,ECjJesd,OA7Mf,SAAqBte,GACjB,MAAO8J,EAAUC,GAAe/E,mBAAS,KAClCsE,EAAaqK,GAAkB3O,oBAAS,IACxCmP,GAAWpM,QAASsV,EAAapV,KAAMqV,EAAcnV,MAAOoV,IAAe5U,YAAanC,IACxFgX,EAAUC,GAAezY,mBAAS,CAAC,GAuD1C9E,eAAe+L,IAGX,GADA9L,QAAQC,IAAI,mBAAqBkJ,GAC7BtJ,EAAMK,IAAII,gBACd,CACI,IAAI8N,EAAU,GACd,MAAME,EAAM,WAAazO,EAAMK,IAAIqO,WAAWC,QAAU,IACpD3O,EAAMK,IAAIqO,WAAWE,KAAO,QAC1BC,EAAQ,CAAC,KAAQ,IAAK,OAAQ,GAM9BjC,SAJiB5M,EAAMK,IAAI0O,WAAWN,EAAKI,IAI1B5G,KAAK9G,OAAOyL,MACnC,IAAK,IAAI/K,EAAI,EAAIA,EAAI+K,EAAM7K,OAASF,IACpC,CACI,MAAMgL,EAAOD,EAAM/K,GACbmN,EAAY,GAAAC,OAAMpC,EAAKqC,SAAQ,KAAAD,OAAIpC,EAAKsC,UACxCvM,EAAQiK,EAAKuC,OACnB,IAAI3C,EAAU,GACA,IAAV7J,GAAyB,IAAVA,GAAyB,MAAVA,GAA2B,MAAVA,IAE/C6J,EAAUI,EAAK0R,aAEnB,IAAIhP,EAAe,CACfC,MAAO3N,EACPZ,KAAM+N,EACN1K,MAAOuI,EAAKqC,SACZvO,GAAIkM,EAAK4C,QACTpD,KAAMrJ,EAAahD,EAAMiB,KAAM4L,EAAK2R,MAAM3V,YAC1CxE,SAAUwI,EAAK4R,UACfhS,QAASA,EACT/B,OAAQmC,EAAK8C,OACbxC,UAAWN,EAAK+C,WAChB7L,UAAW8I,EAAK6R,SAChBnR,QAASV,EAAKgD,QACd7C,MAAOH,EAAKiD,MACZoH,KAAMrK,EAAK8R,KACXC,SAAU/R,EAAK6N,WAEnBnM,EAAQjC,KAAKiD,EACjB,CACAhB,EAAQ0B,KAAK7L,GACb2F,EAAYwE,EAChB,KAEA,CAEI,MAAMlC,QAAarM,EAAMK,IAAIuU,UAC7BzU,QAAQC,IAAI,QACZD,QAAQC,IAAIiM,GACZA,EAAK4D,KAAK7L,GACV,IAAK,MAAMoL,KAASnD,EACpB,CACI,MAAMuH,EAASvH,EAAKmD,GAAa,KACjC,IAAIoP,EAEAA,EADApB,GAAY5J,KAAU4J,EACXA,EAAS5J,GAAQhQ,KAEjB,GACfyI,EAAKmD,GAAiB,SAAIoP,CAE9B,CACA7U,EAAYsC,EAChB,CAEAlM,QAAQC,IAAI,QACZuT,GAAe,EACnB,CA1HA1T,qBAAU,YACNC,iBACIC,QAAQC,IAAI,2CACZD,QAAQC,IAAI,0BAERJ,EAAMK,IAAII,iBAEV,kCACAwL,MAIA9L,QAAQC,IAAI,cACZ+T,IAER,CAEA3T,EAEJ,GAAG,IAEHP,qBACI,KAII,GAHAE,QAAQC,IAAI,oBACZD,QAAQC,IAAImd,GACZpd,QAAQC,IAAIid,GACRC,EACJ,CACI,MAAMK,EAAQL,EAAapG,KAE3B,IAAI7R,EAAO,GACXlF,QAAQC,IAAI,uBACZ,IAAK,IAAIyB,EAAI,EAAGA,EAAI8b,EAAM5b,OAAQF,IAClC,CACI,MAAMqV,EAAOyG,EAAM9b,GACbiP,EAAQ,CAAC,GAAMoG,EAAKhO,IAAK,KAAQgO,EAAKtT,KAAM,MAASsT,EAAK6F,MAAO,MAASpa,EAAa3C,EAAMiB,KAAMiW,EAAKtU,QAC9GyC,EAAKiH,KAAKwE,EACd,CACA9Q,EAAMK,IAAIud,QAAQvY,GAClBoY,EAAYzd,EAAMK,IAAIwd,UAC1B,IAEJ,CAACP,EAAcD,EAAaE,EAAWvd,EAAMK,IAAKL,EAAMiB,OAG5DhB,qBACI,KACIgM,GAAW,GAGf,CAACuR,IA0EL,MAoCMpK,EAAerK,GACTlI,cAAA,OAAAD,SACIC,cAAA,SAAAD,SAAOF,eAAA,SAAAE,SAAA,CACPF,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,GAAG,KAAIC,SAAEZ,EAAMiB,KAAKN,KACxBE,cAAA,MAAIF,GAAG,WAAUC,SAAEZ,EAAMiB,KAAKoD,WAC9BxD,cAAA,MAAIF,GAAG,aAAYC,SAAEZ,EAAMiB,KAAKgV,YAH5B,MAMJlN,GACAA,EAAOM,KAAI,CAACgD,EAAMmD,IA9CnB0G,EAAC7J,EAAMmD,KACtB,MAAM7O,EAAK0L,EAAS,GACdhI,EAAWgI,EAAe,SAC1BI,EAAUJ,EAAc,QAExBuH,EAASvH,EAAW,KACpBuS,EAAWvS,EAAe,SAC1BS,EAAM0C,EAAM3G,WACZmE,EAAQX,EAAY,MAQ1B,OAAQ3L,eAAC6V,IAAMC,SAAQ,CAAA5V,SAAA,CACXF,eAAA,MAAcK,UAAU,UAASH,SAAA,CAC7BC,cAAA,MAAIE,UAAU,WAAUH,SAACC,cAACC,IAAI,CAACE,GAAI,WAAWL,EAAGC,SAAED,MACnDE,cAAA,MAAIE,UAAU,WAAUH,SAAEyD,IAC1BxD,cAAA,MAAIE,UAAU,WAAUH,SAAE6L,MAHrBK,GAKTpM,eAAA,MAAwBK,UAAU,UAASH,SAAA,CACvCC,cAAA,MAAIE,UAAU,WAAUH,SAAEoM,IAC1BtM,eAAA,MAAIuI,QAAQ,IAAIlI,UAAU,WAAUH,SAAA,CACnCyL,EAAKc,UAAY,IAAItM,cAAA,KAAAD,SAAIyL,EAAK/H,QAAW,IAAM+H,EAAKtI,eAHhD+I,EAAM,SAMfpM,eAAA,MAAyBK,UAAU,aAAYH,SAAA,CAC3CC,cAAA,MAAIE,UAAU,WAAUH,SAACF,eAACI,IAAI,CAACE,GAAI,eAAe4S,EAAOhT,SAAA,CAAC,IAAEgT,EAAO,SACnElT,eAAA,MAAIuI,QAAQ,IAAIlI,UAAU,WAAUH,SAAA,CAAC,IAAEge,EAAS,SAF3C9R,EAAM,YAZEA,EAAM,WAgBV,EAeEoJ,CAAW7J,EAAMmD,KAI5BzG,GAA4B,IAAlBA,EAAOhH,QAAgBlB,cAAA,MAAAD,SAAeC,cAAA,MAAIoI,QAAQ,IAAGrI,SAAEZ,EAAMiB,KAAK0V,WAAnC,eAM7D,OAAK3W,EAAMK,IAAIiJ,YAIX5I,eAAA,OAAKC,GAAG,YAAWC,SAAA,CACfC,cAAA,OAAKF,GAAG,QAAOC,SACXC,cAAA,MAAAD,SACKZ,EAAMiB,KAAK4d,cAGpBhe,cAAA,OAAKF,GAAG,iBAAgBC,SACpBC,cAACgE,EAAQ,CAACS,SAAS,GAAGD,KAAMyE,EAAUlF,aAAewE,GAAqBgK,EAAYhK,UAVvFvI,cAACsX,IAAQ,CAACnX,GAAG,KAe5B,EC+Nesd,OAvaf,SAAqBte,GACjB,MAAO8J,EAAUC,GAAe/E,mBAAS,KAElC8Z,EAAUC,GAAe/Z,mBAAS,KAClCga,EAAQC,GAAaja,mBAAS,KAC9BmP,GAAWpM,QAASsV,EAAapV,KAAMqV,EAAcnV,MAAOoV,IAAe5U,YAAanC,IACxFkF,GAAc3D,QAASmX,EAAgBjX,KAAM0D,EAAaxD,MAAOgX,IAAkBxW,YAAa3B,EAC/F,CAAC,UAAa,CAAE,SAAa8X,EAAU,OAAUE,MAClDxB,EAAUC,GAAezY,mBAAS,CAAC,IACnCoa,EAAWC,GAAWra,mBAAS,IAC/Bsa,EAAYC,GAAYva,mBAAS,IACjCmL,EAAOqP,GAAYxa,mBAAS,KAC5BwG,GAAeC,YAAY0E,EAAO,KAEzClQ,qBAAU,YACNC,iBAII,GAHAC,QAAQC,IAAI,2CACZD,QAAQC,IAAI,2BAEPJ,EAAMK,IAAIiJ,YACX,OAEJ,IAAIzH,EACA4d,EACAC,EAAO5R,SAASC,eAAe,QAC/B4R,EAAQ7R,SAASC,eAAe,SACpC,IAAKlM,EAAI,EAAGA,GAAK,GAAKA,KAElB4d,EAAS3R,SAAS8R,cAAc,WACzB3e,KAAOY,EAAEgH,WAChB8W,EAAME,IAAIJ,EAAQ5d,GAEtB,MAAMie,GAAW,IAAI5K,MAAOtC,cACtBmN,GAAY,IAAI7K,MAAOrC,WAAa,EAG1C,IAAKhR,EAFY,KAEGA,GAAKie,EAAWje,KAEhC4d,EAAS3R,SAAS8R,cAAc,WACzB3e,KAAOY,EAAEgH,WAChB6W,EAAKG,IAAIJ,EAAQ5d,GAGrB1B,QAAQC,IAAI0f,GACZ3f,QAAQC,IAAI2f,GACZV,EAAQS,GACRP,EAASQ,GACTjS,SAASC,eAAe,QAAQF,MAAQiS,EACxChS,SAASC,eAAe,SAASF,MAAQkS,EAErC/f,EAAMK,IAAII,gBAEV,mCAKAN,QAAQC,IAAI,cACZ+T,IAER,CAEA3T,EAEJ,GAAG,IAEHP,qBACI,KAII,GAHAE,QAAQC,IAAI,oBACZD,QAAQC,IAAImd,GACZpd,QAAQC,IAAIid,GACRC,EACJ,CACI,MAAMK,EAAQL,EAAapG,KAE3B,IAAI7R,EAAO,GACXlF,QAAQC,IAAI,uBACZ,IAAK,IAAIyB,EAAI,EAAGA,EAAI8b,EAAM5b,OAAQF,IAClC,CACI,MAAMqV,EAAOyG,EAAM9b,GACbiP,EAAQ,CAAC,GAAMoG,EAAKhO,IAAK,KAAQgO,EAAKtT,KAAM,MAASsT,EAAK6F,MAAO,MAASpa,EAAa3C,EAAMiB,KAAMiW,EAAKtU,QAC9GyC,EAAKiH,KAAKwE,EACd,CACA9Q,EAAMK,IAAIud,QAAQvY,GAClBoY,EAAYzd,EAAMK,IAAIwd,UAC1B,IAEJ,CAACP,EAAcD,EAAaE,EAAWvd,EAAMK,IAAKL,EAAMiB,OAG5DhB,qBACI,KAGI,GAFAE,QAAQC,IAAI,mBAEPuL,EACD,OAIJ,MAAMiB,EAAQjB,EAAY0E,QAE1B,IAAI9B,EAAU,GACV9B,EAAU,GACd,IAAK,IAAI5K,EAAI,EAAIA,EAAI+K,EAAM7K,OAASF,IACpC,CACI,MAAMgL,EAAOD,EAAM/K,GACbe,EAAQiK,EAAKyD,WACnB,GAAc,MAAV1N,GAA2B,IAAVA,EACjB,SACJ,IAAKiK,EAAKH,aAA2C,IAA5BG,EAAKH,YAAY3K,OACtC,SAEJ,MAAMuI,EAASuC,EAAKL,QACdoH,EAAS/G,EAAKmT,QACpB,IAAIpB,EAKAqB,EAHArB,EADApB,GAAY5J,KAAU4J,EACXA,EAAS5J,GAAQhQ,KAEjB,GAEX0G,KAAUtK,EAAMK,IAAIwM,KAEpBoT,EAAWjgB,EAAMK,IAAIwM,KAAKvC,KAI1B2V,EAAW,CAAC,GACHvV,OAAS,GAClBuV,EAAS9S,UAAY,GACrB8S,EAASlc,UAAY,GACrBkc,EAAS1S,QAAU,GACnB0S,EAAS3b,MAAQ,IAGrB,MAAM0K,EAAY,GAAAC,OAAMgR,EAAS3b,MAAK,KAAA2K,OAAIgR,EAASlc,WACnD0I,EAAUI,EAAKH,YACf,IAAI6C,EAAe,CACfC,MAAO3N,EACPZ,KAAM+N,EACN1K,MAAO2b,EAAS3b,MAChB3D,GAAI2J,EACJjG,SAAUwI,EAAK2D,UACf/D,QAASA,EACT/B,OAAQuV,EAASvV,OACjByC,UAAW8S,EAAS7S,OACpBrJ,UAAWkc,EAASlc,UACpBwJ,QAAS0S,EAAS3S,UAClBN,MAAOiT,EAASjT,MAChBkK,KAAMtD,EACNgL,SAAUA,GAEdrQ,EAAQjC,KAAKiD,EACjB,CACAhB,EAAQ0B,KAAK7L,GACbjE,QAAQC,IAAImO,GACZxE,EAAYwE,EAAQ,GAGxB,CAAC5C,EAAauT,EAAgBC,IAkBlC,MAoCM/L,EAAerK,GACTlI,cAAA,OAAAD,SACIC,cAAA,SAAAD,SAAOF,eAAA,SAAAE,SAAA,CACPF,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,GAAG,KAAIC,SAAEZ,EAAMiB,KAAKN,KACxBE,cAAA,MAAIF,GAAG,WAAUC,SAAEZ,EAAMiB,KAAKoD,WAC9BxD,cAAA,MAAIF,GAAG,aAAYC,SAAEZ,EAAMiB,KAAKoO,eAH5B,MAMJtG,GACAA,EAAOM,KAAI,CAACgD,EAAMmD,IA9CnB0G,EAAC7J,EAAMmD,KACtB,MAAM7O,EAAK0L,EAAS,GACdhI,EAAWgI,EAAe,SAC1BI,EAAUJ,EAAc,QAExBW,EAAQX,EAAKW,MACb4G,EAASvH,EAAW,KACpBuS,EAAWvS,EAAe,SAC1BS,EAAM0C,EAAM3G,WAQlB,OAAQnI,eAAC6V,IAAMC,SAAQ,CAAA5V,SAAA,CACXF,eAAA,MAAcK,UAAU,UAASH,SAAA,CAC7BC,cAAA,MAAIE,UAAU,WAAUH,SAACC,cAACC,IAAI,CAACE,GAAI,WAAWL,EAAGC,SAAED,MACnDE,cAAA,MAAIE,UAAU,WAAUH,SAAEyD,IAC1BxD,cAAA,MAAIE,UAAU,WAAUH,SAAE6L,MAHrBK,GAKTpM,eAAA,MAAwBK,UAAU,UAASH,SAAA,CACvCC,cAAA,MAAIE,UAAU,WAAUH,SAAEoM,IAC1BtM,eAAA,MAAIuI,QAAQ,IAAIlI,UAAU,WAAUH,SAAA,CACnCyL,EAAKc,UAAY,IAAItM,cAAA,KAAAD,SAAIyL,EAAK/H,QAAW,IAAM+H,EAAKtI,eAHhD+I,EAAM,SAMfpM,eAAA,MAAyBK,UAAU,aAAYH,SAAA,CAC3CC,cAAA,MAAIE,UAAU,WAAUH,SAACF,eAACI,IAAI,CAACE,GAAI,eAAe4S,EAAOhT,SAAA,CAAC,IAAEgT,EAAO,SACnElT,eAAA,MAAIuI,QAAQ,IAAIlI,UAAU,WAAUH,SAAA,CAAC,IAAEge,EAAS,SAF3C9R,EAAM,YAZEA,EAAM,WAgBV,EAeEoJ,CAAW7J,EAAMmD,KAI5BzG,GAA4B,IAAlBA,EAAOhH,QAAgBlB,cAAA,MAAAD,SAAeC,cAAA,MAAIoI,QAAQ,IAAGrI,SAAEZ,EAAMiB,KAAK0V,WAAnC,eAK7D,SAASwF,EAAY3M,EAAO3B,GAIxB,OAFA1N,QAAQC,IAAIoP,GACZrP,QAAQC,IAAIyN,GACJ2B,GAEJ,KAAK,EACD6P,EAAQxR,GACR,MACJ,KAAK,EACD0R,EAASzb,SAAS+J,IAK9B,CAqJA,OAnJA5N,qBAAU,WACNuf,EAASJ,EAAUvW,WAAa,IAAMyW,EAAWzW,WAAWiK,SAAS,EAAG,KAE5E,GAAG,CAACsM,EAAWE,IAGfrf,qBAAU,YACNC,iBAII,GAFAC,QAAQC,IAAI,UAERJ,EAAMK,IAAII,gBACd,CACI,MAAMgO,EAAM,WAAazO,EAAMK,IAAIqO,WAAWC,QAAU,IACpD3O,EAAMK,IAAIqO,WAAWE,KAAO,WAC1BC,EAAQ,CAAC,OAAUsB,GACnBrB,QAAiB9O,EAAMK,IAAI0O,WAAWN,EAAKI,GACjD1O,QAAQC,IAAI0O,GAEZ,MAAMlC,EAAQkC,EAAS7G,KAAK9G,OAAOyL,MACnC,IAAI2B,EAAU,GACV9B,EAAU,GACd,IAAK,IAAI5K,EAAI,EAAIA,EAAI+K,EAAM7K,OAASF,IACpC,CACI,MAAMgL,EAAOD,EAAM/K,GACbmN,EAAY,GAAAC,OAAMpC,EAAKqC,SAAQ,KAAAD,OAAIpC,EAAKsC,UAC1C,iBAAkBtC,IAElBJ,EAAUI,EAAKqT,cAEnB,IAAI3Q,EAAe,CACfC,MAAO3N,EACPZ,KAAM+N,EACN1K,MAAOuI,EAAKqC,SACZvO,GAAIkM,EAAK4C,QAETpL,SAAUwI,EAAKsT,UACf1T,QAASA,EACT/B,OAAQmC,EAAK8C,OACbxC,UAAWN,EAAK+C,WAChB7L,UAAW8I,EAAK6R,SAChBnR,QAASV,EAAKgD,QACd7C,MAAOH,EAAKiD,MACZoH,KAAMrK,EAAK8R,KACXC,SAAU/R,EAAK6N,WAEnBnM,EAAQjC,KAAKiD,EACjB,CACAhB,EAAQ0B,KAAK7L,GACb2F,EAAYwE,EAChB,KAEA,CACI,IAAI6R,EACJ,MAAMC,EAAYf,EAAa,EAC/Bc,EAAUhB,EAAUvW,WAAa,IAAMwX,EAAUxX,WAAWiK,SAAS,EAAG,KACxEiM,EAAY5O,GACZ8O,EAAUmB,GACVjgB,QAAQC,IAAI+P,GACZhQ,QAAQC,IAAIggB,GAEZ,UACU1U,GACV,CACA,MAAO4U,GAEHngB,QAAQogB,KAAKD,EAAE1c,KACnB,CAgBJ,CACJ,CACAuP,EACA,GAEA,CAAC3H,IA2DAxL,EAAMK,IAAIiJ,YAIX5I,eAAA,OAAKC,GAAG,WAAUC,SAAA,CACdC,cAAA,OAAKF,GAAG,QAAOC,SACXC,cAAA,MAAAD,SACKZ,EAAMiB,KAAKmP,YAGpB1P,eAAA,OAAKC,GAAG,cAAaC,SAAA,CACjBC,cAAA,OAAKE,UAAU,OAAOJ,GAAK,OAAMC,SAC7BC,cAACgF,IAAkB,CAACC,SAAS,QAAQC,GAAI,CAACC,MAAO,WAAYC,QAASA,MApEtF,WAEI,IAAIyZ,EAAON,EACPO,EAAQL,EACQ,kBAATI,IACPA,EAAO5b,SAAS4b,IACC,kBAAVC,IACPA,EAAQ7b,SAAS6b,IAErBxf,QAAQC,IAAIsf,GACZvf,QAAQC,IAAIuf,GACZxf,QAAQC,WAAWsf,GACnBvf,QAAQC,WAAWuf,GACfA,EAAQ,EAERA,GAAS,GAITD,GAAQ,EACRC,EAAQ,IAEZN,EAAQK,GACRH,EAASI,GACT7R,SAASC,eAAe,QAAQF,MAAQ6R,EACxC5R,SAASC,eAAe,SAASF,MAAQ8R,CAC7C,CA0C6Fa,EAAU,MAE3F3f,cAAA,UAAQ+C,KAAK,OAAOjD,GAAG,OAAOI,UAAU,WAAWkR,SAAWC,IAAWiK,EAAY,EAAGjK,EAAMC,OAAOtE,MAAM,IAC3GhN,cAAA,UAAQ+C,KAAK,QAAQjD,GAAG,QAAQI,UAAU,WAAWkR,SAAWC,IAAWiK,EAAY,EAAGjK,EAAMC,OAAOtE,MAAM,IACzGhN,cAAA,OAAKE,UAAU,OAAOJ,GAAK,OAAMC,SAC7BC,cAACqF,IAAgB,CAACJ,SAAS,QAAQC,GAAI,CAACC,MAAO,WAAYC,QAASA,MA7CxF,WAEI,IAAIyZ,EAAON,EACPO,EAAQL,EACQ,kBAATI,IACPA,EAAO5b,SAAS4b,IACC,kBAAVC,IACPA,EAAQ7b,SAAS6b,IACrBxf,QAAQC,IAAIsf,GACZvf,QAAQC,IAAIuf,GACZxf,QAAQC,WAAWsf,GACnBvf,QAAQC,WAAWuf,GACfA,EAAQ,GAERA,GAAS,GAITD,GAAQ,EACRC,EAAQ,GAEZN,EAAQK,GACRH,EAASI,GAET7R,SAASC,eAAe,QAAQF,MAAQ6R,EACxC5R,SAASC,eAAe,SAASF,MAAQ8R,CAC7C,CAmB+Fc,EAAU,SAGjG5f,cAAA,OAAKF,GAAG,iBAAgBC,SACpBC,cAACgE,EAAQ,CAACS,SAAUkG,EAAanG,KAAMyE,EAAUlF,aAAewE,GAAqBgK,EAAYhK,UApBlGvI,cAACsX,IAAQ,CAACnX,GAAG,KAwB5B,ECnTe0f,OAxHf,SAAmB1gB,GAEf,MAAO2U,EAAUuH,GAAelX,mBAAS,CAAC,IACnCoF,EAAcC,GAAsBrF,oBAAS,GAqCpD,SAAS2b,IAEL,IAAI/I,EAAO,CACXA,UAAiB,GACjBA,UAAiB,GACjBA,aAAoB,GACpBA,MAAa,GACbA,QAAe,GACfA,OAAc,GACdA,YAAmB,GACnBsE,EAAYtE,EAChB,CAkDA,OA7FA3X,qBAAU,YACNC,iBACSF,EAAMK,IAAIiJ,aAAgBtJ,EAAMK,IAAII,kBAIzC,kCACAN,QAAQC,IAAI,2CACZD,QAAQC,IAAI,wBACZugB,IACJ,CAEAngB,EAEJ,GAAG,IA+EER,EAAMK,IAAIiJ,aAAgBtJ,EAAMK,IAAII,gBAIrCC,eAAA,OAAKC,GAAG,WAAUC,SAAA,CACdC,cAAA,OAAKF,GAAG,QAAOC,SACXC,cAAA,MAAAD,SACKZ,EAAMiB,KAAK2f,cAGpB/f,cAAA,OAAKF,GAAG,gBAAgB8P,QAASzQ,EAAMK,IAAI2Q,MAAMpQ,SAC5CZ,EAAMK,IAAII,iBACPI,cAACmb,GAAQ,CAAC/a,KAAMjB,EAAMiB,KAAMZ,IAAKL,EAAMK,IAAKuX,KAAMjD,EAAUyI,QAlC5E,SAAiBtO,GAEb3O,QAAQC,IAAI,gBAAkBgK,GAC9BjK,QAAQC,IAAI0O,GACZzE,GAAoBD,GAEpB,MAAM6M,EAAO9U,EACb,IAAIlB,EACyB,OAAzB6N,EAAS7G,KAAK9G,QAEd8V,EAAK7E,KAAO2E,KAAMK,KAAKC,QACvBpW,EAAOjB,EAAMiB,KAAK4f,WAClBF,MAIA1J,EAAK7E,KAAO2E,KAAMK,KAAKG,MACvBtW,EAAOjB,EAAMiB,KAAK6f,SAEtB7J,EAAK5U,UAAY,IACjB0U,KAAMa,KAAK3W,EAAMgW,EACrB,SAEWpW,cAACsX,IAAQ,CAACnX,GAAG,KAgB5B,ECmCe+f,OA1Jf,SAAqB/gB,GACjB,MAAOkK,EAAaC,GAAkBnF,oBAAS,IACxCV,EAAOmQ,GAAYzP,mBAAS,KAC5B0F,EAAQC,GAAa3F,mBAAS,KAC9BsI,EAAW0T,GAAgBhc,mBAAS,KACpCic,EAAMC,GAAWlc,mBAAS,KAC1Bmc,EAAOC,GAAYpc,mBAAS,IAiBnC,GAfA/E,qBAAU,YACNC,iBACSF,EAAMK,IAAIiJ,cAIfnJ,QAAQC,IAAI,2CACZD,QAAQC,IAAI,gBACZghB,GAAS,IAAIlM,MAAO0B,cAAcjR,MAAM,EAAG,KAC/C,CAEAnF,EAEJ,GAAG,KAEER,EAAMK,IAAIiJ,YACX,OAAOzI,cAACsX,IAAQ,CAACnX,GAAG,MAExB,SAASmb,EAAY3M,EAAO3B,GAExB,OAAQ2B,GAEJ,KAAK,EACDiF,EAAS5G,GACT,MACJ,KAAK,EACDlD,EAAUkD,GACV,MACJ,KAAK,EACDmT,EAAanT,GACb,MACJ,KAAK,EACDqT,EAAQrT,GAKpB,CAEA3N,eAAeoR,IAEXnH,GAAe,GACfkX,GAAY,GAEZ,MAAMtL,EACF,mBACqB/V,EAAMK,IAAIsU,SAAc,IAD7C,kBAEmBrQ,EAFnB,mBAGoBoG,EAHpB,sBAIuB4C,EAJvB,iBAKkB2T,EALlB,iBAMkBE,EANlB,oCASJhhB,QAAQC,IAAI2V,GAEZ/V,EAAMgV,QAAQ6B,YAAYd,GAE1B,MAAMkB,EAAO9U,EACb8U,EAAK7E,KAAO2E,KAAMK,KAAKC,QACvBJ,EAAK5U,UAAY,IACjB0U,KAAMa,KAAK5X,EAAMiB,KAAK4f,WAAY5J,GAmBlCnJ,SAASC,eAAe,QAAQF,MAAQ,GACxCC,SAASC,eAAe,UAAUF,MAAQ,GAC1CC,SAASC,eAAe,aAAaF,MAAQ,GAC7CC,SAASC,eAAe,WAAWF,MAAQ,EAnB/C,CAsBA,SAASwT,EAAYC,GAEjBxT,SAASC,eAAe,QAAQwT,SAAWD,EAC3CxT,SAASC,eAAe,UAAUwT,SAAWD,EAC7CxT,SAASC,eAAe,aAAawT,SAAWD,EAChDxT,SAASC,eAAe,WAAWwT,SAAWD,CAClD,CAEA,OAAKthB,EAAMK,IAAIiJ,YAIX5I,eAAA,OAAKC,GAAG,WAAUC,SAAA,CACdC,cAAA,OAAKF,GAAG,QAAOC,SACXC,cAAA,MAAAD,SACKZ,EAAMiB,KAAKugB,gBAGpB3gB,cAAA,SAAAD,SAAOF,eAAA,SAAAE,SAAA,CACHF,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAEZ,EAAMiB,KAAKsR,eAAe,OAChC1R,cAAA,MAAIoI,QAAQ,IAAItI,GAAG,QAAOC,SACrBugB,MAHD,QAMRzgB,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAEZ,EAAMiB,KAAKqD,MAAM,OACvBzD,cAAA,MAAIoI,QAAQ,IAAGrI,SACXC,cAAA,SAAOuR,KAAK,OAAOrR,UAAU,QAAQJ,GAAG,OAAOsR,SAAWC,IAAWiK,EAAY,EAAGjK,EAAMC,OAAOtE,MAAM,QAHvG,SAMRnN,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAEZ,EAAMiB,KAAKyJ,OAAO,OACxB7J,cAAA,MAAIoI,QAAQ,IAAGrI,SACXC,cAAA,SAAOuR,KAAK,OAAOrR,UAAU,QAAQJ,GAAG,SAASsR,SAAWC,IAAWiK,EAAY,EAAGjK,EAAMC,OAAOtE,MAAM,QAHzG,UAMRnN,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAEZ,EAAMiB,KAAKqM,UAAU,OAC3BzM,cAAA,MAAIoI,QAAQ,IAAGrI,SACXC,cAAA,SAAOuR,KAAK,OAAOrR,UAAU,QAAQJ,GAAG,YAAYsR,SAAWC,IAAWiK,EAAY,EAAGjK,EAAMC,OAAOtE,MAAM,QAH5G,aAMRnN,eAAA,MAAAE,SAAA,CACIF,eAAA,MAAAE,SAAA,CAAI,IAAEZ,EAAMiB,KAAK6b,QAAQ,OACzBjc,cAAA,MAAIoI,QAAQ,IAAGrI,SACXC,cAAA,SAAOuR,KAAK,OAAOrR,UAAU,QAAQJ,GAAG,UAAUsR,SAAWC,IAAWiK,EAAY,EAAGjK,EAAMC,OAAOtE,MAAM,QAH1G,eAObnN,eAAA,UAAQC,GAAG,SAASsF,QAAS/F,UA9DhCiK,GAAe,QACfkX,GAAY,IA6D0CpQ,SAA4B,IAAjB3M,EAAMvC,OAAcnB,SAAA,CAAC,IAAEZ,EAAMiB,KAAKwgB,OAAO,OACtG/gB,eAAA,OAAKC,GAAG,YAAY8P,QAASvG,EAAYtJ,SAAA,CACrCF,eAAA,OAAKC,GAAG,WAAUC,SAAA,CAAC,IAAEZ,EAAMiB,KAAKkc,YAAY,OAC5Czc,eAAA,UAAQC,GAAG,UAAUsF,QAAS/F,SAAYoR,IAAgB1Q,SAAA,CAAC,IAAEZ,EAAMiB,KAAKsQ,QAAQ,OAChF7Q,eAAA,UAAQC,GAAG,SAASsF,QAASA,KAxErCkE,GAAe,QACfkX,GAAY,IAuE8CzgB,SAAA,CAAC,IAAEZ,EAAMiB,KAAKuQ,OAAO,aA7CxE3Q,cAACsX,IAAQ,CAACnX,GAAG,KAiD5B,E,mBCgLe0gB,OA3Uf,MACIC,cACIxhB,QAAQC,IAAI,oBACZwB,KAAK0H,aAAc,EACnB1H,KAAK6T,WAAY,EACjB7T,KAAK8T,WAAY,EACjB9T,KAAKggB,WAAY,EACjBhgB,KAAK8S,QAAS,EACd9S,KAAK+S,SAAW,CAAC,EACjB/S,KAAKiL,KAAO,CAAC,EACbjL,KAAKyK,KAAO,CAAC,EACbzK,KAAKmU,QAAU,IAAI8L,IACnBjgB,KAAKkgB,iBAAcvhB,EACnBqB,KAAKoP,OAAQ,EACbpP,KAAKqU,QAAU,GACfrU,KAAK8M,WAAa,CAAC,EACnB9M,KAAKnB,iBAAkB,EACvBmB,KAAKsP,OAAS,EAClB,CAEA,gBAAMnC,CAAWN,EAAKI,GAElBA,EAAMkT,GAAKC,UAAUC,SACrB,MAAM7Q,EAAM,CAAC,OAAUvC,GACvB1O,QAAQC,IAAI,iBAAmBqO,GAG/B,aADuByT,KAAMC,IAAI1T,EAAK2C,EAE1C,CAEA,iBAAMC,CAAY5C,EAAKI,GAEnB1O,QAAQC,IAAI,iBAAmBqO,GAC/BI,EAAMkT,GAAKC,UAAUC,SAIrB,aAFuBC,KAAME,KAAK3T,EAAKI,EAG3C,CAEA,kBAAMwT,GAaN,CAEAC,gBAyBA,CAGAC,aACQ3gB,KAAK6T,WAAa7T,KAAK8T,YACvB9T,KAAK0H,aAAc,EACnByN,KAAM4C,UACF/X,KAAK4gB,UACL5gB,KAAK4gB,WAIjB,CAEAC,eAAeD,GACX5gB,KAAKkgB,YAAcU,CACvB,CAEAE,QAAQrW,GACJzK,KAAKyK,KAAOA,EACZzK,KAAK8T,WAAY,EACjB9T,KAAK2gB,aACL3gB,KAAK+gB,WACT,CAEA7M,WAAWC,GACP,IAAK,MAAMjF,KAASiF,EAEK,WAAjBjF,EAAM8R,QAAuC,YAAhB9R,EAAMlO,OAEvChB,KAAKmU,QAAQ8J,IAAI/O,EAAMtE,QAE/B,CAEA8J,WAAWxF,GAEP,OAAOlP,KAAKmU,QAAQ8M,IAAI/R,EAC5B,CAEAgG,WAAWhG,GAEPlP,KAAKmU,QAAQ8J,IAAI/O,EACrB,CAEAgS,cAAcpU,GAEVvO,QAAQC,IAAIsO,GACZ9M,KAAK8M,WAAa,CAAC,EACnB9M,KAAK8M,WAAWqU,SAAWrU,EAAW,GAAGqU,SACzCnhB,KAAK8M,WAAW7B,KAAO6B,EAAW,GAAG7B,KAEjC6B,EAAWsU,OAEXphB,KAAK8M,WAAWC,QAAU,qCAC1B/M,KAAK8M,WAAWE,KAAO,MAIvBhN,KAAK8M,WAAWC,QAAUD,EAAW,GAAGC,QACxC/M,KAAK8M,WAAWE,KAAOF,EAAW,GAAGE,MAIzCzO,QAAQC,IAAIwB,KAAK8M,YACjB9M,KAAK0gB,eACT,CAEAW,QAAQrW,GACJhL,KAAKiL,KAAO,CAAC,EACb1M,QAAQC,IAAI,YAAcwM,EAAM7K,OAAS,UACzC,IAAK,IAAIF,EAAI,EAAIA,EAAI+K,EAAM7K,OAASF,IACpC,CACI,MAAMgL,EAAOD,EAAM/K,GACblB,EAAKkM,EAAU,IACrBjL,KAAKiL,KAAKlM,GAAM,IAAIkM,GACpBjL,KAAKiL,KAAKlM,GAAIqM,MAAQH,EAAKG,MAAM9K,QAAQ,KAAM,IACnD,CACAN,KAAK6T,WAAY,EACjB7T,KAAK2gB,YACT,CAEA3E,QAAQD,GACJ/b,KAAKsV,KAAO,CAAC,EACb,IAAK,IAAIrV,EAAI,EAAIA,EAAI8b,EAAM5b,OAASF,IACpC,CACI,MAAMqV,EAAOyG,EAAM9b,GACblB,EAAKuW,EAAKvW,GAChBiB,KAAKsV,KAAKvW,GAAMuW,EAChBtV,KAAKsV,KAAKvW,GAAU,KAAI,CAC5B,CACAiB,KAAKggB,WAAY,EACjBhgB,KAAK+gB,WACT,CAEAA,YACI,GAAK/gB,KAAKggB,WAAchgB,KAAK8T,UAM7B,IAAK,IAAI7T,EAAI,EAAIA,EAAID,KAAKyK,KAAKtK,OAASF,IACxC,CACI,MAAMe,EAAQhB,KAAKyK,KAAKxK,GAAGe,MAG3B,GAAc,MAAVA,GAA2B,MAAVA,GAA2B,IAAVA,GAAyB,IAAVA,EACjD,SAEJ,MAAMgR,EAAShS,KAAKyK,KAAKxK,GAAGme,QAIxBpM,GAAUA,EAAO7R,OAAS,GAAK6R,KAAUhS,KAAKsV,KAE1C,SAAUtV,KAAKsV,KAAKtD,GACpBhS,KAAKsV,KAAKtD,GAAc,MAAK,EAE7BhS,KAAKsV,KAAKtD,GAAc,KAAI,GAIhCzT,QAAQC,IAAI,gBACZD,QAAQC,IAAIwB,KAAKyK,KAAKxK,IAE9B,MA5BI1B,QAAQC,IAAI,oBA8BpB,CAEA2U,MAAMJ,GACFxU,QAAQC,IAAI,cAAgBuU,EAAc,KAC1C/S,KAAK8S,QAAS,EACd9S,KAAK+S,SAAWA,EACU,MAAtBA,EAAgB,OACM,IAAtBA,EAAgB,QAChB/S,KAAKoP,OAAQ,GACbpP,KAAKkgB,aACLlgB,KAAKkgB,aAAY,GACrB,MAAMlO,EAASe,EAAc,IAC7BxU,QAAQC,IAAIwT,EAOhB,CAEAyH,SACIlb,QAAQC,IAAI,cACZwB,KAAK8S,QAAS,EACd9S,KAAKoP,OAAQ,EACbpP,KAAK+S,SAAW,CAAC,EACjB/S,KAAKmU,QAAQmN,QACTthB,KAAKkgB,aACLlgB,KAAKkgB,aAAY,EACzB,CAEA,aAAMlN,GAA6B,IAArBhB,EAAM9R,UAAAC,OAAA,QAAAxB,IAAAuB,UAAA,GAAAA,UAAA,QAAGvB,EACf2a,EAAM,GACV,GAAItZ,KAAKnB,gBAAiB,CACtB,MAAMgO,EAAM,WAAa7M,KAAK8M,WAAWC,QAAU,IAC/C/M,KAAK8M,WAAWE,KAAO,QACrBC,EAAQ,CAAC,KAAQ+E,GACjB7K,QAAenH,KAAKmN,WAAWN,EAAKI,GAE1C,GADA1O,QAAQC,IAAI2I,GACR,UAAWA,EAAOd,KAAK9G,OAIvB,IAAK,MAAM2P,KAAS/H,EAAOd,KAAK9G,OAAOyL,MACvC,CACIzM,QAAQC,IAAI0Q,GACZ,MAAMjE,EAAO,CACT,GAAMiE,EAAMrB,QACZ,MAASqB,EAAM5B,SACf,MAAS4B,EAAMhB,MACf,UAAagB,EAAM4N,SACnB,UAAa5N,EAAMlB,WACnB,SAAYkB,EAAM2N,UAClB,QAAW3N,EAAMyN,YACjB,KAAQzN,EAAM0N,MACd,YAAe1N,EAAMqS,eAEzBjI,EAAI5O,KAAKO,EACb,CAGR,KACK,CAGD,GAFA1M,QAAQC,IAAI,SAAWwT,GACvBzT,QAAQC,IAAIwB,KAAK6T,YACZ7T,KAAK6T,UACN,OAAOyF,EAEX,IAAK,IAAIrZ,EAAI,EAAIA,EAAID,KAAKyK,KAAKtK,OAASF,IAAK,CACzC,MAAMiP,EAAQlP,KAAKyK,KAAKxK,GACxB,QAAetB,IAAXqT,GAAwB9C,EAAMkP,UAAYpM,EAC1C,SAEJ,GAAoB,MAAhB9C,EAAMlO,OAAiC,MAAhBkO,EAAMlO,OAAiC,IAAhBkO,EAAMlO,OAA+B,IAAhBkO,EAAMlO,MACzE,SACJzC,QAAQC,IAAI0Q,GACZ,MAAMnQ,EAAKmQ,EAAe,QAC1B,KAAOnQ,KAAMiB,KAAKiL,MACd,SACJ,MAAMA,EAAOjL,KAAKiL,KAAKlM,GAEvB,IAAIyiB,EAAW,CAAC,EAChBA,EAAa,GAAIvW,EAAK3D,IACtBka,EAAgB,MAAIvW,EAAKvI,MACzB8e,EAAoB,UAAIvW,EAAK9I,UAC7Bqf,EAAoB,UAAIvW,EAAKO,OAC7BgW,EAAmB,SAAItS,EAAMuS,UAAUxN,MAAM,KAAK,GAAG3T,QAAQ,IAAI,IAAI,GAAGA,QAAQ,IAAK,KACrFkhB,EAAkB,QAAItS,EAAMpE,YAAYmJ,MAAM,KAAK,GAAG3T,QAAQ,IAAI,IAAI,GAAGA,QAAQ,IAAK,KACtFkhB,EAAgB,MAAIvW,EAAKG,MACzBoW,EAAe,KAAItS,EAAMkP,QACzBoD,EAAsB,YAAItS,EAAMwS,aAChCpI,EAAI5O,KAAK8W,EACb,CACJ,CACA,OAAOlI,CACX,CAEA2C,UACI,OAAOjc,KAAKsV,IAChB,CAEA,aAAMqM,GACF,IACI3hB,KAAK0H,aAAc,CACvB,CACA,MAAOnB,GAGH,OADAhI,QAAQC,IAAI+H,IACL,CACX,CACA,OAAO,CACX,CAEAiG,SACI,OAAOxM,KAAK0H,WAChB,CAEAhJ,YAAYkjB,GAERrjB,QAAQC,IAAI,8BACZwB,KAAK4gB,SAAWgB,CACpB,G,uCCxUJ,MAAMC,GAAUC,EAAQ,KAIlBC,GAAWC,GAAkB,UA6IpBC,OA3If,MACIlC,YAAYmC,GACR3jB,QAAQC,IAAI,kBAEZD,QAAQC,IAAI,WACZ,MAAM2jB,EAAYjW,SAASmH,OAC3BrT,KAAKqT,OAAS8O,EACTlO,MAAM,KACNxM,KAAI2a,GAAKA,EAAEnO,MAAM,OACjBoO,QAAO,CAACC,EAAKF,KACV,MAAMlX,EAAMkX,EAAEG,QAAQ/F,OAChBvQ,EAAQmW,EAAEI,KAAK,KAAKhG,OAE1B,OADA8F,EAAIG,mBAAmBvX,IAAQuX,mBAAmBxW,GAC3CqW,CAAG,GACX,CAAC,GACR,MAAMI,EAAUR,EAAIS,oBAAsBT,EAAIU,oBACxCC,EAAUX,EAAIY,uBAAyBZ,EAAIa,uBAC3CC,EACN,CACIC,OAAQjB,GAAe,OACvBkB,YAAa,CACTC,YAAaT,EACbU,gBAAiBP,IAGzB7iB,KAAKqjB,UAAY,IAAIC,KAAUN,GAE/BhjB,KAAKujB,IAAM,IAAI1B,GAAQK,EAAIsB,sBAC/B,CAEAjO,WAAWD,EAAMzD,GACb,IACI4R,EADAC,GAAU,EAEd,GAAIpO,GAAQzD,EAAa1R,OAAS,EAAG,CACjC5B,QAAQC,IAAI,uBACZ,MAAMmlB,EAAUrO,EAAsB,gBAChCsO,EAAUtO,EAAsB,gBAGtC,GADAmO,EAAgBzjB,KAAKujB,IAAIM,KAAKhS,EAAc,UACxCA,IAAiB8R,GACjB9R,IAAiB+R,EAEjBH,EAAgB5R,EAChB6R,GAAU,OAET,GAAIC,IAAYF,EAGjBC,GAAU,MAGd,CACI,IAAII,EAAe,GACnB,IAAK,IAAI7jB,EAAI,EAAIA,EAAI4R,EAAa1R,OAASF,IAElC8jB,MAAMlS,EAAa5R,MACpB6jB,GAAgBjS,EAAa5R,KAErCwjB,EAAgBzjB,KAAKujB,IAAIM,KAAKC,EAAc,aACtBF,IAGlBF,GAAU,EAMlB,CAGJ,CACA,GAAIA,EACJ,CACI,MAAMtc,EAAO,IAAIkM,KACXG,EAAK,EACXrM,EAAKmM,QAAQnM,EAAKoM,UAAgB,GAALC,EAAQ,GAAG,GAAG,KAC3C,MAAMd,EAAavL,EAAKsM,cACxBxH,SAASmH,OAAS,YAAeoQ,EAAgB,aAAe9Q,EAAa,mBACjF,CACA,OAAO+Q,CACX,CAEA,iBAAMzO,CAAY+O,GAEd,MAAMC,EAAkBpgB,KAAKqgB,MAAsB,IAAhBrgB,KAAKsgB,UAAsBld,WAC9D,IAEI,MAAMmd,EAAU,IAAIC,KAAmB,CACnCC,YAAaN,EACbO,SAAUxC,GACVyC,eAAgB,IAChBC,uBAAwBR,UAEtBjkB,KAAKqjB,UAAUqB,KAAKN,EAC9B,CACA,MAAO7d,GAEHhI,QAAQC,IAAI+H,EAChB,CACJ,CAEA,oBAAMoe,GAEFpmB,QAAQC,IAAI,gBACZ,IAAIomB,EAAW,GACf,IAEI,MAAMR,EAAU,IAAIS,KAAsB,CACtCN,SAAUxC,GACV+C,eAAgB,CAAC,IACjBC,sBAAuB,CACvB,gBAEAC,oBAAqB,GACrBC,kBAAmB,EACnBC,gBAAiB,IAEfvY,QAAgB3M,KAAKqjB,UAAUqB,KAAKN,GAE1C,GADA7lB,QAAQC,IAAImO,QACahO,IAArBgO,EAAQwY,SAER,IAAK,MAAMhe,KAAUwF,EAAQwY,SAC7B,CACI,MAAMC,EAAMC,KAAKC,MAAMne,EAAOoe,MAC9BH,EAAIpkB,MAAQ,UACZ4jB,EAASla,KAAK0a,EAClB,CAER,CACA,MAAO7e,GAEHhI,QAAQC,IAAI+H,EAChB,CAEA,OAAOqe,CACX,G,yDCKWY,OAjJf,SAAkBpnB,GAEd,MAAOqnB,EAAUC,GAAetiB,oBAAS,GAEzC/E,qBACI,KAMQD,EAAMK,IAAII,iBAEV,kCAGA4mB,GAEAE,YAZJ,WACIpnB,QAAQC,IAAI,kBACZonB,OAAOC,iBAAiB,QAASC,EACrC,GAS8B,KAG9B,MAAMC,EAAO7Z,SAASC,eAAe,iBAUrC,OATKsZ,EAMFM,EAAKC,UAAU/H,IAAI,WAJnB8H,EAAKC,UAAUC,OAAO,WAOlB,KACHL,OAAOM,oBAAoB,QAASJ,EAAM,CAC7C,GAGF,CAACL,EAAUrnB,EAAMK,IAAIqU,OAAQ1U,EAAMK,IAAII,kBAG9C,MAAMinB,EAAQA,KACVvnB,QAAQC,IAAI,SACZD,QAAQC,IAAIinB,GACZC,GAAY,GACZE,OAAOM,oBAAoB,QAASJ,EAAM,EAoB9C,OAAQhnB,eAAA,OAAAE,SAAA,CACAC,cAAA,OAAKE,UAAU,OAAOkF,QAjBX8hB,KACf5nB,QAAQC,IAAI,cACZknB,GAAaD,GACblnB,QAAQC,IAAIinB,GACRA,GACAG,OAAOM,oBAAoB,QAASJ,EAAM,EAYA9mB,SACtCC,cAACmnB,KAAQ,CAACjnB,UAAU,MAAM+E,SAAS,QAAQC,GAAI,CAAEC,MAAO,eAE5DtF,eAAA,OAAKC,GAAG,gBAAgBsF,QAASA,KAAQyhB,GAAO,EAAI3mB,UAAU,gBAAeH,SAAA,EACvEZ,EAAMK,IAAII,iBAAmBT,EAAMK,IAAIqU,QACrChU,eAAAwd,WAAA,CAAAtd,SAAA,CACAC,cAAA,OAAKE,UAAU,aAAYH,SACtBZ,EAAMK,IAAIsU,SAAc,IAAI,MAAQ3U,EAAMK,IAAIsU,SAAe,KAAI3U,EAAMiB,KAAK0Z,aAEjF9Z,cAAA,MAAIE,UAAU,aAGlBF,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,IAAGJ,SAC9BZ,EAAMiB,KAAKgnB,OAEhBpnB,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,UAASJ,SACpCZ,EAAMiB,KAAK2H,SAEhB/H,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,UAASJ,SACpCZ,EAAMiB,KAAK6Q,aAEf9R,EAAMK,IAAII,iBACPC,eAAAwd,WAAA,CAAAtd,SAAA,CACIC,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,YAAWJ,SACtCZ,EAAMiB,KAAKC,WAEhBL,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,UAASJ,SACpCZ,EAAMiB,KAAKE,aAItBnB,EAAMK,IAAII,iBAAmBT,EAAMK,IAAIqU,QACrChU,eAAAwd,WAAA,CAAAtd,SAAA,CACIC,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,kBAAiBJ,SAC5CZ,EAAMiB,KAAKinB,iBAEhBrnB,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,eAAcJ,SACzCZ,EAAMiB,KAAKugB,iBAIvBxhB,EAAMK,IAAI2Q,OACPtQ,eAAAwd,WAAA,CAAAtd,SAAA,CACAC,cAAA,MAAIE,UAAU,UACdF,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,cAAaJ,SACxCZ,EAAMiB,KAAK6T,aAEhBjU,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,mBAAkBJ,SAC7CZ,EAAMiB,KAAK4d,YAEhBhe,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,eAAcJ,SACzCZ,EAAMiB,KAAKmP,aAInBpQ,EAAMK,IAAII,iBAAmBT,EAAMK,IAAI2Q,OACpCnQ,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,aAAYJ,SACvCZ,EAAMiB,KAAK2f,aAGlB5gB,EAAMK,IAAII,iBAAmBT,EAAMK,IAAIqU,QACrChU,eAAAwd,WAAA,CAAAtd,SAAA,CACIC,cAAA,MAAIE,UAAU,UACdF,cAAA,OAAKE,UAAU,aAAakF,QAxEjCoV,KAEXrb,EAAMK,IAAIgb,SACVvN,SAASmH,OAAS,WAClBnH,SAASmH,OAAS,YAClBnH,SAASmH,OAAS,iBAAiB,EAmEyBrU,SACvCZ,EAAMiB,KAAKoa,aAItBrb,EAAMK,IAAII,kBAAoBT,EAAMK,IAAIqU,QACtC7T,cAAAqd,WAAA,CAAAtd,SACIC,cAACC,IAAI,CAACC,UAAU,aAAaC,GAAG,kBAAiBJ,SAC5CZ,EAAMiB,KAAK8T,eAOxC,EC7GeoT,OAjCf,SAAgBnoB,GACZ,MAAOooB,EAAeC,GAAoBrjB,mBAAShF,EAAMiB,KAAKqnB,MAiBlE,OAfIroB,qBAAU,WACNooB,EAAiBroB,EAAMiB,KAAKqnB,KAEhC,GAAG,IAaHznB,cAAAqd,WAAA,CAAAtd,SACIF,eAAA,OAAKC,GAAG,SAASI,UAAU,SAAQH,SAAA,CAC/BC,cAAA,OAAKE,UAAU,QAAOH,SACjB2nB,YAAW1nB,cAAA,MAAAD,SAAKZ,EAAMiB,KAAiB,aAAYJ,cAAA,MAAAD,SAAKZ,EAAMiB,KAAgB,cAEnFP,eAAA,UAAQK,UAAU,OAAO8M,MAAOua,EAAenW,SAhBrCC,IAClB,MAAMsW,EAAUtW,EAAMC,OAAOtE,MAAM8D,cAC/B6W,IAAYJ,IAEhBjoB,QAAQC,IAAI,YAAcooB,GAC1BH,EAAiBG,GACjB1a,SAASmH,OAAS,QAAUuT,EAC5BhB,OAAOpX,QAAQqY,GAAG,GAAE,EAS0D7nB,SAAA,CAClEC,cAAA,UAAQE,UAAU,SAAS8M,MAAM,MAAKjN,SAAC,UACvCC,cAAA,UAAQE,UAAU,SAAS8M,MAAM,MAAKjN,SAAC,aAE3CC,cAACumB,GAAQ,CAACnmB,KAAMjB,EAAMiB,KAAMZ,IAAKL,EAAMK,UAInD,ECLA,MAAMA,GAAM,IAAIqhB,GACV1M,GAAU,IAAI6O,GAAQ6E,21CAEtBC,GAAa,CAAC,EACpB,IAAIC,GAAS,GAyPEC,OAxPf,WAGI,MAAOvf,EAAaqK,GAAkB3O,oBAAS,IACxC0P,EAAQoU,GAAa9jB,oBAAS,IAC9B4O,EAAQC,GAAa7O,mBAAS,KAC7B+C,QAASghB,EAAa5gB,MAAO6gB,EAAW/gB,KAAMghB,GAAa5gB,YAAS/B,IACrE+N,GAAepM,KAAMqM,IAAiB3L,YAAanB,EACzC,CAAE,UAAa,CAAE,QAAWoM,MACrC7L,QAASmhB,EAAe/gB,MAAOghB,EAAalhB,KAAMmhB,GAAe/gB,YAASf,IAE3E6M,GAAYlM,KAAMmM,IAAczL,YAAajC,EAAY,CAAE,UAAa,CAAE,IAAOkN,KAuLxF,SAASyV,IAEL,MAAMpS,EAAO9U,EACb8U,EAAK7E,KAAO2E,KAAMK,KAAKC,QACvBJ,EAAKQ,OAASkR,GAAWjL,gBACzBzG,EAAK5U,UAAY,IACjB4U,EAAKS,QAAU,GACfX,KAAMa,KAAK+Q,GAAWjL,gBAAiBzG,EAC3C,CAEA,SAASqS,EAAU5U,GACfvU,QAAQC,IAAI,6BAA+BC,GAAIqU,QAE/CoU,EAAUzoB,GAAIqU,OAClB,CAEA,OArMAzU,qBAAU,YACNC,iBACIC,QAAQC,IAAI,kBACZD,QAAQC,IAAI,cACZD,QAAQC,IAAI4hB,UAAUC,UACtB2G,IAAkB,wBAClBzoB,QAAQC,IAAIsoB,WACZvoB,QAAQC,IAAIsoB,UACZvoB,QAAQC,IAAIsoB,01CAAYa,qBACxB,IAAIjB,EAAO,GACPtG,UAAUwH,UAAUznB,OAAS,IAC7BumB,EAAOtG,UAAUwH,UAAU,GAAG7X,eAClCxR,QAAQC,IAAIkoB,GACR,SAAUtT,GAAQC,SAClBqT,EAAOtT,GAAQC,OAAOqT,MAC1B,IAAImB,EAAK,CAAC,EAGNA,EAFAnB,EAAKzW,SAAS,OAASyW,EAAKzW,SAAS,OAASyW,EAAKzW,SAAS,OAEvD5Q,GAAKyoB,GAILzoB,GAAK0oB,GAEd,IAAK,IAAI7c,KAAO2c,EAEZd,GAAW7b,GAAO2c,EAAG3c,SAGnBzM,GAAIgiB,eAEN,cAAerN,GAAQC,QAAwC,SAA7BD,GAAQC,OAAOhB,YAEjD9T,QAAQC,IAAI,eAAiB4U,GAAQC,OAAO+K,SAC5CnM,EAAUmB,GAAQC,OAAO+K,SACzB7f,QAAQC,IAAI4U,GAAQC,OAAO2U,SAC3BzV,KAEJR,GAAe,EACnB,CACAnT,EACJ,GAAG,CAAC2T,IAEJlU,qBACI,KAEI,GADAE,QAAQC,IAAI,qBACPgU,EAED,OAIJ,MAAM8C,EAAO9C,EAAS8C,KAAK,GAGvBlC,GAAQC,OAAO4U,UAAY7U,GAAQmC,WAAWD,EAAMlC,GAAQC,OAAO4U,YAEnE1pB,QAAQC,IAAI,kBACZC,GAAI0U,MAAMmC,GACV7C,IACJ,GAKD,CAACD,IAERnU,qBACI,KACIE,QAAQC,IAAI,sBACZwoB,GAASA,GAAS,yBAA2BG,EAAc,IAAMC,EAAY,OAC7E7oB,QAAQC,IAAI2oB,GACZ5oB,QAAQC,IAAI,cACZD,QAAQC,IAAI4oB,GACRC,IAEA9oB,QAAQC,IAAI,kBACZwoB,IAAkB,wBAElBvoB,GAAIqiB,QAAQuG,EAAS5c,MAEjBhM,GAAIiJ,aACJ+f,IACR,GACD,CAACN,EAAaC,EAAWC,IAGhChpB,qBACI,KACIE,QAAQC,IAAI,yBACRkU,IAEAnU,QAAQC,IAAI,qBACZC,GAAIyV,WAAWxB,EAAYyB,SAE/B,GACD,CAACzB,IAwBRrU,qBACI,KAMI,GALAE,QAAQC,IAAI,wBACZwoB,IAAkB,8BAElBzoB,QAAQC,IAAIgpB,GACZjpB,QAAQC,IAAIkJ,GACP8f,GAAe9f,IAGpBnJ,QAAQC,IAAI,yBACZwoB,IAAkB,+BAClBzoB,QAAQC,IAAIgpB,GACZ/oB,GAAIyiB,cAAcsG,EAAW1a,aAExBrO,GAAII,iBACT,CACIN,QAAQC,IAAI,qDAEZ,MAAM6W,EAAO9U,EACb8U,EAAK7E,KAAO2E,KAAMK,KAAK0S,QACvB7S,EAAK5U,WAAY,EACjB4U,EAAKS,QAAUhT,EACfqS,KAAMhP,QAAQ4gB,GAAW5gB,QAASkP,GAClC5W,GAAIoiB,eAAe6G,GAEnBnpB,QAAQC,IAAI,mBACZD,QAAQC,IAAIC,GAAIqO,WAAW7B,MAIvB,MAAMkd,EAAW,QAAU1pB,GAAIqO,WAAW7B,KAAO,QACjDxM,GAAI0O,WAAW6U,GAAOoG,UAAYD,EAAU,CAAC,GAAGE,MAAK,SAAUnb,GAY3D,MAAM7G,EAAO6G,EAAS7G,KACtB9H,QAAQC,IAAI,oBACZ,MAAMwJ,EAAW,GACjB,IAAK,IAAIkD,KAAO7E,EAChB,CACI,MAAM6I,EAAQ7I,EAAK6E,GACnBlD,EAAS0C,KAAKwE,EAClB,CACAzQ,GAAI4iB,QAAQrZ,GACRvJ,GAAIiJ,aACJ+f,GAEZ,GACJ,IACD,CAACH,EAAeC,EAAaC,EAAY9f,IAoBhDzI,cAACqpB,IAAM,CAAAtpB,SACHF,eAAA,OAAKK,UAAU,MAAKH,SAAA,CAChBC,cAAA,OAAAD,SACIC,cAACspB,KAAc,CACXC,aAAW,EACX7nB,cAAY,EACZ8nB,KAAK,EACL5nB,WAAS,EACTD,cAAY,EACZ8nB,kBAAkB,EAClBC,WAAYC,KACZC,MAAO,OAGf5pB,cAACsnB,GAAM,CAAC9nB,IAAKA,GAAKY,KAAM0nB,KACxBjoB,eAACgqB,IAAM,CAAA9pB,SAAA,CACHC,cAAC8pB,IAAK,CAACC,KAAK,IAAIzc,QAAStN,cAACd,EAAI,CAACM,IAAKA,GAAKY,KAAM0nB,OAC/C9nB,cAAC8pB,IAAK,CAACC,KAAK,eAAezc,QAAStN,cAAC6G,EAAM,CAACrH,IAAKA,GAAKY,KAAM0nB,OAC5D9nB,cAAC8pB,IAAK,CAACC,KAAK,eAAezc,QAAStN,cAAC0I,GAAM,CAAClJ,IAAKA,GAAKY,KAAM0nB,OAC5D9nB,cAAC8pB,IAAK,CAACC,KAAK,kBAAkBzc,QAAStN,cAACyS,GAAc,CAAC0B,QAASA,GAAS3U,IAAKA,GAAKY,KAAM0nB,GAAYjU,OAAQA,MAC7G7T,cAAC8pB,IAAK,CAACC,KAAK,mBAAmBzc,QAAStN,cAACgqB,GAAU,CAAC7V,QAASA,GAAS3U,IAAKA,GAAKY,KAAM0nB,OACtF9nB,cAAC8pB,IAAK,CAACC,KAAK,iBAAiBzc,QAAStN,cAACuX,GAAQ,CAACpD,QAASA,GAAS3U,IAAKA,GAAKY,KAAM0nB,OAClF9nB,cAAC8pB,IAAK,CAACC,KAAK,UAAUzc,QAAStN,cAAC0a,GAAM,CAACvG,QAASA,GAAS3U,IAAKA,GAAKY,KAAM0nB,OACzE9nB,cAAC8pB,IAAK,CAACC,KAAK,mBAAmBzc,QAAStN,cAACiqB,GAAe,CAAC9V,QAASA,GAAS3U,IAAKA,GAAKY,KAAM0nB,OAC3F9nB,cAAC8pB,IAAK,CAACC,KAAK,eAAezc,QAAStN,cAACyd,GAAW,CAACtJ,QAASA,GAAS3U,IAAKA,GAAKY,KAAM0nB,OACnF9nB,cAAC8pB,IAAK,CAACC,KAAK,aAAazc,QAAStN,cAAC6f,GAAS,CAAC1L,QAASA,GAAS3U,IAAKA,GAAKY,KAAM0nB,OAC/E9nB,cAAC8pB,IAAK,CAACC,KAAK,eAAezc,QAAStN,cAACkgB,GAAW,CAAC/L,QAASA,GAAS3U,IAAKA,GAAKY,KAAM0nB,UAGvFjoB,eAAA,MAAAE,SAAA,CAAI,KACG8nB,gBAKnB,EC/QeqC,OAZSC,IAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhB,MAAKiB,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EAAY,GAExB,E,wCCSF,MACMQ,GAAS,IAAIC,KAAa,CAC5BC,KAAM,IAAIC,KAAS,CACfC,IAAKhI,GAAOiI,YACZC,QAAS,CACL,wBALMpD,sEAQdqD,MAAO,IAAIC,OA4CTC,GAAYne,SAASC,eAAe,QAC7Bme,qBAAWD,IACnBxU,OACH5W,cAAC0V,IAAM4V,WAAU,CAAAvrB,SACfC,cAACurB,KAAc,CAACZ,OAAQA,GAAO5qB,SAC7BC,cAACgoB,GAAG,SAQVkC,I","file":"static/js/main.c348b181.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    if (!props.doc.serverAvailable)\r\n    {\r\n        return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n    }\r\n    else\r\n    {\r\n        import(\"./PageServer.css\");\r\n        return (<div id=\"home\">\r\n                    <Link className='home-items' to=\"/checkOut\">\r\n                        {props.text.checkOut}\r\n                    </Link>\r\n                    <Link className='home-items' to=\"/return\">\r\n                        {props.text.return}\r\n                    </Link>\r\n                </div>);\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\" || state === 0)\r\n        return text.normal;\r\n    else if (state === \"1\" || state === 1)\r\n        return text.overDue;\r\n    else if (state === \"2\" || state === 2)\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    switch (state)\r\n    {\r\n        case \"0\":\r\n        case 0:\r\n            return text.available;\r\n        case \"1\":\r\n        case 1:\r\n            return text.checkedOut;\r\n        case \"2\":\r\n        case 2:\r\n            return text.reserved;\r\n        case \"3\":\r\n        case 3:\r\n            return text.overDue;\r\n        case \"4\":\r\n        case 4:\r\n            return text.lost;\r\n        case \"5\":\r\n        case 5:\r\n            return text.damaged;\r\n        case \"6\":\r\n        case 6:\r\n            return text.given;\r\n        case \"7\":\r\n        case 7:\r\n        default:\r\n            return text.notAvailable;\r\n        case \"8\":\r\n        case 8:\r\n            return text.deleted;\r\n    }\r\n}\r\n\r\nexport const compareBook = function(book1, book2)\r\n{\r\n    if (book1.name > book2.name)\r\n        return 1;\r\n    else if (book1.name < book2.name)\r\n        return -1;\r\n    const claim1 = parseInt(book1.claim_num);\r\n    const claim2 = parseInt(book2.claim_num);\r\n    if (claim1 > claim2)\r\n        return 1;\r\n    else if (claim1 < claim2)\r\n        return -1;\r\n\r\n    return 0;\r\n}\r\n\r\nexport const compareUser = function(a1, a2)\r\n{\r\n    if (a1.name > a2.name)\r\n        return 1;\r\n    else if (a1.name < a2.name)\r\n        return -1;\r\n    else\r\n        return 0;\r\n}\r\n\r\nexport const compareRent = function(a1, a2)\r\n{\r\n    if (a1.rentDate > a2.rentDate)\r\n        return 1;\r\n    else if (a1.rentDate < a2.rentDate)\r\n        return -1;\r\n    if (a1.title > a2.title)\r\n        return 1;\r\n    else if (a1.title < a2.title)\r\n        return -1;\r\n    else\r\n        return 0;\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        setPageNum(0);\n    }, [props.keyValue]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList, props.detail)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import gql from \"graphql-tag\";\r\n\r\nexport const BOOK_QUERY = gql`\r\n    query AllBook{\r\n        book (limit:20000) {\r\n            _id\r\n            author\r\n            title\r\n            claim_num\r\n            num\r\n            series\r\n            category\r\n            claim\r\n            publisher\r\n            seqnum\r\n            registration_date\r\n            isbn\r\n            deleted\r\n        }\r\n    }\r\n`;\r\n\r\nexport const RENT_QUERY = gql`\r\n    query AllRent{\r\n        rent (limit:20000) {\r\n            _id\r\n            book_id\r\n            user_id\r\n            rent_date\r\n            return_date\r\n            extend_count\r\n            state\r\n        }\r\n    }\r\n`;\r\n\r\nexport const USERS_QUERY = gql`\r\n    query AllUser {\r\n        user (limit: 20000) {\r\n            _id\r\n            name\r\n            state\r\n            level\r\n        }\r\n    }`;\r\n\r\nexport const USER_QUERY = gql`\r\n    query FindUser($_id: string){\r\n        user (where: {_id: {_eq: $_id}}) {\r\n            _id\r\n            name\r\n            state\r\n            level\r\n            encrypted_email\r\n            encrypted_phone\r\n        }\r\n    }`;\r\n\r\nexport const HISTORY_QUERY = gql`\r\n    query findLogs($user_id: string){\r\n        rentLog (limit: 20000, where: {user_id: {_eq: $user_id}}) {\r\n            _id\r\n            book_id\r\n            book_state\r\n            timestamp\r\n            return_date\r\n            user_id\r\n        }\r\n    }`;\r\n\r\nexport const HISTORY_BOOK_QUERY = gql`\r\n    query findLogs($book_id: string){\r\n        rentLog (limit: 20000, where: {book_id: {_eq: $book_id}}) {\r\n            _id\r\n            book_id\r\n            book_state\r\n            timestamp\r\n            return_date\r\n            user_id\r\n        }\r\n    }`;\r\n\r\nexport const HISTORY_PERIOD_QUERY = gql`\r\n    query findLogs ($fromTime: string, $toTime: string) {\r\n        rentLog(limit: 20000, where: {timestamp: {_gte: $fromTime, _lt: $toTime}}) {\r\n            _id\r\n            book_id\r\n            book_state\r\n            timestamp\r\n            return_date\r\n            user_id\r\n        }\r\n    }`;\r\n\r\nexport const NOTICE_QUERY = gql`\r\n    query GetNotices {\r\n        notice (order_by: {date: asc}, limit:20000) {\r\n            _id\r\n            date\r\n            title\r\n        }\r\n    }`;\r\n\r\nexport const CONTENT_QUERY = gql`\r\n    query GetContent ($_id: string) {\r\n        notice (where: {_id: {_eq: $_id}}) {\r\n            _id\r\n            date\r\n            title\r\n            content\r\n        }\r\n    }`;\r\n\r\nexport const SERVER_QUERY = gql`\r\n    query GetServerInfo {\r\n        serverInfo {\r\n            _id\r\n            globalIp\r\n            localIp\r\n            port\r\n            proxy\r\n            book\r\n        }\r\n    }`;\r\n\r\nexport const REQUEST_QUERY = gql`\r\n    query GetRequests($user_id: string) {\r\n        request (limit: 20000, where: {user_id: {_eq: $user_id}}) {\r\n            _id\r\n            user_id\r\n            action\r\n            state\r\n            book_id\r\n        }\r\n    }`;\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport ListView from \"../ListView\";\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const { id } = useParams();\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": id}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notice);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Select id: \" + id);\r\n            if (id)\r\n            {\r\n                loadSelected();\r\n            }\r\n        }, [id, loadSelected]\r\n    );\r\n\r\n    const showEntries = (entries) => {\r\n        return (\r\n            <div id=\"noticeList\">\r\n                <table><tbody>\r\n                   {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                </tbody></table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\">\r\n                        {id !== result._id &&\r\n                            (<Link to={\"/notice/\"+result._id}>{result.title}</Link>)}\r\n                        {id === result._id &&\r\n                            (<Link to={\"/notice\"}>{result.title}</Link>)}\r\n                    </td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {id && selectedData &&\r\n                    <div id=\"noticeContent\">\r\n                        <table className=\"content\"><tbody>\r\n                               {showEntry(selectedData.notice[0])}\r\n                            <tr>\r\n                                <td className=\"content\" colSpan=\"3\">\r\n                                    {selectedData.notice[0].content}\r\n                                </td>\r\n                            </tr>\r\n                        </tbody></table>\r\n                    </div>\r\n                }\r\n                <ListView list={searchResults} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { MAX_SEARCH_ENTRY, getBookState, toUtf8, compareBook } from \"../Util\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport {HISTORY_BOOK_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport Calendar from \"react-calendar\";\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const [bookState, setBookState] = useState(0);\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n\r\n    const [bookId, setBookId] = useState(\"\");\r\n\r\n    const [advancedSearch, setAdvancedSearch] = useState(false);\r\n\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [fromId, setFromId] = useState(\"\");\r\n    const [toId, setToId] = useState(\"\");\r\n    const [fromDate, setFromDate] = useState(\"\");\r\n    const [toDate, setToDate] = useState(\"\");\r\n\r\n    const [stateFilter, setStateFilter] = useState(0);\r\n    const [rentHistory, setRentHistory] = useState([]);\r\n\r\n    const [searchQuery] = useDebounce(inputText, 300);\r\n    const [loadHistory, {data: historyData}] = useLazyQuery(HISTORY_BOOK_QUERY,\r\n            {\"variables\": { \"book_id\": bookId }});\r\n    const selectedRef = useRef(\"0\");\r\n    const needConfirmRef = useRef(false);\r\n    const bookStateRef = useRef(0);\r\n    const historyAvailable = useRef(false);\r\n    const { id } = useParams();\r\n\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                console.log(\"Set Book ID \" + id);\r\n //               setInputText(id);\r\n                setBookId(id);\r\n                loadHistory();\r\n            }\r\n            else\r\n            {\r\n//                setInputText(\"\");\r\n                setBookId(\"\");\r\n            }\r\n        }, [id, loadHistory]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    console.log(\"=======================\");\r\n                    console.log(\"Request book list\");\r\n                    const param = {\"book\": btoa(toUtf8(text)), \"match\":false};\r\n                    const response = await props.doc.requestGet(url, param);\r\n                    console.log(response)\r\n                    if (!(\"books\" in response.data.return))\r\n                        return results;\r\n                    const books = response.data.return.books;\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        let retDate = \"\";\r\n                        if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            regDate: book.REG_DATE,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAIMNUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM,\r\n                            state: book._STATE,\r\n                            isbn: book.ISBN\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    results = findBookLocally(text, bookList);\r\n                }\r\n                results.sort(compareBook);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                console.log(\"Refresh\");\r\n                if (advancedSearch) {\r\n                    return;\r\n                }\r\n                var keyword;\r\n                if (bookId !== \"\")\r\n                    keyword = bookId;\r\n                else\r\n                    keyword = searchQuery;\r\n                console.log(keyword)\r\n                if (keyword) {\r\n                    let sr = await findBooks(keyword);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery, bookId, bookList, rentList, props, queryRequest, advancedSearch]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\");\r\n            console.log(historyData);\r\n            if (!historyData)\r\n            {\r\n                setRentHistory([])\r\n                historyAvailable.current = false;\r\n                return;\r\n            }\r\n            let history = [];\r\n            for (let i = 0 ; i < historyData.rentLog.length ; i++)\r\n            {\r\n                const rent = historyData.rentLog[i];\r\n                if (rent.book_state !== 1)\r\n                    continue;\r\n                let pair = [rent.timestamp];\r\n                if ( \"return_date\" in rent)\r\n                    pair.push(rent.return_date)\r\n                else\r\n                    pair.push(rent.return_date)\r\n                history.push(pair);\r\n            }\r\n            console.log(history.length);\r\n            setRentHistory(history);\r\n            historyAvailable.current = (history.length > 0);\r\n        },\r\n        [historyData]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        let rm = {};\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n           rm[rented[i].book_id] = rented[i].state;\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           const state = (key in rm) ? rm[key] : 0;\r\n           bl.push({code: book._id, name: book.title, state: state, num: book.num, author: book.author, claim: book.claim,\r\n                    regDate: book.registration_date,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher, isbn: book.isbn, deleted: book.deleted});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(bl.length);\r\n        setBookList(bl);\r\n\r\n        console.log(bookId);\r\n        if (bookId !== \"\")\r\n        {\r\n            console.log(\"Load history\");\r\n            loadHistory();\r\n        }\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (searchResults.length === 1 || selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    function setState(state)\r\n    {\r\n        console.log(\"Set state \" + bookState + \" to \" + state.toString());\r\n        needConfirmRef.current = true;\r\n        setNeedConfirm(true);\r\n        setBookState(state);\r\n        bookStateRef.current = state;\r\n        console.log(selectedId.toString() + needConfirmRef.current);\r\n    }\r\n\r\n    function setSearchState(state)\r\n    {\r\n        const stateStr = state.toString()\r\n        const value = document.getElementById(stateStr).checked;\r\n        console.log(\"Set Search state \" + stateStr + \" Value: \" + value);\r\n        if (stateStr === \"1023\")\r\n        {\r\n            document.getElementById(\"1023\").checked = value;\r\n            document.getElementById(\"0\").checked = value;\r\n            document.getElementById(\"1\").checked = value;\r\n            document.getElementById(\"3\").checked = value;\r\n            document.getElementById(\"4\").checked = value;\r\n            document.getElementById(\"5\").checked = value;\r\n            document.getElementById(\"6\").checked = value;\r\n            document.getElementById(\"7\").checked = value;\r\n            document.getElementById(\"8\").checked = value;\r\n        }\r\n        else\r\n        {\r\n            document.getElementById(stateStr).checked = value;\r\n        }\r\n\r\n        var filter = 0;\r\n        for (var i = 0 ; i < 9 ; i++)\r\n        {\r\n            const idx = i.toString();\r\n            const element = document.getElementById(idx);\r\n            if (element)\r\n                filter |= (element.checked) ? (1 << i) : 0;\r\n        }\r\n        setStateFilter(filter);\r\n        console.log(\"Filter: \" + filter.toString());\r\n    }\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/book\";\r\n        var obj = {};\r\n        obj[\"book\"] = selectedRef.current;\r\n        obj[\"state\"] = bookStateRef.current;\r\n        console.log(\"=======================\");\r\n        console.log(\"Change book state\");\r\n        await props.doc.requestPost(url, obj);\r\n\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n    }\r\n\r\n    const showHistoryEntry = (entry) => {\r\n        return (<tr key={entry[0]}><td key={entry[0] + \"x\"}>{entry[0]}</td><td>{entry[1]}</td></tr>);\r\n    }\r\n\r\n    const showEntry = (result, detail) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        const flags = [false, false, false, false, false, false, false, false, false, false]\r\n        flags[result.state] = true;\r\n        if (result.state === 1 || result.state === 2 || result.state === 3)\r\n            flags[0] = true;\r\n//        if (!hidden)\r\n//        {\r\n//            console.log(detail);\r\n//            console.log(flags);\r\n//        }\r\n        const rentHistory = detail[2];\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\">{result.text}</td>\r\n                        <td className=\"searchRent\">{result.rent}</td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr key=\"row1\">\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName + \" \"}<b>{result.name}</b>{\" \" + result.claim_num}</td>\r\n                </tr>\r\n                <tr key=\"row2\">\r\n                    <td>\r\n                        <Link to={\"/search/\"+result.code}>{result.code}</Link>\r\n                    </td>\r\n                </tr>\r\n                <tr key=\"row3\">\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim}</td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n                <table className=\"rentHistory\" hidden={!historyAvailable.current}><tbody>\r\n                    <tr id=\"titles\"><td>{props.text.rentDate}</td><td>{props.text.returnDate}</td></tr>\r\n                    {rentHistory.map(entry => showHistoryEntry(entry))}\r\n                </tbody></table>\r\n                <div hidden={!props.doc.serverAvailable || !props.doc.admin}>\r\n                    <button className=\"bookStates\" id = \"0\" disabled={flags[0]} onClick={() => setState(0)}> {props.text.available} </button>\r\n                    <button className=\"bookStates\" id = \"4\" disabled={flags[4]} onClick={() => setState(4)}> {props.text.lost} </button>\r\n                    <button className=\"bookStates\" id = \"5\" disabled={flags[5]} onClick={() => setState(5)}> {props.text.damaged} </button>\r\n                    <button className=\"bookStates\" id = \"6\" disabled={flags[6]} onClick={() => setState(6)}> {props.text.given} </button>\r\n                    <button className=\"bookStates\" id = \"7\" disabled={flags[7]} onClick={() => setState(7)}> {props.text.notAvailable} </button>\r\n                    <button className=\"bookStates\" id = \"8\" disabled={flags[8]} onClick={() => setState(8)}> {props.text.deleted} </button>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirmRef.current}>\r\n                    <div id=\"bookName\"> {getBookState(props.text, bookStateRef.current)} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results, detail)\r\n    {\r\n        console.log(\"Redraw \" + needConfirmRef.current);\r\n        console.log(historyAvailable.current);\r\n        console.log(detail);\r\n        return results.map((result) => showEntry(result, detail))\r\n    }\r\n\r\n    function setPeriod(from, text)\r\n    {\r\n        if (from)\r\n            setFromId(text)\r\n        else\r\n            setToId(text)\r\n    }\r\n\r\n    function findBookLocally(keyword, bookList)\r\n    {\r\n        let results = [];\r\n        console.log(advancedSearch);\r\n        const text = keyword.toLowerCase();\r\n        console.log(text);\r\n        for (let i = 0 ; i < bookList.length ; i++) {\r\n            const row = bookList[i];\r\n            if (results.length >= MAX_SEARCH_ENTRY) break;\r\n\r\n            if (text.length > 0 &&\r\n                (!row.name || !row.name.toString().toLowerCase().includes(text)) &&\r\n                (!row.totalName || !row.totalName.toString().toLowerCase().includes(text)) &&\r\n                (!row.author || !row.author.toString().toLowerCase().includes(text)) &&\r\n                row.code.toLowerCase() !== text && row.isbn !== text)\r\n                continue\r\n            if (row.deleted && row.deleted === \"Y\")\r\n                continue\r\n//            console.log(row)\r\n\r\n            if (advancedSearch)\r\n            {\r\n                if (author.length > 0 && row.author && !row.author.toString().toLowerCase().includes(author.toLowerCase()))\r\n                    continue;\r\n\r\n                if (fromId.length > 0 && row.code < fromId)\r\n                    continue;\r\n\r\n                if (toId.length > 0 && row.code > toId)\r\n                    continue;\r\n\r\n                const regDate = row.regDate;\r\n\r\n                if (regDate < fromDate || regDate > toDate)\r\n                    continue;\r\n                console.log(row);\r\n                console.log(regDate);\r\n                console.log(regDate < fromDate);\r\n                console.log(regDate > toDate);\r\n\r\n                if (!((1<<row.state) & stateFilter))\r\n                    continue;\r\n            }\r\n            else if (text.length === 0)\r\n                continue;\r\n\r\n            let resultString = `${row.name} ${row.claim_num}`;\r\n            let retDate = \"\";\r\n            let state = \"0\";\r\n            for (const entry of rentList)\r\n            {\r\n                if (entry.code === row.code)\r\n                {\r\n                    state = entry.state;\r\n                    if (state === \"1\" || state === \"3\")\r\n                    {\r\n                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            let resultObject = {\r\n                index: i,\r\n                text: resultString,\r\n                name: row.name,\r\n                code: row.code.toString(),\r\n                rent: getBookState(props.text, state),\r\n                retDate: retDate,\r\n                regDate: row.regDate,\r\n                author: row.author,\r\n                totalName: row.totalName,\r\n                claim_num: row.claim_num,\r\n                publish: row.publish,\r\n                claim: row.claim,\r\n                state: parseInt(state),\r\n                isbn: row.isbn\r\n            };\r\n            results.push(resultObject);\r\n//            console.log(resultObject);\r\n        }\r\n        console.log(results.length);\r\n\r\n        return results;\r\n    }\r\n\r\n    function onChangeDate(date)\r\n    {\r\n        console.log(date);\r\n        const date1 = date[0]\r\n        const date2 = date[1]\r\n        const y1 = date1.getFullYear().toString();\r\n        const m1 = (date1.getMonth() + 1).toString().padStart(2, \"0\")\r\n        const d1 = date1.getDate().toString().padStart(2, \"0\");\r\n        const dateStr1 = y1 + \"-\" + m1 + \"-\" + d1;\r\n        console.log(dateStr1);\r\n        setFromDate(dateStr1);\r\n\r\n        const y2 = date2.getFullYear().toString();\r\n        const m2 = (date2.getMonth() + 1).toString().padStart(2, \"0\")\r\n        const d2 = date2.getDate().toString().padStart(2, \"0\");\r\n        const dateStr2 = y2 + \"-\" + m2 + \"-\" + d2;\r\n        console.log(dateStr2);\r\n        setToDate(dateStr2);\r\n    }\r\n\r\n    function searchEntry()\r\n    {\r\n        console.log(\"Search\");\r\n        console.log(fromId);\r\n        console.log(toId);\r\n        console.log(fromDate);\r\n        console.log(toDate);\r\n        let results = findBookLocally(inputText, bookList);\r\n        results.sort(compareBook);\r\n\r\n        let sr = results;\r\n        if (sr.length > 0)\r\n            setSearchResults(sr);\r\n        else\r\n            setSearchResults([]);\r\n        if (sr.length === 1)\r\n            selectedRef.current = sr[0].code;\r\n    }\r\n\r\n    function toggleAdvancedSearch()\r\n    {\r\n        setAdvancedSearch(!advancedSearch);\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\" hidden={bookId !== \"\"}>\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n                    <div hidden={!props.doc.admin}>\r\n                        <input type=\"checkbox\" id=\"advancedSearch\" checked={advancedSearch} onChange={() => toggleAdvancedSearch()}/>\r\n                        <label>\r\n                            {props.text.advSearch}\r\n                        </label>\r\n                    </div>\r\n                <div hidden={!advancedSearch}>\r\n                    <div>\r\n                    <label> {props.text.author} </label>\r\n                    <input type=\"text\" id=\"author\" onChange={(event) => {setAuthor(event.target.value)}} />\r\n                    </div>\r\n                    <div>\r\n                    <label> {props.text.bookCode} </label>\r\n                    <input type=\"text\" id=\"fromPeriod\" onChange={(event) => {setPeriod(true, event.target.value);}} />\r\n                    <label> ~  </label>\r\n                    <input type=\"text\" id=\"toPeriod\" onChange={(event) => {setPeriod(false, event.target.value);}} />\r\n                    </div>\r\n                    <div>\r\n                    <label> {props.text.registeredDate} </label>\r\n                    <Calendar onChange={onChangeDate} selectRange={true}/>\r\n                    </div>\r\n                    <div>\r\n                    <table><tbody>\r\n                        <tr key=\"stateName\" className=\"bookData\">\r\n                            <td className =\"stateName\">{props.text.all}</td>\r\n                            <td className =\"stateName\">{props.text.available}</td>\r\n                            <td className =\"stateName\">{props.text.checkedOut}</td>\r\n                            <td className =\"stateName\">{props.text.overDue}</td>\r\n                            <td className =\"stateName\">{props.text.lost}</td>\r\n                            <td className =\"stateName\">{props.text.damaged}</td>\r\n                            <td className =\"stateName\">{props.text.given}</td>\r\n                            <td className =\"stateName\">{props.text.notAvailable}</td>\r\n                            <td className =\"stateName\">{props.text.deleted}</td>\r\n                        </tr>\r\n                        <tr key=\"stateButton\" className=\"bookData\">\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1023\" onChange={() => setSearchState(1023)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"0\" onChange={() => setSearchState(0)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1\" onChange={() => setSearchState(1)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"3\" onChange={() => setSearchState(3)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"4\" onChange={() => setSearchState(4)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"5\" onChange={() => setSearchState(5)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"6\" onChange={() => setSearchState(6)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"7\" onChange={() => setSearchState(7)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"8\" onChange={() => setSearchState(8)}/>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                    </div>\r\n                    <div>\r\n                    <button id=\"searchEntry\" onClick={searchEntry}> {props.text.search} </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ListView keyValue={searchQuery} list={searchResults} detail={[selectedId, needConfirm, rentHistory]} showCallback={(entries, detail) => { return showEntries(entries, detail); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, compareRent } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY, REQUEST_QUERY} from \"../api/query.js\";\r\n//import {USER_QUERY, HISTORY_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nconst MAX_EXTEND = 1;\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [extendCount, setExtendCount] = useState(0);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [loadRequest, { data: requestData }] = useLazyQuery(REQUEST_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(() => {\r\n            async function func() {\r\n                console.log(\"User data updated \");\r\n                await compare();\r\n            }\r\n            func();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData)\r\n            let hist = [];\r\n            const rentLogs = historyData.rentLog;\r\n//            const rentLogs = historyData.rentLog_tests;\r\n            for (let i = 0 ; i < rentLogs.length ; i++)\r\n            {\r\n                const entry = rentLogs[i];\r\n                if (entry.book_state !== \"1\" && entry.book_state !== 1)\r\n                    continue;\r\n                if (! (\"return_date\" in entry) || ! entry.return_date)\r\n                    continue;\r\n//                console.log(entry);\r\n                const id = entry.book_id;\r\n                if (!(id in props.doc.book))\r\n                    continue;\r\n\r\n                const book = props.doc.book[id];\r\n//                console.log(book)\r\n                const title = book.title;\r\n                const claim = book.claim;\r\n                const date = entry.timestamp.split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                const retDate = entry.return_date.split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                hist.push(\r\n                    {\"id\": id, \"title\": title, \"rentDate\": date, \"retDate\": retDate, \"claim\": claim,\r\n                     \"totalName\": book.series, \"claim_num\": book.claim_num\r\n                    }\r\n                );\r\n\r\n            }\r\n            hist.sort(compareRent);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Request data\");\r\n            if (requestData)\r\n            {\r\n                console.log(\"Request available\");\r\n                props.doc.setRequest(requestData.request)\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [requestData]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            console.log(props.doc.getRent(userId));\r\n            await loadHistory();\r\n            await loadRequest();\r\n//            props.doc.setRequest(requests);\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index, history) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const claim = rent[\"claim\"];\r\n        const key = index.toString();\r\n        const extendCount = rent.extendCount;\r\n        const maxExtended = extendCount >= MAX_EXTEND;\r\n        let titleRowSpan;\r\n        let extending;\r\n        if (history)\r\n        {\r\n            titleRowSpan = \"1\"\r\n        }\r\n        else\r\n        {\r\n            extending = props.doc.hasRequest(id);\r\n            titleRowSpan = \"2\"\r\n        }\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" rowSpan={titleRowSpan} className=\"bookName\">\r\n                            {rent.totalName + \" \"}<b>{rent.title}</b>{\" \" + rent.claim_num}\r\n                        </td>\r\n                    </tr>\r\n                    {!history &&\r\n                        <tr key={key + \"Extend\"} className=\"bookExtend\">\r\n                            <td className=\"bookExtend\"> <button id=\"extend\" onClick={async () => extend(id)}\r\n                                disabled={extending || maxExtended}>\r\n                                {maxExtended && props.text.maxExtend}\r\n                                {(extending && !maxExtended) && props.text.extending}\r\n                                {!(extending || maxExtended) && props.text.extend}\r\n                                ({extendCount})\r\n                            </button></td>\r\n                        </tr>\r\n                    }\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n//        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result, history) => {\r\n        let retText;\r\n        if (history)\r\n            retText = props.text.returnDate;\r\n        else\r\n            retText = props.text.dueDate;\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{retText}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index, history);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        await loadRequest();\r\n        console.log(\"Log In\");\r\n        await compare();\r\n    }\r\n\r\n    const extend = async (bookId) => {\r\n        console.log(\"Extend\");\r\n        const date = new Date().toISOString().replace(\"T\", \" \").replace(\"Z\", \"\");\r\n        console.log(date);\r\n        const request =\r\n            \"{\\n\" +\r\n            \" \\\"user_id\\\": \\\"\" + userId + \"\\\",\\n\" +\r\n            \" \\\"book_id\\\": \\\"\" + bookId + \"\\\",\\n\" +\r\n            \" \\\"date\\\": \\\"\" + date + \"\\\",\\n\" +\r\n            \" \\\"action\\\": \\\"extend\\\"\\n\" +\r\n            \"}\\n\"\r\n\r\n        props.context.sendRequest(request);\r\n        props.doc.addRequest(bookId);\r\n        setExtendCount(extendCount + 1);\r\n    }\r\n\r\n    const compare = async () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        console.log(passwordText);\r\n        let text;\r\n        const user = userData.user[0];\r\n        if (props.context.checkLogIn(user, passwordText))\r\n        {\r\n            props.doc.logIn(user);\r\n\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults, false) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries, true); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\n//import CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userId, setUserId] = useState(\"\");\r\n\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [bookValue] = useDebounce(bookText, 500);\r\n    const [bookId, setBookId] = useState(\"\");\r\n\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n\r\n    const [rented, setRented] = useState([]);\r\n    const [userData, setUserData] = useState({});\r\n    const [bookData, setBookData] = useState({});\r\n    const [state, setState] = useState(State.LoggedOut);\r\n\r\n    const { id } = useParams();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n            const prefixList = document.getElementsByName(\"idPrefix\");\r\n            for (var i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                const prefix = prefixList[i].id\r\n                if (\"AB\" === prefix)\r\n                    prefixList[i].checked = true\r\n                else\r\n                    prefixList[i].checked = false\r\n\r\n            }\r\n            console.log(\"ID: \" + id);\r\n            if (id && id.length !== 0)\r\n            {\r\n//                setBarcode(id)\r\n                setUserId(id);\r\n                logIn(id);\r\n            }\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n//            console.log(props.doc.serverInfo);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            if (props.doc.admin)\r\n                return;\r\n            import(\"./PageServer.css\");\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                const response = await props.doc.requestGet(url, {});\r\n                const code = response.data.scan;\r\n                if (code) {\r\n                    console.log(code)\r\n                    console.log(state)\r\n                    setBarcode(code)\r\n                }\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!barcode)\r\n                return;\r\n            console.log(\"Updated barcode: \" + barcode);\r\n            console.log(\"state : \" + state);\r\n            if (state === State.LoggedIn)\r\n                setBookId(barcode);\r\n            else if (state === State.LoggedOut)\r\n                logIn(barcode);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [barcode]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                console.log(\"Set state to LoggedIn from \" + state);\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                console.log(\"Set state to LoggedOut from \" + state);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n                setState(State.LoggedOut);\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in bookData)\r\n            {\r\n                if (bookData._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n//                setBarcode(\"\")\r\n                setBookId(\"\");\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            if (state === State.LoggedIn)\r\n                return;\r\n\r\n            const prefixList = document.getElementsByName(\"idPrefix\");\r\n            var prefix = \"\"\r\n            for (var i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                if (prefixList[i].checked)\r\n                    prefix = prefixList[i].id\r\n                    console.log(\"Pressed [\" + i.toString() + \" \" + prefix + \"]\")\r\n\r\n            }\r\n            let _userId;\r\n            if (userValue[0] === \"A\" || userValue[0] === \"a\")\r\n                _userId = userValue;\r\n            else\r\n                _userId = prefix + userValue;\r\n//                setBarcode(_userId);\r\n            setUserId(_userId);\r\n\r\n        }, [state, userValue]\r\n    );\r\n*/\r\n\r\n    const getUserData = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const param = {\"user\": userText, \"data\":\"nothing\"};\r\n        const response = await props.doc.requestGet(url, param);\r\n        const user = response.data.return;\r\n\r\n        setUserData(user);\r\n        console.log(user);\r\n        setUserId(user.USER_CODE);\r\n    }\r\n\r\n    const logIn = async (inputId = undefined) => {\r\n        var userId;\r\n        var prefix = \"\";\r\n        var i;\r\n        const prefixList = document.getElementsByName(\"idPrefix\");\r\n        if (inputId)\r\n        {\r\n            if (inputId.length <= 2)\r\n                return;\r\n            prefix = inputId.substring(0, 2);\r\n            var found = false;\r\n            for (i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                if (prefix === prefixList[i].id)\r\n                {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found)\r\n                return;\r\n            userId = inputId;\r\n        }\r\n        else\r\n        {\r\n            const userValue = document.getElementById('userInput').value;\r\n            for (i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                if (prefixList[i].checked)\r\n                    prefix = prefixList[i].id\r\n                    console.log(\"Pressed [\" + i.toString() + \" \" + prefix + \"]\")\r\n\r\n            }\r\n            if (userValue[0] === \"A\" || userValue[0] === \"a\")\r\n                userId = userValue;\r\n            else\r\n                userId = prefix + userValue;\r\n        }\r\n        console.log(\"LOGIN\");\r\n        console.log(userId);\r\n        if (userId.length === 0)\r\n            return;\r\n        console.log(\"Set state to LoggingIn from \" + state );\r\n        setState(State.LoggingIn);\r\n        const _id = userId.toUpperCase();\r\n        getUserData(_id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Finish\")\r\n        setUserData({});\r\n        setBookData({});\r\n//        setBarcode(\"\");\r\n        setUserId(\"\");\r\n        setBookId(\"\");\r\n        setRented([])\r\n        navigate(\"/\")\r\n    }\r\n\r\n/*\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n*/\r\n\r\n    useEffect(() => {\r\n        async function setBookValue() {\r\n            if (bookValue.length <= 0)\r\n                return;\r\n            var _bookId;\r\n            if (props.doc.admin)\r\n                _bookId = bookValue;\r\n            else\r\n                _bookId = \"HK\" + bookValue;\r\n            console.log(\"Search book1 \" + _bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(_bookId)), \"match\": true}};\r\n            const param = {\"book\": _bookId, \"match\": true};\r\n            const response = await props.doc.requestGet(url, param);\r\n            const book = response.data.return;\r\n            console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n            if ('books' in book && 'BOOKNAME' in book.books)\r\n            {\r\n                console.log(book.books)\r\n                setBookData(book.books)\r\n            }\r\n        }\r\n        setBookValue()\r\n    }, [bookValue, props.doc]);\r\n\r\n    useEffect(() => {\r\n        async function setBookId() {\r\n            console.log(\"Set bookId: \" + bookId);\r\n            if (bookId.length === 0)\r\n                return;\r\n            console.log(\"Search book2 \" + bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n            const param = {\"book\": bookId, \"match\": true};\r\n            const response = await props.doc.requestGet(url, param);\r\n            const book = response.data.return;\r\n            console.log(book)\r\n            if ('books' in book && 'BOOKNAME' in book.books)\r\n            {\r\n                setBookData(book.books)\r\n            }\r\n        }\r\n        setBookId();\r\n    }, [bookId, props.doc]);\r\n\r\n    useEffect(() => {\r\n        async function setUserId() {\r\n            console.log(\"Set userId: \" + userId);\r\n            if (!userId || userId.length === 0)\r\n                return;\r\n            if (userId.search(\"AA\") === 0 || userId.search(\"AB\") === 0 )\r\n            {\r\n                const prefixList = document.getElementsByName(\"idPrefix\");\r\n                const prefix = userId.substring(0, 2);\r\n                for (var i = 0 ; i < prefixList.length ; i++)\r\n                {\r\n                    const id = prefixList[i].id\r\n                    if (prefix === id)\r\n                        prefixList[i].checked = true\r\n                    else\r\n                        prefixList[i].checked = false\r\n\r\n                }\r\n            }\r\n        }\r\n    setUserId();\r\n    }, [userId]);\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(bookData);\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        const param = {\r\n            book: bookData.BARCODE,\r\n            user: userId\r\n        };\r\n        const response = await props.doc.requestPost(url, param);\r\n        const ret = response.data.return\r\n        console.log(\"Rent confirmed\");\r\n        console.log(ret)\r\n\r\n        if (ret === \"SUCCESS\")\r\n        {\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.rentSucceed,\r\n                              \"type\": toast.TYPE.SUCCESS})\r\n            rented.push({\"id\": bookData.BARCODE, \"name\": bookData.BOOKNAME})\r\n            console.log(rented)\r\n            setRented(rented)\r\n        }\r\n        else\r\n        {\r\n            let text\r\n            if (ret in props.text)\r\n                text = props.text[ret];\r\n            else\r\n                text = props.text.NOT_AVAILABLE;\r\n            console.log(text)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": text,\r\n                              \"type\": toast.TYPE.ERROR})\r\n        }\r\n        setBookData({});\r\n//        setBarcode(\"\");\r\n        setBookId(\"\");\r\n        getUserData(userId);\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n    /*\r\n        return (<React.Fragment key={index + \"Fragment\"}>\r\n                    <tr key={index}>\r\n                        <td className=\"bookCell\"> {rent.id} </td>\r\n                        <td colSpan=\"3\" className=\"bookCell\"> {rent.name} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    */\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    <div id=\"dueDate\">\r\n                    {props.text.dueDate} : {props.doc.dueDate}\r\n                    </div>\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n    /*\r\n                    <table><tbody>\r\n                        {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                    </tbody></table>\r\n    */\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setBookData({});\r\n//        setBarcode(\"\")\r\n        setBookId(\"\");\r\n    }\r\n\r\n    function setUserKeyDown(event)\r\n    {\r\n        if (event.key === \"Enter\")\r\n        {\r\n            console.log(event);\r\n            console.log(document.getElementById('userInput').value);\r\n            logIn();\r\n        }\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"radio\" id = \"AA\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AA\" className=\"idPrefix\" name=\"idPrefix\"> AA </label>\r\n                <input type=\"radio\" id = \"AB\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AB\" className=\"idPrefix\" name=\"idPrefix\"> AB </label>\r\n                <input type=\"text\" id=\"userInput\" pattern=\"[0-9]*\" inputMode=\"numeric\"\r\n                    placeholder={props.text.idHolder}\r\n                    onKeyDown={(event) => {\r\n                        setUserKeyDown(event);\r\n                    }}/>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"bookInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {bookData.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {bookData.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={async () => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {rented.length > 0 &&\r\n                    <ListView list={rented} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n            <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.finish} </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n//    const [initialized, setInitialized] = useState(false);\r\n//    const [userId, setUserId] = useState(\"\");\r\n//    const [state, setState] = useState(State.LoggedOut);\r\n//    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n//                     { \"variables\": { \"_id\": userId } });\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [returned, setReturned] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            if (props.doc.admin)\r\n                return;\r\n            import(\"./PageServer.css\")\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                const response = await props.doc.requestGet(url, {});\r\n                const book = response.data.scan;\r\n                if (book) {\r\n                    console.log(book.search(\"HK\"))\r\n                    if (book.search(\"HK\") === 0) {\r\n                        console.log(barcode + \" -> \" + book)\r\n                        setBarcode(book)\r\n                    }\r\n                }\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    useEffect(() => {\r\n        async function setBookId() {\r\n            if (bookText.length > 0)\r\n            {\r\n                var bookId;\r\n                if (props.doc.admin)\r\n                    bookId = bookText;\r\n                else\r\n                    bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        }\r\n        setBookId();\r\n    }, [searchQuery, props.doc, bookText]);\r\n\r\n    useEffect(() => {\r\n        async function setBarcode()  {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                console.log(book)\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        }\r\n        setBarcode();\r\n    }, [barcode, props.doc]);\r\n\r\n/*\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 1 || scannedBook._STATE === 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Returned updated\");\r\n            console.log(returned);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            console.log(\"Update return list\");\r\n            const bookId = \"HK\" + bookText;\r\n            console.log(\"Search book1 \" + bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const param = {\"books\": returned};\r\n            props.doc.requestGet(url, param);\r\n        },\r\n        [returned, bookText, props.doc]\r\n    );\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        const param = {\r\n            book: scannedBook.BARCODE\r\n        }\r\n        const response = await props.doc.requestPost(url, param)\r\n        const ret = response.data.return;\r\n        console.log(ret);\r\n        if (ret === \"SUCCESS\")\r\n        {\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.returnSucceed,\r\n                              \"type\": toast.TYPE.SUCCESS})\r\n            returned.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n            console.log(returned)\r\n            setReturned(returned)\r\n        }\r\n        else\r\n        {\r\n            let text\r\n            if (ret in props.text)\r\n                text = props.text[ret];\r\n            else\r\n                text = props.text.NOT_AVAILABLE;\r\n            console.log(text)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": text,\r\n                              \"type\": toast.TYPE.ERROR})\r\n        }\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Finish\")\r\n        navigate(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {returned.length > 0 &&\r\n                    <ListView list={returned} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n            <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.finish} </button>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import { useEffect, useState } from \"react\";\nimport { toUtf8 } from \"./Util\";\nimport \"./UserInfo.css\";\n\nfunction UserInfo(props) {\n    const [needConfirm, setNeedConfirm] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(function() {\n        console.log(\"User Info\");\n        console.log(props.info);\n        document.getElementById('userName').value = props.info.USER_NAME ? props.info.USER_NAME : \"\";\n        document.getElementById('phone').value = props.info.PHONE_NUMBER ? props.info.PHONE_NUMBER : \"\";\n        document.getElementById('email').value = props.info.EMAIL ? props.info.EMAIL : \"\";\n        document.getElementById('address').value = props.info.ADDRESS ? props.info.ADDRESS : \"\";\n        document.getElementById('notice_').value = props.info.NOTICE ? props.info.NOTICE : \"\";\n        document.getElementById('user_level').value = props.info.USER_LEVEL;\n        setUserInfo({\"USER_CODE\": props.info.USER_CODE});\n        setDisabled(true);\n\n    }, [props.info]);\n\n    function setProperty(index, value)\n    {\n        console.log(index);\n        console.log(value);\n        var info = userInfo;\n        switch (index)\n        {\n        case 0:\n            info.USER_NAME = value;\n            break;\n        case 1:\n            info.PHONE_NUMBER = value;\n            break;\n        case 2:\n            info.EMAIL = value;\n            break;\n        case 3:\n            info.ADDRESS = value;\n            break;\n        case 4:\n            info.USER_LEVEL = value;\n            break;\n        case 5:\n            info.NOTICE = value;\n            break;\n        default:\n            break;\n        }\n        const length = Object.keys(info).length;\n        console.log(length);\n//        if (length >= 1 && \"USER_LEVEL\" in info && info.USER_LEVEL >= 0 && info.USER_LEVEL <= 2)\n        if (length > 1)\n            setDisabled(false);\n        setUserInfo(info);\n    }\n\n    async function confirmAction()\n    {\n        console.log(\"Save modification\");\n        console.log(userInfo);\n        const ipAddr = props.doc.serverInfo.localIp;\n        const portNum = props.doc.serverInfo.port;\n        if (ipAddr.length === 0 || portNum <= 0)\n            return;\n\n        const url = \"https://\" + ipAddr + \":\" +\n            portNum + \"/user\";\n\n        var obj = {};\n        console.log(userInfo)\n        for (const key in userInfo)\n        {\n            obj[key] = btoa(toUtf8(userInfo[key]));\n        }\n        const response = await props.doc.requestPost(url, obj);\n        console.log(response);\n        props.refresh(response);\n        setNeedConfirm(false);\n    }\n\n    function cancelAction()\n    {\n        setNeedConfirm(false);\n    }\n\n    return (\n        <div>\n            <table><tbody>\n                <tr key=\"Name\">\n                    <td> {props.text.name} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"userName\" onChange={(event) => {setProperty(0, event.target.value);}} />\n                    </td>\n                </tr>\n                {\"REG_DATE\" in props.info &&\n                    <tr key=\"Register\">\n                        <td> {props.text.registeredDate} </td>\n                        <td colSpan=\"3\" className=\"data\">\n                            {props.info.REG_DATE}\n                        </td>\n                    </tr>\n                }\n                <tr key=\"Phone\">\n                    <td> {props.text.phone} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"phone\" onChange={(event) => {setProperty(1, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Email\">\n                    <td> {props.text.email} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"email\" onChange={(event) => {setProperty(2, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Address\">\n                    <td> {props.text.address} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"address\" onChange={(event) => {setProperty(3, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Notice\">\n                    <td> {props.text.notice_} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"notice_\" onChange={(event) => {setProperty(5, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Level\">\n                    <td> {props.text.level} </td>\n                    <td colSpan=\"3\" className=\"cell\">\n                        <select name=\"User Level\" id=\"user_level\" className=\"dropdown\" onChange={(event) => {setProperty(4, event.target.value);}}>\n                            <option value=\"0\"> {props.text.kid} </option>\n                            <option value=\"1\"> {props.text.adult} </option>\n                            <option value=\"2\"> {props.text.admin} </option>\n                        </select>\n                    </td>\n                </tr>\n            </tbody></table>\n           <button id=\"modify\" hidden={needConfirm} onClick={async () => setNeedConfirm(true)} disabled={disabled}> {props.text.save} </button>\n            <div id=\"checkModify\" hidden={!needConfirm}>\n                <div id=\"noticeMsg\"> {props.text.confirmSave} </div>\n                <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\n                <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\n            </div>\n        </div>\n    );\n}\nexport default UserInfo;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, MAX_SEARCH_ENTRY, getUserState, toUtf8, compareUser } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useNavigate, Link, Navigate, useParams } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport UserInfo from \"../UserInfo\";\r\n\r\n//var rentList = [];\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 300);\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n//    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const { id } = useParams();\r\n    const [rentList, setRentList] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                return;\r\n            }\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.user;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    async function extend(key)\r\n    {\r\n        console.log(\"Extend \" + key);\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/extend\";\r\n        var obj = {};\r\n        obj[\"book\"] = key\r\n\r\n        const ret = await props.doc.requestPost(url, obj);\r\n        console.log(\"Extended\")\r\n        console.log(ret)\r\n        selectId(selectedRef.current, true);\r\n        if (ret.data.return === \"SUCCESS\")\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.extend, prop);\r\n        }\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const extendCount = rent.extendCount;\r\n        const key = index.toString();\r\n//                        <td colSpan={props.doc.serverAvailable?\"3\":\"2\"} className=\"bookName\">{bookName}</td>\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan={props.doc.serverAvailable?\"2\":\"3\"} className=\"bookName\">{bookName}</td>\r\n                        {props.doc.serverAvailable &&\r\n                            <td className=\"bookName\"><button className=\"extend\" onClick={() => extend(id)}>{props.text.extend + \" (\" + extendCount.toString() + \")\"}</button></td>\r\n                        }\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id, forceSelect = false) => {\r\n        const rent = await props.doc.getRent(id);\r\n        console.log(rent);\r\n        if (selectedRef.current === -1 || selectedRef.current !== id || forceSelect )\r\n        {\r\n            console.log(\"Select \" + id);\r\n//            setSelectedId(id);\r\n            selectedRef.current = id;\r\n            console.log(\"Set Rent List\");\r\n            console.log(rent)\r\n            setRentList(rent);\r\n//            rentList = rent;\r\n        }\r\n        else if (searchResults.length > 1)\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n//            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n            setRentList([]);\r\n//            rentList = [];\r\n        }\r\n    }\r\n\r\n    const showUser = (user, detail, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div key={key}>\r\n                    <table><tbody>\r\n                        <tr key={user.id} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user, detail) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result, detail) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, detail, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (user, detail) => {\r\n        console.log(\"Detail\");\r\n        console.log(user);\r\n        return (<>\r\n                    {props.doc.serverAvailable &&\r\n                        <div>\r\n                        <UserInfo text={props.text} doc={props.doc} info={user} refresh={refresh}/>\r\n                        <button id=\"modify\" onClick={() => navigate(\"/checkOut/\" + user.USER_CODE)}> {props.text.checkOut} </button>\r\n                        </div>\r\n                    }\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        detail.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        detail.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(compareUser);\r\n                console.log(results);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                const input = userText.trim()\r\n                console.log(\"Query \" + input + \" \" + searchQuery)\r\n                if (input.length > 0 && searchQuery) {\r\n\r\n                    let sr;\r\n                    if (props.doc.serverAvailable)\r\n                    {\r\n                        console.log(\"from CLIB\")\r\n                        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/users\";\r\n                        const param = {\"user\": btoa(toUtf8(input))};\r\n                        const response = await props.doc.requestGet(url, param);\r\n                        const users = response.data.return.data;\r\n                        console.log(response.data.return);\r\n                        sr = [];\r\n                        if (users) {\r\n                            for (const entry of response.data.return.data)\r\n                            {\r\n                                console.log(entry);\r\n                                let user = entry;\r\n                                user.id = entry.USER_CODE;\r\n                                user.name = entry.USER_NAME;\r\n                                user.state = getUserState(props.text, entry.USER_STATE);\r\n                                user.rent = entry._RENT.length;\r\n                                sr.push(user);\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"from DB\")\r\n                        sr = await findUsers(searchQuery);\r\n                    }\r\n\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                   else\r\n                       selectId(0);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n       [searchQuery, props, userList, queryRequest, userText]\r\n    );\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView keyValue={searchQuery} list={searchResults} detail={rentList} showCallback={(entries, detail) => { return showUsers(entries, detail); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getBookState, compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.user;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userList]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.serverAvailable)\r\n        {\r\n            let results = [];\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const param = {\"user\": \"*\", \"match\":false};\r\n//            console.log(obj);\r\n            const response = await props.doc.requestGet(url, param);\r\n//           console.log(response)\r\n//            if (!(\"books\" in response.data.return))\r\n//                return results;\r\n            const books = response.data.return.books;\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                const state = book._STATE;\r\n                let retDate = \"\";\r\n                if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                {\r\n                    retDate = book.RETURN_DATE;\r\n                }\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: book.BOOKNAME,\r\n                    id: book.BARCODE,\r\n                    rent: getBookState(props.text, book.STATS.toString()),\r\n                    rentDate: book.LENT_DATE,\r\n                    retDate: retDate,\r\n                    author: book.AUTHOR,\r\n                    totalName: book.TOTAL_NAME,\r\n                    claim_num: book.CLAMENUM,\r\n                    publish: book.PUBLISH,\r\n                    claim: book.CLAIM,\r\n                    user: book.USER,\r\n                    userName: book.USER_NAME\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n            setRentList(results);\r\n        }\r\n        else\r\n        {\r\n\r\n            const rent = await props.doc.getRent();\r\n            console.log(\"Rent\");\r\n            console.log(rent);\r\n            rent.sort(compareRent);\r\n            for (const index in rent)\r\n            {\r\n                const userId = rent[index][\"user\"];\r\n                let userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                rent[index][\"userName\"] = userName;\r\n//                console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n            }\r\n            setRentList(rent);\r\n        }\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n//        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        const claim = rent[\"claim\"];\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">\r\n                        {rent.totalName + \" \"}<b>{rent.title}</b>{\" \" + rent.claim_num}\r\n                        </td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"situation\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.situation}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue=\"\" list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n//    const [initialized, setInitialized] = useState(false);\r\n    const [fromTime, setFromTime] = useState(\"\");\r\n    const [toTime, setToTime] = useState(\"\");\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [loadHistory, {loading: historyLoading, data: historyData, error: historyError }] = useLazyQuery(HISTORY_PERIOD_QUERY,\r\n            {\"variables\": { \"fromTime\" : fromTime, \"toTime\": toTime}});\r\n    const [userList, setUserList] = useState({});\r\n    const [yearValue, setYear] = useState(0);\r\n    const [monthValue, setMonth] = useState(0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [searchQuery] = useDebounce(query, 300);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            var i;\r\n            var option;\r\n            var year = document.getElementById('year')\r\n            var month = document.getElementById('month')\r\n            for (i = 1; i <= 12 ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                month.add(option, i);\r\n            }\r\n            const thisYear = new Date().getFullYear();\r\n            const thisMonth = new Date().getMonth() + 1;\r\n            const fromYear = 2017;\r\n\r\n            for (i = fromYear ; i <= thisYear ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                year.add(option, i);\r\n            }\r\n\r\n            console.log(thisYear);\r\n            console.log(thisMonth);\r\n            setYear(thisYear);\r\n            setMonth(thisMonth);\r\n            document.getElementById('year').value = thisYear;\r\n            document.getElementById('month').value = thisMonth;\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n//                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.user;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\")\r\n\r\n            if (!historyData)\r\n                return\r\n\r\n//            console.log(historyData.rentLog_tests)\r\n\r\n            const books = historyData.rentLog;\r\n//            const books = historyData.rentLog_tests;\r\n            let results = [];\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const state = book.book_state;\r\n                if (state !== \"1\" && state !== 1)\r\n                    continue\r\n                if (!book.return_date || book.return_date.length === 0)\r\n                    continue\r\n//                console.log(book)\r\n                const bookId = book.book_id;\r\n                const userId = book.user_id;\r\n                var userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                var bookInfo;\r\n                if (bookId in props.doc.book)\r\n                {\r\n                    bookInfo = props.doc.book[bookId];\r\n                }\r\n                else\r\n                {\r\n                    bookInfo = {}\r\n                    bookInfo.author = \"\"\r\n                    bookInfo.totalName = \"\"\r\n                    bookInfo.claim_num = \"\"\r\n                    bookInfo.publish = \"\"\r\n                    bookInfo.title = \"\"\r\n                }\r\n//                console.log(bookInfo)\r\n                const resultString = `${bookInfo.title} ${bookInfo.claim_num}`;\r\n                retDate = book.return_date;\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: bookInfo.title,\r\n                    id: bookId,\r\n                    rentDate: book.timestamp,\r\n                    retDate: retDate,\r\n                    author: bookInfo.author,\r\n                    totalName: bookInfo.series,\r\n                    claim_num: bookInfo.claim_num,\r\n                    publish: bookInfo.publisher,\r\n                    claim: bookInfo.claim,\r\n                    user: userId,\r\n                    userName: userName\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n            console.log(results);\r\n            setRentList(results);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, historyLoading, historyError]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        }, [userList]\r\n    );\r\n*/\r\n\r\n/*\r\n    async function updateDoc()\r\n    {\r\n        setInitialized(true);\r\n    }\r\n*/\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n//        const bookName = rent.totalName + \" \" + rent.title + \" \" + rent.claim_num\r\n        const claim = rent.claim;\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookCell\">\r\n                        {rent.totalName + \" \"}<b>{rent.title}</b>{\" \" + rent.claim_num}\r\n                        </td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n    function setProperty(index, value)\r\n    {\r\n        console.log(index);\r\n        console.log(value);\r\n        switch (index)\r\n        {\r\n            case 0:\r\n                setYear(value);\r\n                break;\r\n            case 1:\r\n                setMonth(parseInt(value));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(function () {\r\n        setQuery(yearValue.toString() + \"-\" + monthValue.toString().padStart(2, \"0\"))\r\n\r\n    }, [yearValue, monthValue]\r\n    );\r\n\r\n    useEffect(function () {\r\n        async function search()\r\n        {\r\n            console.log(\"Search\")\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/history\";\r\n                const param = {\"period\": query};\r\n                const response = await props.doc.requestGet(url, param);\r\n                console.log(response);\r\n\r\n                const books = response.data.return.books;\r\n                let results = [];\r\n                let retDate = \"\";\r\n                for (let i = 0 ; i < books.length ; i++)\r\n                {\r\n                    const book = books[i];\r\n                    const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                    if (\"_RETURN_DATE\" in book)\r\n                    {\r\n                        retDate = book._RETURN_DATE;\r\n                    }\r\n                    let resultObject = {\r\n                        index: i,\r\n                        text: resultString,\r\n                        title: book.BOOKNAME,\r\n                        id: book.BARCODE,\r\n        //                rent: getBookState(props.text, book..toString()),\r\n                        rentDate: book.RENT_DATE,\r\n                        retDate: retDate,\r\n                        author: book.AUTHOR,\r\n                        totalName: book.TOTAL_NAME,\r\n                        claim_num: book.CLAMENUM,\r\n                        publish: book.PUBLISH,\r\n                        claim: book.CLAIM,\r\n                        user: book.USER,\r\n                        userName: book.USER_NAME\r\n                    };\r\n                    results.push(resultObject);\r\n                }\r\n                results.sort(compareRent);\r\n                setRentList(results);\r\n            }\r\n            else\r\n            {\r\n                var queryTo;\r\n                const nextMonth = monthValue + 1\r\n                queryTo = yearValue.toString() + \"-\" + nextMonth.toString().padStart(2, \"0\")\r\n                setFromTime(query)\r\n                setToTime(queryTo)\r\n                console.log(query)\r\n                console.log(queryTo)\r\n\r\n                try {\r\n                    await loadHistory();\r\n                }\r\n                catch (e)\r\n                {\r\n                    console.warn(e.name);\r\n                }\r\n\r\n    /*\r\n                for (const index in rent)\r\n                {\r\n                    const userId = rent[index][\"user\"];\r\n                    let userName;\r\n                    if (userList && userId in userList)\r\n                        userName = userList[userId].name;\r\n                    else\r\n                        userName = \"\"\r\n                    rent[index][\"userName\"] = userName;\r\n                    console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n                }\r\n                setRentList(rent);\r\n    */\r\n            }\r\n        }\r\n        search();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery]\r\n    );\r\n\r\n    function movePrev()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month > 1)\r\n        {\r\n            month -= 1\r\n        }\r\n        else\r\n        {\r\n            year -= 1;\r\n            month = 12;\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    function moveNext()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month < 12)\r\n        {\r\n            month += 1\r\n        }\r\n        else\r\n        {\r\n            year += 1\r\n            month = 1\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"searchRange\">\r\n                <div className=\"page\" id = \"page\">\r\n                    <NavigateBeforeIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {movePrev();} }/>\r\n                </div>\r\n                <select name=\"year\" id=\"year\" className=\"dropdown\" onChange={(event) => {setProperty(0, event.target.value);}}/>\r\n                <select name=\"month\" id=\"month\" className=\"dropdown\" onChange={(event) => {setProperty(1, event.target.value);}}/>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {moveNext();} }/>\r\n                    </div>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue={searchQuery} list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\nimport { Navigate } from 'react-router-dom'\r\nimport UserInfo from \"../UserInfo\";\r\n\r\nfunction NewMember(props) {\r\n//    const [userText, setUserText] = useState(\"\");\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n//    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n//    const [userList, setUserList] = useState({});\r\n//    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized || !props.doc.serverAvailable)\r\n            {\r\n                return;\r\n            }\r\n            import(\"./PageServer.css\");\r\n            console.log(\"=======================================\");\r\n            console.log(\"NewMember initialize\");\r\n            prepareNewMember();\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n*/\r\n\r\n    function prepareNewMember()\r\n    {\r\n        var info = {};\r\n        info.USER_CODE = \"\";\r\n        info.USER_NAME = \"\";\r\n        info.PHONE_NUMBER = \"\";\r\n        info.EMAIL = \"\";\r\n        info.ADDRESS = \"\";\r\n        info.NOTICE = \"\";\r\n        info.USER_LEVEL = -1;\r\n        setUserInfo(info);\r\n    }\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n*/\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n\r\n        const prop = toastProp;\r\n        var text\r\n        if (response.data.return === \"OK\")\r\n        {\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.regSuccess;\r\n            prepareNewMember()\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.regFail;\r\n        }\r\n        prop.autoClose = 3000;\r\n        toast.info(text, prop);\r\n    }\r\n    if (!props.doc.initialized || !props.doc.serverAvailable)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.newMember}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                {props.doc.serverAvailable &&\r\n                    <UserInfo text={props.text} doc={props.doc} info={userInfo} refresh={refresh}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMember;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { Navigate } from 'react-router-dom'\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\n\r\nfunction RequestBook(props) {\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [publisher, setPublisher] = useState(\"\");\r\n    const [note, setNote] = useState(\"\");\r\n    const [today, setToday] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                return;\r\n            }\r\n            console.log(\"=======================================\");\r\n            console.log(\"Request book\");\r\n            setToday(new Date().toISOString().slice(0, 10))\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    function setProperty(index, value)\r\n    {\r\n        switch (index)\r\n        {\r\n            case 0:\r\n                setTitle(value);\r\n                break;\r\n            case 1:\r\n                setAuthor(value);\r\n                break;\r\n            case 2:\r\n                setPublisher(value);\r\n                break;\r\n            case 3:\r\n                setNote(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    async function confirmAction()\r\n    {\r\n        setNeedConfirm(false);\r\n        setReadOnly(false);\r\n\r\n        const request =\r\n            \"{\\n\" +\r\n            \" \\\"user_id\\\": \\\"\" + props.doc.userInfo[\"_id\"] + \"\\\",\\n\" +\r\n            \" \\\"title\\\": \\\"\" + title + \"\\\",\\n\" +\r\n            \" \\\"author\\\": \\\"\" + author + \"\\\",\\n\" +\r\n            \" \\\"publisher\\\": \\\"\" + publisher + \"\\\",\\n\" +\r\n            \" \\\"note\\\": \\\"\" + note + \"\\\",\\n\" +\r\n            \" \\\"date\\\": \\\"\" + today + \"\\\",\\n\" +\r\n            \" \\\"action\\\": \\\"bookRequest\\\"\\n\" +\r\n            \"}\\n\";\r\n        console.log(request);\r\n\r\n        props.context.sendRequest(request);\r\n\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.autoClose = 3000;\r\n        toast.info(props.text.regSuccess, prop);\r\n\r\n        clear();\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        setNeedConfirm(false);\r\n        setReadOnly(false);\r\n    }\r\n\r\n    function submit()\r\n    {\r\n        setNeedConfirm(true);\r\n        setReadOnly(true);\r\n    }\r\n\r\n    function clear()\r\n    {\r\n        document.getElementById('book').value = \"\";\r\n        document.getElementById('author').value = \"\";\r\n        document.getElementById('publisher').value = \"\";\r\n        document.getElementById('notice_').value = \"\";\r\n    }\r\n\r\n    function setReadOnly(readonly)\r\n    {\r\n        document.getElementById('book').readOnly = readonly;\r\n        document.getElementById('author').readOnly = readonly;\r\n        document.getElementById('publisher').readOnly = readonly;\r\n        document.getElementById('notice_').readOnly = readonly;\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.requestBook}\r\n                </h2>\r\n            </div>\r\n            <table><tbody>\r\n                <tr key=\"Date\">\r\n                    <td> {props.text.registeredDate} </td>\r\n                    <td colSpan=\"3\" id=\"today\">\r\n                        {today}\r\n                    </td>\r\n                </tr>\r\n                <tr key=\"Title\">\r\n                    <td> {props.text.title} </td>\r\n                    <td colSpan=\"3\">\r\n                        <input type=\"text\" className=\"input\" id=\"book\" onChange={(event) => {setProperty(0, event.target.value);}} />\r\n                    </td>\r\n                </tr>\r\n                <tr key=\"Author\">\r\n                    <td> {props.text.author} </td>\r\n                    <td colSpan=\"3\">\r\n                        <input type=\"text\" className=\"input\" id=\"author\" onChange={(event) => {setProperty(1, event.target.value);}} />\r\n                    </td>\r\n                </tr>\r\n                <tr key=\"Publisher\">\r\n                    <td> {props.text.publisher} </td>\r\n                    <td colSpan=\"3\">\r\n                        <input type=\"text\" className=\"input\" id=\"publisher\" onChange={(event) => {setProperty(2, event.target.value);}} />\r\n                    </td>\r\n                </tr>\r\n                <tr key=\"Notice\">\r\n                    <td> {props.text.notice_} </td>\r\n                    <td colSpan=\"3\">\r\n                        <input type=\"text\" className=\"input\" id=\"notice_\" onChange={(event) => {setProperty(3, event.target.value);}} />\r\n                    </td>\r\n                </tr>\r\n            </tbody></table>\r\n           <button id=\"submit\" onClick={async () => submit()} disabled={(title.length === 0)}> {props.text.submit} </button>\r\n            <div id=\"checkRent\" hidden={!needConfirm}>\r\n                <div id=\"bookName\"> {props.text.confirmSave} </div>\r\n                <button id=\"confirm\" onClick={async () => confirmAction()}> {props.text.confirm} </button>\r\n                <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RequestBook;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.request = new Set();\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.dueDate = \"\";\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async requestGet(url, param)\r\n    {\r\n        param.os = navigator.platform;\r\n        const obj = {\"params\": param};\r\n        console.log(\"Request GET : \" + url);\r\n//        console.log(obj);\r\n        const response = await axios.get(url, obj);\r\n        return response;\r\n    }\r\n\r\n    async requestPost(url, param)\r\n    {\r\n        console.log(\"Request POST: \" + url);\r\n        param.os = navigator.platform;\r\n//        console.log(param);\r\n        const response = await axios.post(url, param);\r\n\r\n        return response;\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n        return;\r\n//        const response = await axios.get(\"https://ipv4.seeip.org/jsonip\");\r\n/*\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\")\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n*/\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        return;\r\n/*\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return;\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            this.serverAvailable = true;\r\n            axios.get(query, {\"params\": {\"os\": navigator.platform, }})\r\n                .then( (response) => {\r\n                    console.log(\"Server connected\");\r\n                    console.log(response.data);\r\n                    this.admin = response.data.admin;\r\n                    this.dueDate = response.data.dueDate;\r\n                    this.initialized = true;\r\n                })\r\n                .catch(error => {\r\n                  const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n                  window.open(query);\r\n                });\r\n        }\r\n*/\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setRequest(request) {\r\n        for (const entry of request)\r\n        {\r\n            if (entry.action !== \"extend\" || entry.state !== \"pending\")\r\n                continue;\r\n            this.request.add(entry.book_id);\r\n        }\r\n    }\r\n\r\n    hasRequest(entry)\r\n    {\r\n        return this.request.has(entry);\r\n    }\r\n\r\n    addRequest(entry)\r\n    {\r\n        this.request.add(entry)\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        console.log(serverInfo)\r\n        this.serverInfo = {}\r\n        this.serverInfo.globalIp = serverInfo[0].globalIp;\r\n        this.serverInfo.book = serverInfo[0].book;\r\n\r\n        if (serverInfo.proxy)\r\n        {\r\n            this.serverInfo.localIp = \"libserver.hkmcclibrary.duckdns.org\";\r\n            this.serverInfo.port = 443;\r\n        }\r\n        else\r\n        {\r\n            this.serverInfo.localIp = serverInfo[0].localIp;\r\n            this.serverInfo.port = serverInfo[0].port;\r\n        }\r\n\r\n\r\n        console.log(this.serverInfo);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        console.log(\"Register \" + books.length + \" books\");\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = {...book};\r\n            this.book[id].claim = book.claim.replace(/_/g, \" \");\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n//        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\" && state !== 1 && state !== 3)\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n//           console.log(userId);\r\n//           console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n            {\r\n                if (\"rent\" in this.user[userId])\r\n                    this.user[userId][\"rent\"] += 1;\r\n                else\r\n                    this.user[userId][\"rent\"] = 1;\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Invalid user\")\r\n                console.log(this.rent[i])\r\n            }\r\n        }\r\n//        console.log(this.user);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\" ||\r\n            userInfo['level'] === 2)\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n        const userId = userInfo['_id'];\r\n        console.log(userId);\r\n        /*\r\n        for (const entry of this.request)\r\n        {\r\n            console.log(entry);\r\n        }\r\n        */\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.admin = false;\r\n        this.userInfo = {};\r\n        this.request.clear();\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    async getRent(userId = undefined) {\r\n        let ret = [];\r\n        if (this.serverAvailable) {\r\n            const url = \"https://\" + this.serverInfo.localIp + \":\" +\r\n                this.serverInfo.port + \"/book\";\r\n            const param = {\"user\": userId};\r\n            const result = await this.requestGet(url, param);\r\n            console.log(result);\r\n            if (\"books\" in result.data.return)\r\n            {\r\n                // BARCODE, BOOKNAME, LENT_DATE, RETURN_DATE, STATS\r\n                // id, title, rentDate, retData,  stat\r\n                for (const entry of result.data.return.books)\r\n                {\r\n                    console.log(entry);\r\n                    const book = {\r\n                        'id': entry.BARCODE,\r\n                        'title': entry.BOOKNAME,\r\n                        'claim': entry.CLAIM,\r\n                        'claim_num': entry.CLAMENUM,\r\n                        'totalName': entry.TOTAL_NAME,\r\n                        'rentDate': entry.LENT_DATE,\r\n                        'retDate': entry.RETURN_DATE,\r\n                        'stat': entry.STATS,\r\n                        'extendCount': entry._EXTEND_COUNT\r\n                    };\r\n                    ret.push(book);\r\n                }\r\n//                ret = result.data.return.books;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Check \" + userId);\r\n            console.log(this.bookReady);\r\n            if (!this.bookReady)\r\n                return ret;\r\n    //        console.log(this.rent.length);\r\n            for (let i = 0 ; i < this.rent.length ; i++) {\r\n                const entry = this.rent[i];\r\n                if (userId !== undefined && entry.user_id !== userId)\r\n                    continue;\r\n    //            console.log(entry)\r\n                if (entry.state !== \"1\" && entry.state !== \"3\" && entry.state !== 1 && entry.state !== 3)\r\n                    continue;\r\n                console.log(entry);\r\n                const id = entry[\"book_id\"];\r\n                if (! (id in this.book))\r\n                    continue\r\n                const book = this.book[id];\r\n//                console.log(book)\r\n                let retEntry = {};\r\n                retEntry[\"id\"] = book._id;\r\n                retEntry[\"title\"] = book.title;\r\n                retEntry['claim_num'] = book.claim_num;\r\n                retEntry['totalName'] = book.series;\r\n                retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\");\r\n                retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\");\r\n                retEntry[\"claim\"] = book.claim;\r\n                retEntry[\"user\"] = entry.user_id;\r\n                retEntry['extendCount'] = entry.extend_count;\r\n                ret.push(retEntry)\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import {SQSClient, SendMessageCommand, ReceiveMessageCommand} from '@aws-sdk/client-sqs'\r\nimport config from \"./api/config\";\r\n\r\nconst NodeRSA = require('node-rsa');\r\n\r\n\r\n\r\nconst queueUri = config[\"queue_url\"];\r\n\r\nclass Context {\r\n    constructor(env) {\r\n        console.log(\"Create Context\");\r\n\r\n        console.log(\"Cookies\");\r\n        const rawCookie = document.cookie;\r\n        this.cookie = rawCookie\r\n            .split(\";\")\r\n            .map(v => v.split(\"=\"))\r\n            .reduce((acc, v) => {\r\n                const key = v.shift().trim();\r\n                const value = v.join(\"=\").trim();\r\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\r\n                return acc;\r\n            }, {});\r\n        const aws_key = env.REACT_APP_AWSS_KEY1 + env.REACT_APP_AWSS_KEY2;\r\n        const aws_sec = env.REACT_APP_AWSS_SECRET1 + env.REACT_APP_AWSS_SECRET2;\r\n        const configObject =\r\n        {\r\n            region: config[\"region\"],\r\n            credentials: {\r\n                accessKeyId: aws_key,\r\n                secretAccessKey: aws_sec\r\n            },\r\n        }\r\n        this.sqsClient = new SQSClient(configObject);\r\n//        this.prk = new NodeRSA(config[\"privateKey\"]);\r\n        this.prk = new NodeRSA(env.REACT_APP_PRIVATE_KEY);\r\n    }\r\n\r\n    checkLogIn(user, passwordText) {\r\n        var matched = false;\r\n        var passwordTyped;\r\n        if (user && passwordText.length > 0) {\r\n            console.log(\"User data available\");\r\n            const emailDb = user[\"encrypted_email\"];\r\n            const phoneDb = user[\"encrypted_phone\"];\r\n\r\n            passwordTyped = this.prk.sign(passwordText, 'base64');\r\n            if (passwordText === emailDb ||\r\n                passwordText === phoneDb )\r\n            {\r\n                passwordTyped = passwordText;\r\n                matched = true;\r\n            }\r\n            else if (emailDb === passwordTyped)\r\n            {\r\n//                console.log(\"Email match\");\r\n                matched = true;\r\n            }\r\n            else\r\n            {\r\n                var numberString = \"\";\r\n                for (let i = 0 ; i < passwordText.length ; i++)\r\n                {\r\n                    if (!isNaN(passwordText[i]))\r\n                        numberString += passwordText[i];;\r\n                }\r\n                passwordTyped = this.prk.sign(numberString, 'base64');\r\n                if (passwordTyped === phoneDb)\r\n                {\r\n//                    console.log(\"Phone match\");\r\n                    matched = true;\r\n                }\r\n                else\r\n                {\r\n//                    console.log(\"Nothing matched\");\r\n                }\r\n            }\r\n\r\n//            console.log(\"toast available\");\r\n        }\r\n        if (matched)\r\n        {\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            const expireDate = date.toGMTString();\r\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \" ; SameSite=Lax ;\" ;\r\n        }\r\n        return matched\r\n    }\r\n\r\n    async sendRequest(body)\r\n    {\r\n        const deduplicationId = Math.floor(Math.random() * 100000000).toString();\r\n        try\r\n        {\r\n            const command = new SendMessageCommand({\r\n                MessageBody: body,\r\n                QueueUrl: queueUri,\r\n                MessageGroupId: \"1\",\r\n                MessageDeduplicationId: deduplicationId\r\n            });\r\n            await this.sqsClient.send(command);\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    async receiveRequest()\r\n    {\r\n        console.log(\"Read request\")\r\n        var requests = [];\r\n        try\r\n        {\r\n            const command = new ReceiveMessageCommand({\r\n                QueueUrl: queueUri,\r\n                AttributeNames: [\"\"], // AttributeNameList\r\n                MessageAttributeNames: [ // MessageAttributeNameList\r\n                \"STRING_VALUE\",\r\n                ],\r\n                MaxNumberOfMessages: 10,\r\n                VisibilityTimeout: 5,\r\n                WaitTimeSeconds: 5\r\n            });\r\n            const results = await this.sqsClient.send(command);\r\n            console.log(results);\r\n            if (results.Messages !== undefined)\r\n            {\r\n                for (const result of results.Messages)\r\n                {\r\n                    const msg = JSON.parse(result.Body);\r\n                    msg.state = \"pending\";\r\n                    requests.push(msg);\r\n                }\r\n            }\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n        }\r\n\r\n        return requests;\r\n    }\r\n}\r\n\r\nexport default Context;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n\r\n    useEffect(\r\n        () => {\r\n            function registerClose() {\r\n                console.log(\"Register close\");\r\n                window.addEventListener(\"click\", close);\r\n            };\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./DropdownServer.css\");\r\n            }\r\n\r\n            if (dropdown)\r\n            {\r\n                setTimeout(registerClose, 100.);\r\n            }\r\n\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n            if (!dropdown)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n            return () => {\r\n                window.removeEventListener(\"click\", close);\r\n            }\r\n\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [dropdown, props.doc.logged, props.doc.serverAvailable]\r\n    );\r\n\r\n    const close = () => {\r\n        console.log(\"Close\")\r\n        console.log(dropdown)\r\n        setDropdown(false);\r\n        window.removeEventListener(\"click\", close);\r\n    };\r\n\r\n\r\n    const toggleMenu = () => {\r\n        console.log(\"Click menu\")\r\n        setDropdown(!dropdown);\r\n        console.log(dropdown)\r\n        if (dropdown)\r\n            window.removeEventListener(\"click\", close);\r\n    }\r\n\r\n    const logOut = () =>\r\n    {\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (<div>\r\n            <div className='menu' onClick={toggleMenu} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <div id='dropdown-menu' onClick={() => { close() }} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\">\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\">\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\">\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\">\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\">\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\">\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/requestBook\">\r\n                            {props.text.requestBook}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {props.doc.admin &&\r\n                    <>\r\n                    <hr className=\"hline\"/>\r\n                    <Link className='menu-items' to=\"/userSearch\">\r\n                        {props.text.userSearch}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentalSituation\">\r\n                        {props.text.situation}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentHistory\">\r\n                        {props.text.history}\r\n                    </Link>\r\n                    </>\r\n                }\r\n                {props.doc.serverAvailable && props.doc.admin &&\r\n                    <Link className='menu-items' to=\"/newMember\">\r\n                        {props.text.newMember}\r\n                    </Link>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items' onClick={logOut}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\">\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DropDown;\r\n","import {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport {useState, useEffect} from \"react\";\r\n\r\nfunction Navbar(props) {\r\n    const [selectedValue, setSelectedValue] = useState(props.text.lang);\r\n\r\n    useEffect(function () {\r\n        setSelectedValue(props.text.lang);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\nconst handleChange = (event) => {\r\n    const newLang = event.target.value.toLowerCase();\r\n    if (newLang === selectedValue)\r\n        return;\r\n    console.log(\"New Lang \" + newLang)\r\n    setSelectedValue(newLang);\r\n    document.cookie = \"lang=\" + newLang;\r\n    window.history.go(0);\r\n}\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <select className=\"lang\" value={selectedValue} onChange={handleChange}>\r\n                <option className=\"option\" value=\"eng\"> ENG </option>\r\n                <option className=\"option\" value=\"kor\"> KOR </option>\r\n            </select>\r\n            <DropDown text={props.text} doc={props.doc}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentalSituation from \"./pages/RentalSituation\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\nimport NewMember from \"./pages/NewMember\";\r\nimport RequestBook from \"./pages/RequestBook\";\r\n//import Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {SERVER_QUERY} from \"./api/query.js\";\r\nimport {RENT_QUERY, USER_QUERY, REQUEST_QUERY} from \"./api/query.js\";\r\nimport config from \"./api/config\";\r\n//import {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query_test.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context(process.env);\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const [loadRequest, { data: requestData }] = useLazyQuery(REQUEST_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n//    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            console.log(\"Platform: \");\r\n            console.log(navigator.platform);\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.REACT_APP_NAME);\r\n            console.log(process.env.REACT_APP_VERSION);\r\n            console.log(process.env.REACT_APP_QUEUE_URL);\r\n            let lang = \"\";\r\n            if (navigator.languages.length > 0)\r\n                lang = navigator.languages[0].toLowerCase();\r\n            console.log(lang);\r\n            if (\"lang\" in context.cookie)\r\n                lang = context.cookie.lang;\r\n            let ts = {}\r\n            if (lang.includes(\"kr\") || lang.includes(\"ko\") || lang.includes(\"kor\"))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n            setInitialized(true);\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n//            console.log(\"Login check \" + context.cookie.password);\r\n            const user = userData.user[0]\r\n//            const user = userData.user_test\r\n//            console.log(user);\r\n            if (context.cookie.password && context.checkLogIn(user, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(user);\r\n                loadRequest();\r\n            }\r\n\r\n\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(\"Rent Error\");\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rent)\r\n                doc.setRent(rentData.rent)\r\n//                doc.setRent(rentData.rent_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Request Query Updated\");\r\n            if (requestData)\r\n            {\r\n                console.log(\"Request available\");\r\n                doc.setRequest(requestData.request)\r\n//                doc.setRent(rentData.rent_tests)\r\n            }\r\n        }, [requestData]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.book)\r\n//                doc.setBook(bookData.book_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n\r\n            console.log(serverData);\r\n            console.log(initialized);\r\n            if (!serverData || !initialized)\r\n                return\r\n\r\n            console.log(\"Server info available\")\r\n            logMsg = logMsg + \"<p>Server info available</p>\";\r\n            console.log(serverData)\r\n            doc.setServerInfo(serverData.serverInfo)\r\n\r\n            if (!doc.serverAvailable)\r\n            {\r\n                console.log(\"Server is not available. Load books from cloud DB\");\r\n//                loadBook();\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.LOADING;\r\n                prop.autoClose = false;\r\n                prop.toastId = loadingId;\r\n                toast.loading(textString.loading, prop);\r\n                doc.setLogCallback(updateLog);\r\n\r\n                console.log(\"Get github file\");\r\n                console.log(doc.serverInfo.book);\r\n//                console.log(config.book_path + \"book.info\")\r\n//                doc.requestGet(config.book_path + \"book.info\", {}).then(function (response) {\r\n//                    const fileName = response.data[\"book\"];\r\n                    const fileName = \"book_\" + doc.serverInfo.book + \".json\";\r\n                    doc.requestGet(config.book_path + fileName, {}).then(function (response) {\r\n\r\n/*\r\n                        const zipData = response.data;\r\n                        console.log(typeof(zipData));\r\n                        console.log(zipData.substring(0,50));\r\n                        console.log(zipData.length);\r\n                        zlib.gunzip(zipData, (err, buffer) => {\r\n                            console.log(\"Unzipped \");\r\n                            console.log(buffer)\r\n                        });\r\n    */\r\n                        const data = response.data;\r\n                        console.log(\"Downloaded books\");\r\n                        const bookList = []\r\n                        for (let key in data)\r\n                        {\r\n                            const entry = data[key];\r\n                            bookList.push(entry);\r\n                        }\r\n                        doc.setBook(bookList);\r\n                        if (doc.initialized)\r\n                            notifyInit()\r\n//                    })\r\n                });\r\n            }\r\n        }, [serverLoading, serverError, serverData, initialized]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n//        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice/:id?\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut/:id?\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentalSituation\" element={<RentalSituation context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/newMember\" element={<NewMember context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/requestBook\" element={<RequestBook context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport {createRoot} from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport config from \"./api/config\";\r\n\r\n\r\n\r\n//import * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\n\r\nconst authToken = process.env.REACT_APP_HASURA_TOKEN;\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: config.graphql_url,\r\n        headers: {\r\n            'x-hasura-admin-secret': authToken\r\n        }\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\n\r\n/*\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n*/\r\n\r\nconst container = document.getElementById('root')\r\nconst root = createRoot(container);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}