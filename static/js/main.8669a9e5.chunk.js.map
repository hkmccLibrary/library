{"version":3,"sources":["pages/Home.js","Util.js","api/query.js","pages/Notice.js","ListView.js","pages/Search.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","UserInfo.js","pages/UserSearch.js","pages/RentalSituation.js","pages/RentHistory.js","pages/NewMember.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","console","log","doc","setCallback","undefined","initialize","id","dangerouslySetInnerHTML","__html","text","homeText","SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","arguments","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getUserState","state","normal","overDue","stopped","getBookState","available","checkedOut","notAvailable","compareRent","a1","a2","rentDate","title","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","BOOK_QUERY","gql","RENT_QUERY","USERS_QUERY","USER_QUERY","HISTORY_QUERY","HISTORY_PERIOD_QUERY","NOTICE_QUERY","CONTENT_QUERY","SERVER_QUERY","Notice","useState","searchResults","setSearchResults","displayedCodes","setDisplayedCodes","pageNum","setPageNum","selectedId","setSelectedId","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","useLazyQuery","loadSelected","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","className","date","colSpan","onClick","_id","notice","content","map","fontSize","sx","color","showCallback","ListView","itemList","setItemList","displayList","setDisplayList","list","keyValue","detail","initialized","Search","inputText","setInputText","useDebounce","searchQuery","selectedRef","useRef","bookList","setBookList","rentList","setRentList","useParams","updateDoc","rl","rented","rent","push","code","book_id","retDate","return_date","key","bl","books","book","name","num","author","claim","claim_num","totalName","series","category","publisher","publish","isOpen","findBooks","results","serverAvailable","btoa","url","serverInfo","localIp","port","obj","axios","get","response","return","resultString","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","resultObject","index","BARCODE","AUTHOR","TOTAL_NAME","CLAMENUM","PUBLISH","CLAIM","row","includes","entry","sort","a","b","sr","current","query","selectId","hidden","entryId","rowSpan","bookSearch","placeholder","searchBook","value","onChange","event","target","entries","State","LoggedOut","LoggingIn","LoggedIn","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","setState","history","setHistory","autoLogin","setAutoLogin","loadUser","userData","loadHistory","historyData","expireDate","setExpireDate","setTitle","logged","userInfo","getRent","adminMode","userSearch","checkOut","logIn","context","cookie","Date","setTime","getTime","days","toGMTString","compare","func","bookReady","rentReady","hist","rentLogs","book_state","return_data","split","showEntries","retText","bookName","Fragment","to","showRented","noEntry","toUpperCase","toast","isActive","prop","checkLogIn","user","type","TYPE","SUCCESS","logInSucceed","document","ERROR","logInFail","render","toastId","update","info","idHolder","disabled","onInput","pwHolder","checked","cookieString","toggleAutoLogin","dueDate","LoggingOut","CheckOut","bookText","setBookText","setUserData","scannedBook","setScannedBook","needConfirm","setNeedConfirm","notifyRequest","setNotifyRequest","barcode","setBarcode","interval","setInterval","ipAddr","portNum","then","scan","clearInterval","notify","RENTED","getElementById","dismiss","updateUser","JSON","stringify","logOut","imageCaptured","e","files","file","INFO","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","getBase64","img","method","mode","crossDomain","headers","withCredentials","credentials","image","succeededToOpen","INVALID_BOOK","bookId","USER_CODE","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","accept","capture","inputMode","pattern","bookHolder","confirmRent","ret","rentSucceed","NOT_AVAILABLE","confirmAction","confirm","cancel","Return","NOT_RENTED","confirmReturn","returnSucceed","UserInfo","setDisabled","setUserInfo","setProperty","PHONE_NUMBER","EMAIL","ADDRESS","USER_LEVEL","NOTICE","Object","keys","registeredDate","REG_DATE","phone","email","address","notice_","level","kid","adult","admin","save","confirmSave","post","refresh","queryRequest","toggleQueryRequest","userLoading","userListData","userError","userList","setUserList","users","setUser","getUser","showUsers","showUser","findUsers","toLowerCase","input","trim","RentHistory","RETURN_DATE","STATS","LENT_DATE","USER","userName","situation","fromTime","setFromTime","toTime","setToTime","historyLoading","historyError","yearValue","setYear","monthValue","setMonth","setQuery","year","month","option","createElement","add","thisYear","getFullYear","thisMonth","getMonth","bookInfo","user_id","timestamp","parseInt","padStart","RENT_DATE","nextMonth","queryTo","warn","search","movePrev","moveNext","NewMember","prepareNewMember","newMember","Doc","userReady","logCallback","ip","checkServerIp","globalIp","callback","checkState","checkRent","retEntry","rent_date","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","join","decodeURIComponent","passwordTyped","matched","emailDb","encrypted_email","phoneDb","encrypted_phone","sign","numberString","isNaN","DropDown","dropdown","setDropdown","click","setClick","menu","classList","remove","home","checkOutStatus","Navbar","isMobile","maxWidth","style","width","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","serverLoading","serverError","serverData","loadBook","bookLoading","bookError","bookData","notifyInit","updateLog","process","APP_NAME","APP_VERSION","lang","navigator","languages","ts","kr","en","updateIpAddr","nothing","password","setRent","rents","setBook","setServerInfo","LOADING","setLogCallback","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","path","element","UserSearch","RentalSituation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","options","Authorization","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.8669a9e5.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n}\r\n\r\nexport default Home;\r\n","export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\" || state === 0)\r\n        return text.normal;\r\n    else if (state === \"1\" || state === 1)\r\n        return text.overDue;\r\n    else if (state === \"2\" || state === 2)\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    if (state === \"0\")\r\n    {\r\n        return text.available;\r\n    }\r\n    else if (state === \"1\")\r\n    {\r\n        return text.checkedOut;\r\n    }\r\n    else if (state === \"3\")\r\n    {\r\n        return text.overDue;\r\n    }\r\n    else\r\n    {\r\n        return text.notAvailable;\r\n    }\r\n}\r\n\r\nexport const compareRent = function(a1, a2)\r\n{\r\n    if (a1.rentDate > a2.rentDate)\r\n        return true;\r\n    else if (a1.rentDate < a2.rentDate)\r\n        return false;\r\n    return a1.title > a2.title;\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        users (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (limit: 20000, query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_data\n            user_id\n        }\n    }`;\n\nexport const HISTORY_PERIOD_QUERY = gql`\n    query findLogs ($fromTime: String!, $toTime: String!) {\n        rentLogs(limit: 20000, query: {AND: [{timestamp_gte: $fromTime}, {timestamp_lt: $toTime}]}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_data\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div id=\"noticeContent\">\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"noticeList\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        setPageNum(0);\n    }, [props.keyValue]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList, props.detail)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { MAX_SEARCH_ENTRY, getBookState, toUtf8 } from \"../Util\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ListView from \"../ListView\";\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(inputText, 300);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setInputText(id);\r\n            }\r\n            else\r\n            {\r\n                setInputText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    const obj = {\"params\": {\"book\": btoa(toUtf8(text)), \"match\":false}};\r\n                    console.log(obj);\r\n                    const response = await axios.get(url, obj);\r\n                    console.log(response)\r\n                    if (!(\"books\" in response.data.return))\r\n                        return results;\r\n                    const books = response.data.return.books;\r\n                    let retDate = \"\";\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        if (state === 1 || state === 3)\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAMENUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n\r\n                    for (let i = 0 ; i < bookList.length ; i++) {\r\n                        const row = bookList[i];\r\n                        if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                        if ((row.name && row.name.toString().includes(text)) ||\r\n                            (row.code === text))\r\n                        {\r\n                            let resultString = `${row.name} ${row.claim_num}`;\r\n                            let retDate = \"\";\r\n                            let state = \"0\";\r\n                            for (const entry of rentList)\r\n                            {\r\n                                if (entry.code === row.code)\r\n                                {\r\n                                    state = entry.state;\r\n                                    if (state === \"1\" || state === \"3\")\r\n                                    {\r\n                                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            let resultObject = {\r\n                                index: i,\r\n                                text: resultString,\r\n                                name: row.name,\r\n                                code: row.code.toString(),\r\n                                rent: getBookState(props.text, state),\r\n                                retDate: retDate,\r\n                                author: row.author,\r\n                                totalName: row.totalName,\r\n                                claim_num: row.claim_num,\r\n                                publish: row.publish,\r\n                                claim: row.claim\r\n                            };\r\n                            results.push(resultObject);\r\n                        }\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findBooks(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, bookList, rentList, props]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           bl.push({code: book._id, name: book.title, num: book.num, author: book.author, claim: book.claim,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(books.length);\r\n        setBookList(bl);\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\"> {result.text}</td>\r\n                        <td className=\"searchRent\"> {result.rent} </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr>\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName} <b>{result.name}</b> { result.claim_num} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.code} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim} </td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results)\r\n    {\r\n        return results.map((result) => showEntry(result))\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\">\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n            </div>\r\n            <ListView keyValue={searchQuery} list={searchResults} detail={selectedId} showCallback={(entries) => { return showEntries(entries); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, compareRent } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(() => {\r\n            async function func() {\r\n                console.log(\"User data updated \");\r\n                await compare();\r\n            }\r\n            func();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n            console.log(historyData);\r\n            let hist = [];\r\n            for (let i = 0 ; i < historyData.rentLogs.length ; i++)\r\n            {\r\n                const entry = historyData.rentLogs[i];\r\n                if (entry.book_state !== \"1\")\r\n                    continue;\r\n                if (! (\"return_data\" in entry) || ! entry.return_data)\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const title = props.doc.book[id][\"title\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                const retDate = entry.return_data;\r\n                hist.push({\"id\": id, \"title\": title, \"rentDate\": date, \"retDate\": retDate});\r\n\r\n            }\r\n            hist.sort(compareRent);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result, retText) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{retText}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        await compare();\r\n    }\r\n\r\n    const compare = async () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user);\r\n\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults, props.text.dueDate) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries, props.text.returnDate); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [userData, setUserData] = useState({});\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n//            console.log(props.doc.serverInfo);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(book)\r\n                            setBarcode(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                setState(State.LoggedOut);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n                setBarcode(\"\")\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (state !== State.LoggedIn)\r\n                setBarcode(userText);\r\n        }, [state, userText]\r\n    );\r\n\r\n    const updateUser = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const obj = {\"params\": {\"user\": userText, \"data\":\"nothing\"}};\r\n        console.log(obj);\r\n        const response = await axios.get(url, btoa(JSON.stringify(obj)));\r\n        const user = response.data.return;\r\n        setUserData(user);\r\n        console.log(user);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        console.log(\"LOGIN\");\r\n        console.log(userText);\r\n        if (userText.length === 0)\r\n            return;\r\n        setState(State.LoggingIn);\r\n        const id = userText.toUpperCase();\r\n        setUserId(id);\r\n        updateUser(id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Log Out\");\r\n        setUserData({});\r\n        setUserText(\"\");\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n        document.getElementById('barcodeScan').value= null;\r\n    }\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            console.log(url)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(response);\r\n                        console.log(book);\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            console.log(\"Failed\");\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR});\r\n                            setScannedBook({});\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            console.log(book.books)\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, bookText, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Barcode: \" + barcode);\r\n            if (barcode.length === 0)\r\n                return;\r\n            if (state !== State.LoggedIn)\r\n            {\r\n                setUserText(barcode);\r\n            }\r\n            else\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc, state]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n        document.getElementById('barcodeScan').value= null;\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE,\r\n                user: userId\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return\r\n            console.log(\"Rent confirmed\");\r\n            console.log(ret)\r\n\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.rentSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n            updateUser(userId);\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        document.getElementById('barcodeScan').value= null;\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"barcodeScan\" hidden>\r\n                        <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                        <span>\r\n                        <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                        </span>\r\n                    </label>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\">\r\n                        HK\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \": \" + scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.logOut} </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport axios from \"axios\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n//    const [initialized, setInitialized] = useState(false);\r\n//    const [userId, setUserId] = useState(\"\");\r\n//    const [state, setState] = useState(State.LoggedOut);\r\n//    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n//                     { \"variables\": { \"_id\": userId } });\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                axios.get(url).then( response => {\r\n                        const book = response.data.scan;\r\n                        if (book) {\r\n                            console.log(barcode + \" -> \" + book)\r\n                            setBarcode(book)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            if (bookText.length > 0)\r\n            {\r\n                const bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [searchQuery, bookText, props.doc]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const obj = {\"params\": {\"book\": bookId, \"match\": true}};\r\n                console.log(obj);\r\n                axios.get(url, obj).then( response => {\r\n                        const book = response.data.return;\r\n                        console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n                        if ('books' in book && 'BOOKNAME' in book.books)\r\n                        {\r\n                            setScannedBook(book.books)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        [barcode, props.doc]\r\n    );\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    function imageCaptured(e)\r\n    {\r\n        console.log(\"Image Captured\");\r\n        if (e.target.files && e.target.files.length > 0)\r\n        {\r\n            const file = e.target.files[0];\r\n            console.log(file)\r\n            console.log(file.type);\r\n//            setResult(file.type + \" \" + file.size.toString());\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/uploadImage\"\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.loading,\r\n                              \"type\": toast.TYPE.INFO})\r\n            getBase64(file).then(\r\n                img => {\r\n                    axios({\r\n                        method: \"post\",\r\n                        mode: 'no-cors',\r\n                        crossDomain: 'true',\r\n                        url: url,\r\n                        headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n                        },\r\n                        withCredentials: false,\r\n                        credentials: 'same-origin',\r\n                        data: {\r\n                            image: img\r\n                        }\r\n                    }).then( response => {\r\n                        const book = response.data.return\r\n                        console.log(book)\r\n                        if ('BOOKNAME' in book)\r\n                        {\r\n                            setScannedBook(book)\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.succeededToOpen,\r\n                                              \"type\": toast.TYPE.SUCCESS});\r\n                        }\r\n                        else\r\n                        {\r\n                            setNotifyRequest({\"id\": loadingId,\r\n                                              \"text\": props.text.INVALID_BOOK,\r\n                                              \"type\": toast.TYPE.ERROR})\r\n                            setScannedBook({})\r\n                            setBarcode(\"\")\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 1 || scannedBook._STATE === 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        axios({\r\n            method: \"post\",\r\n            mode: 'no-cors',\r\n            crossDomain: 'true',\r\n            url: url,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\r\n            },\r\n            withCredentials: false,\r\n            credentials: 'same-origin',\r\n            data: {\r\n                book: scannedBook.BARCODE\r\n            }\r\n        }).then( response => {\r\n            const ret = response.data.return;\r\n            console.log(ret);\r\n            if (ret === \"SUCCESS\")\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": props.text.returnSucceed,\r\n                                  \"type\": toast.TYPE.SUCCESS})\r\n            }\r\n            else\r\n            {\r\n                let text\r\n                if (ret in props.text)\r\n                    text = props.text[ret];\r\n                else\r\n                    text = props.text.NOT_AVAILABLE;\r\n                console.log(text)\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": toast.TYPE.ERROR})\r\n            }\r\n            setScannedBook({});\r\n            setBarcode(\"\")\r\n        });\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    <input type=\"file\" id=\"barcodeScanInput\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\">\r\n                        HK\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\" + scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toUtf8 } from \"./Util\";\nimport \"./UserInfo.css\";\n\nfunction UserInfo(props) {\n    const [needConfirm, setNeedConfirm] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(function() {\n        console.log(\"User Info\");\n        console.log(props.info);\n        document.getElementById('userName').value = props.info.USER_NAME;\n        document.getElementById('phone').value = props.info.PHONE_NUMBER;\n        document.getElementById('email').value = props.info.EMAIL;\n        document.getElementById('address').value = props.info.ADDRESS;\n        document.getElementById('notice_').value = props.info.NOTICE;\n        document.getElementById('user_level').value = props.info.USER_LEVEL;\n        setUserInfo({\"USER_CODE\": props.info.USER_CODE});\n        setDisabled(true);\n\n    }, [props.info]);\n\n    function setProperty(index, value)\n    {\n        console.log(index);\n        console.log(value);\n        var info = userInfo;\n        switch (index)\n        {\n        case 0:\n            info.USER_NAME = value;\n            break;\n        case 1:\n            info.PHONE_NUMBER = value;\n            break;\n        case 2:\n            info.EMAIL = value;\n            break;\n        case 3:\n            info.ADDRESS = value;\n            break;\n        case 4:\n            info.USER_LEVEL = value;\n            break;\n        case 5:\n            info.NOTICE = value;\n            break;\n        default:\n            break;\n        }\n        const length = Object.keys(info).length;\n        console.log(length);\n//        if (length >= 1 && \"USER_LEVEL\" in info && info.USER_LEVEL >= 0 && info.USER_LEVEL <= 2)\n        if (length > 1)\n            setDisabled(false);\n        setUserInfo(info);\n    }\n\n    function confirmAction()\n    {\n        console.log(\"Save modification\");\n        console.log(userInfo);\n        const ipAddr = props.doc.serverInfo.localIp;\n        const portNum = props.doc.serverInfo.port;\n        if (ipAddr.length === 0 || portNum <= 0)\n            return;\n\n        const url = \"https://\" + ipAddr + \":\" +\n            portNum + \"/user\";\n\n        var obj = {};\n        for (const key in userInfo)\n        {\n            obj[key] = btoa(toUtf8(userInfo[key]));\n        }\n        axios.post(url, obj).then( response => {\n            console.log(response);\n            props.refresh(response);\n        });\n        setNeedConfirm(false);\n    }\n\n    function cancelAction()\n    {\n        setNeedConfirm(false);\n    }\n\n    return (\n        <div>\n            <table><tbody>\n                <tr key=\"Name\">\n                    <td> {props.text.name} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"userName\" onChange={(event) => {setProperty(0, event.target.value);}} />\n                    </td>\n                </tr>\n                {\"REG_DATE\" in props.info &&\n                    <tr key=\"Register\">\n                        <td> {props.text.registeredDate} </td>\n                        <td colSpan=\"3\" className=\"data\">\n                            {props.info.REG_DATE}\n                        </td>\n                    </tr>\n                }\n                <tr key=\"Phone\">\n                    <td> {props.text.phone} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"phone\" onChange={(event) => {setProperty(1, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Email\">\n                    <td> {props.text.email} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"email\" onChange={(event) => {setProperty(2, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Address\">\n                    <td> {props.text.address} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"address\" onChange={(event) => {setProperty(3, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Notice\">\n                    <td> {props.text.notice_} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"notice_\" onChange={(event) => {setProperty(5, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Level\">\n                    <td> {props.text.level} </td>\n                    <td colSpan=\"3\" className=\"cell\">\n                        <select name=\"User Level\" id=\"user_level\" className=\"dropdown\" onChange={(event) => {setProperty(4, event.target.value);}}>\n                            <option value=\"0\"> {props.text.kid} </option>\n                            <option value=\"1\"> {props.text.adult} </option>\n                            <option value=\"2\"> {props.text.admin} </option>\n                        </select>\n                    </td>\n                </tr>\n            </tbody></table>\n           <button id=\"modify\" hidden={needConfirm} onClick={async () => setNeedConfirm(true)} disabled={disabled}> {props.text.save} </button>\n            <div id=\"checkModify\" hidden={!needConfirm}>\n                <div id=\"noticeMsg\"> {props.text.confirmSave} </div>\n                <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\n                <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\n            </div>\n        </div>\n    );\n}\nexport default UserInfo;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, MAX_SEARCH_ENTRY, getUserState, toUtf8 } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate, useParams } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport UserInfo from \"../UserInfo\";\r\nimport axios from \"axios\";\r\n\r\n//var rentList = [];\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 300);\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n//    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const { id } = useParams();\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                return;\r\n            }\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n\r\n            if (!props.doc.serverAvailable)\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id) => {\r\n        if (selectedRef.current === -1 || selectedRef.current !== id)\r\n        {\r\n            console.log(\"Select \" + id);\r\n//            setSelectedId(id);\r\n            selectedRef.current = id;\r\n            const rent = await props.doc.getRent(id);\r\n            console.log(\"Set Rent List\");\r\n            console.log(rent)\r\n            setRentList(rent);\r\n//            rentList = rent;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n//            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n            setRentList([]);\r\n//            rentList = [];\r\n        }\r\n    }\r\n\r\n    const showUser = (user, detail, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div key={key}>\r\n                    <table><tbody>\r\n                        <tr key={user.id} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user, detail) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result, detail) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, detail, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (user, detail) => {\r\n        console.log(\"Detail\");\r\n        console.log(user);\r\n        return (<>\r\n                    {props.doc.serverAvailable &&\r\n                        <UserInfo text={props.text} doc={props.doc} info={user} refresh={refresh}/>\r\n                    }\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        detail.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        detail.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a.name > b.name; });\r\n                console.log(results);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                const input = userText.trim()\r\n                console.log(\"Query \" + input + \" \" + searchQuery)\r\n                if (input.length > 0 && searchQuery) {\r\n\r\n                    let sr;\r\n                    if (props.doc.serverAvailable)\r\n                    {\r\n                        console.log(\"from CLIB\")\r\n                        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/users\";\r\n                        const obj = {\"params\": {\"user\": btoa(toUtf8(input))}};\r\n                        console.log(obj);\r\n                        const response = await axios.get(url, obj);\r\n                        const users = response.data.return.data;\r\n                        console.log(response.data.return);\r\n                        sr = [];\r\n                        if (users) {\r\n                            for (const entry of response.data.return.data)\r\n                            {\r\n                                console.log(entry);\r\n                                let user = entry;\r\n                                user.id = entry.USER_CODE;\r\n                                user.name = entry.USER_NAME;\r\n                                user.state = getUserState(props.text, entry.USER_STATE);\r\n                                user.rent = entry._RENT.length;\r\n                                sr.push(user);\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"from DB\")\r\n                        sr = await findUsers(searchQuery);\r\n                    }\r\n\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                   else\r\n                       selectId(0);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n       [searchQuery, props, userList, queryRequest, userText]\r\n    );\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView keyValue={searchQuery} list={searchResults} detail={rentList} showCallback={(entries, detail) => { return showUsers(entries, detail); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getBookState } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userList]\r\n    );\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        return a1.rentDate > a2.rentDate;\r\n    }\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.serverAvailable)\r\n        {\r\n            let results = [];\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": \"*\", \"match\":false}};\r\n//            console.log(obj);\r\n            const response = await axios.get(url, obj);\r\n//           console.log(response)\r\n//            if (!(\"books\" in response.data.return))\r\n//                return results;\r\n            const books = response.data.return.books;\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                const state = book._STATE;\r\n                if (state === 1 || state === 3)\r\n                {\r\n                    retDate = book.RETURN_DATE;\r\n                }\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: book.BOOKNAME,\r\n                    id: book.BARCODE,\r\n                    rent: getBookState(props.text, book.STATS.toString()),\r\n                    rentDate: book.LENT_DATE,\r\n                    retDate: retDate,\r\n                    author: book.AUTHOR,\r\n                    totalName: book.TOTAL_NAME,\r\n                    claim_num: book.CLAMENUM,\r\n                    publish: book.PUBLISH,\r\n                    claim: book.CLAIM,\r\n                    user: book.USER,\r\n                    userName: book.USER_NAME\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compare);\r\n            setRentList(results);\r\n        }\r\n        else\r\n        {\r\n\r\n            const rent = await props.doc.getRent();\r\n            console.log(\"Rent\");\r\n            console.log(rent);\r\n            rent.sort(compare);\r\n            for (const index in rent)\r\n            {\r\n                const userId = rent[index][\"user\"];\r\n                let userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                rent[index][\"userName\"] = userName;\r\n//                console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n            }\r\n            setRentList(rent);\r\n        }\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td colSpan=\"3\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"situation\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.situation}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue=\"\" list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport axios from \"axios\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n//    const [initialized, setInitialized] = useState(false);\r\n    const [fromTime, setFromTime] = useState(\"\");\r\n    const [toTime, setToTime] = useState(\"\");\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [loadHistory, {loading: historyLoading, data: historyData, error: historyError }] = useLazyQuery(HISTORY_PERIOD_QUERY,\r\n            {\"variables\": { \"fromTime\" : fromTime, \"toTime\": toTime}});\r\n    const [userList, setUserList] = useState({});\r\n    const [yearValue, setYear] = useState(0);\r\n    const [monthValue, setMonth] = useState(0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [searchQuery] = useDebounce(query, 300);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            var i;\r\n            var option;\r\n            var year = document.getElementById('year')\r\n            var month = document.getElementById('month')\r\n            for (i = 1; i <= 12 ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                month.add(option, i);\r\n            }\r\n            const thisYear = new Date().getFullYear();\r\n            const thisMonth = new Date().getMonth() + 1;\r\n            const fromYear = 2017;\r\n\r\n            for (i = fromYear ; i <= thisYear ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                year.add(option, i);\r\n            }\r\n\r\n            console.log(thisYear);\r\n            console.log(thisMonth);\r\n            setYear(thisYear);\r\n            setMonth(thisMonth);\r\n            document.getElementById('year').value = thisYear;\r\n            document.getElementById('month').value = thisMonth;\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n//                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\")\r\n\r\n            if (!historyData)\r\n                return\r\n\r\n//            console.log(historyData.rentLogs)\r\n\r\n            const books = historyData.rentLogs;\r\n            let results = [];\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const state = book.book_state;\r\n                if (state !== \"1\")\r\n                    continue\r\n                if (!book.return_data || book.return_data.length === 0)\r\n                    continue\r\n//                console.log(book)\r\n                const bookId = book.book_id;\r\n                const userId = book.user_id;\r\n                var userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                var bookInfo;\r\n                if (bookId in props.doc.book)\r\n                {\r\n                    bookInfo = props.doc.book[bookId];\r\n                }\r\n                else\r\n                {\r\n                    bookInfo = {}\r\n                    bookInfo.author = \"\"\r\n                    bookInfo.totalName = \"\"\r\n                    bookInfo.claim_num = \"\"\r\n                    bookInfo.publish = \"\"\r\n                    bookInfo.title = \"\"\r\n                }\r\n                const resultString = `${bookInfo.title} ${bookInfo.claim_num}`;\r\n                retDate = book.return_data;\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: bookInfo.title,\r\n                    id: bookId,\r\n                    rentDate: book.timestamp,\r\n                    retDate: retDate,\r\n                    author: bookInfo.author,\r\n                    claim_num: bookInfo.claim_num,\r\n                    publish: bookInfo.publisher,\r\n                    claim: bookInfo.claim,\r\n                    user: userId,\r\n                    userName: userName\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n//            console.log(results);\r\n            setRentList(results);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, historyLoading, historyError]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        }, [userList]\r\n    );\r\n*/\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        if (a1.rentDate > a2.rentDate)\r\n            return true;\r\n        else if (a1.rentDate < a2.rentDate)\r\n            return false;\r\n        return a1.title > a2.title;\r\n    }\r\n\r\n/*\r\n    async function updateDoc()\r\n    {\r\n        setInitialized(true);\r\n    }\r\n*/\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td colSpan=\"3\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n    function setProperty(index, value)\r\n    {\r\n        console.log(index);\r\n        console.log(value);\r\n        switch (index)\r\n        {\r\n            case 0:\r\n                setYear(value);\r\n                break;\r\n            case 1:\r\n                setMonth(parseInt(value));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(function () {\r\n        setQuery(yearValue.toString() + \"-\" + monthValue.toString().padStart(2, \"0\"))\r\n\r\n    }, [yearValue, monthValue]\r\n    );\r\n\r\n    useEffect(function () {\r\n        async function search()\r\n        {\r\n            console.log(\"Search\")\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/history\";\r\n                const obj = {\"params\": {\"period\": query}};\r\n                console.log(obj);\r\n                const response = await axios.get(url, obj);\r\n                console.log(response);\r\n\r\n                const books = response.data.return.books;\r\n                let results = [];\r\n                let retDate = \"\";\r\n                for (let i = 0 ; i < books.length ; i++)\r\n                {\r\n                    const book = books[i];\r\n                    const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                    if (\"RETURN_DATE\" in book)\r\n                    {\r\n                        retDate = book.RETURN_DATE;\r\n                    }\r\n                    let resultObject = {\r\n                        index: i,\r\n                        text: resultString,\r\n                        title: book.BOOKNAME,\r\n                        id: book.BARCODE,\r\n        //                rent: getBookState(props.text, book..toString()),\r\n                        rentDate: book.RENT_DATE,\r\n                        retDate: retDate,\r\n                        author: book.AUTHOR,\r\n                        totalName: book.TOTAL_NAME,\r\n                        claim_num: book.CLAMENUM,\r\n                        publish: book.PUBLISH,\r\n                        claim: book.CLAIM,\r\n                        user: book.USER,\r\n                        userName: book.USER_NAME\r\n                    };\r\n                    results.push(resultObject);\r\n                }\r\n                results.sort(compare);\r\n                setRentList(results);\r\n            }\r\n            else\r\n            {\r\n                var queryTo;\r\n                const nextMonth = monthValue + 1\r\n                queryTo = yearValue.toString() + \"-\" + nextMonth.toString().padStart(2, \"0\")\r\n                setFromTime(query)\r\n                setToTime(queryTo)\r\n                console.log(query)\r\n                console.log(queryTo)\r\n\r\n                try {\r\n                    await loadHistory();\r\n                }\r\n                catch (e)\r\n                {\r\n                    console.warn(e.name);\r\n                }\r\n\r\n    /*\r\n                for (const index in rent)\r\n                {\r\n                    const userId = rent[index][\"user\"];\r\n                    let userName;\r\n                    if (userList && userId in userList)\r\n                        userName = userList[userId].name;\r\n                    else\r\n                        userName = \"\"\r\n                    rent[index][\"userName\"] = userName;\r\n                    console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n                }\r\n                setRentList(rent);\r\n    */\r\n            }\r\n        }\r\n        search();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery]\r\n    );\r\n\r\n    function movePrev()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (month > 1)\r\n        {\r\n            month -= 1\r\n        }\r\n        else\r\n        {\r\n            year -= 1;\r\n            month = 12;\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    function moveNext()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (month < 12)\r\n        {\r\n            month += 1\r\n        }\r\n        else\r\n        {\r\n            year += 1\r\n            month = 1\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"searchRange\">\r\n                <div className=\"page\" id = \"page\">\r\n                    <NavigateBeforeIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {movePrev();} }/>\r\n                </div>\r\n                <select name=\"year\" id=\"year\" className=\"dropdown\" onChange={(event) => {setProperty(0, event.target.value);}}/>\r\n                <select name=\"month\" id=\"month\" className=\"dropdown\" onChange={(event) => {setProperty(1, event.target.value);}}/>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {moveNext();} }/>\r\n                    </div>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue={searchQuery} list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\n//import { useLazyQuery } from \"@apollo/client\";\r\nimport { Navigate } from 'react-router-dom'\r\n//import {USERS_QUERY} from \"../api/query.js\";\r\nimport UserInfo from \"../UserInfo\";\r\n\r\nfunction NewMember(props) {\r\n//    const [userText, setUserText] = useState(\"\");\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n//    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n//    const [userList, setUserList] = useState({});\r\n//    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized || !props.doc.serverAvailable)\r\n            {\r\n                return;\r\n            }\r\n            console.log(\"=======================================\");\r\n            console.log(\"NewMember initialize\");\r\n            prepareNewMember();\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n*/\r\n\r\n    function prepareNewMember()\r\n    {\r\n        var info = {};\r\n        info.USER_CODE = \"\";\r\n        info.USER_NAME = \"\";\r\n        info.PHONE_NUMBER = \"\";\r\n        info.EMAIL = \"\";\r\n        info.ADDRESS = \"\";\r\n        info.NOTICE = \"\";\r\n        info.USER_LEVEL = -1;\r\n        setUserInfo(info);\r\n    }\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n*/\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n\r\n        const prop = toastProp;\r\n        var text\r\n        if (response.data.return === \"OK\")\r\n        {\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            prepareNewMember()\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.autoClose = 3000;\r\n        toast.info(text, prop);\r\n    }\r\n    if (!props.doc.initialized || !props.doc.serverAvailable)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.newMember}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                {props.doc.serverAvailable &&\r\n                    <UserInfo text={props.text} doc={props.doc} info={userInfo} refresh={refresh}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMember;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n//        const response = await axios.get(\"https://ipv4.seeip.org/jsonip\");\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\")\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return;\r\n        return;\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            this.serverAvailable = true;\r\n            axios.get(query, {timeout: 1000})\r\n                .then( (response) => {\r\n                    console.log(\"Server connected\");\r\n                    console.log(response.data);\r\n                    this.admin = response.data.admin;\r\n                    this.initialized = true;\r\n                })\r\n                .catch(error => {\r\n                  const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n                  window.open(query);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        this.serverInfo = serverInfo;\r\n        console.log(this.serverInfo.globalIp);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = book;\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n//        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\")\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n//           console.log(userId);\r\n//           console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n                this.user[userId][\"rent\"] += 1;\r\n            else\r\n                this.user[userId][\"rent\"] = 1;\r\n        }\r\n        console.log(this.user);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\")\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    async getRent(userId = undefined) {\r\n        let ret = [];\r\n        if (this.serverAvailable) {\r\n            const url = \"https://\" + this.serverInfo.localIp + \":\" +\r\n                this.serverInfo.port + \"/book\";\r\n            const obj = {\"params\": {\"user\": userId}};\r\n            console.log(obj);\r\n            const result = await axios.get(url, obj);\r\n            console.log(result);\r\n            if (\"books\" in result.data.return)\r\n            {\r\n                // BARCODE, BOOKNAME, LENT_DATE, RETURN_DATE, STATS\r\n                // id, title, rentDate, retData,  stat\r\n                for (const entry of result.data.return.books)\r\n                {\r\n                    console.log(entry);\r\n                    const book = {'id': entry.BARCODE, 'title': entry.BOOKNAME, 'rentDate': entry.LENT_DATE, 'retDate': entry.RETURN_DATE, 'stat': entry.STATS}\r\n                    ret.push(book);\r\n                }\r\n//                ret = result.data.return.books;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Check \" + userId);\r\n            console.log(this.bookReady);\r\n            if (!this.bookReady)\r\n                return ret;\r\n    //        console.log(this.rent.length);\r\n            for (let i = 0 ; i < this.rent.length ; i++) {\r\n                const entry = this.rent[i];\r\n                if (userId !== undefined && entry.user_id !== userId)\r\n                    continue;\r\n    //            console.log(entry)\r\n                if (entry.state !== \"1\" && entry.state !== \"3\")\r\n                    continue;\r\n    //            console.log(entry);\r\n                const id = entry[\"book_id\"];\r\n                const book = this.book[id];\r\n    //            console.log(book)\r\n                let retEntry = {}\r\n                retEntry[\"id\"] = book._id\r\n                retEntry[\"title\"] = book.title\r\n                retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"user\"] = entry.user_id;\r\n                ret.push(retEntry)\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n        console.log(this.cookie);\n    }\n\n    checkLogIn(userData, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (userData.user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = userData.user.encrypted_email;\n            const phoneDb = userData.user.encrypted_phone;\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \" ; SameSite=Lax ;\" ;\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (dropdown !== props.dropdown)\r\n            {\r\n                console.log(\"User clicked \" + props.doc.logged);\r\n                console.log(props.dropdown);\r\n                setClick(!click);\r\n                setDropdown(props.dropdown);\r\n            }\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!click)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n        }, [props.dropdown, dropdown, click, props.doc.logged]\r\n    );\r\n\r\n    const logOut = () =>\r\n    {\r\n        setClick(false);\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (\r\n            <div id='dropdown-menu' onClick={() => { setClick(!click)}} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\" onClick={() => setClick(false)}>\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {props.doc.admin &&\r\n                    <>\r\n                    <hr className=\"hline\"/>\r\n                    <Link className='menu-items' to=\"/userSearch\" onClick={() => setClick(false)}>\r\n                        {props.text.userSearch}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentalSituation\" onClick={() => setClick(false)}>\r\n                        {props.text.situation}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentHistory\" onClick={() => setClick(false)}>\r\n                        {props.text.history}\r\n                    </Link>\r\n                    </>\r\n                }\r\n                {props.doc.serverAvailable && props.doc.admin &&\r\n                    <Link className='menu-items' to=\"/newMember\" onClick={() => setClick(false)}>\r\n                        {props.text.newMember}\r\n                    </Link>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items' onClick={() => logOut()}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\" onClick={() => setClick(false)}>\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar(props) {\r\n    const [dropdown, setDropdown] = useState(false)\r\n\r\n    const onClick = () => {\r\n        const maxWidth = document.getElementById(\"navbar\").style.maxWidth;\r\n        console.log(\"maxWidth\");\r\n        console.log(maxWidth);\r\n        console.log(document.getElementById(\"navbar\").style.width);\r\n        setDropdown(!dropdown);\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <div className='menu' onClick={onClick} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc} dropdown={dropdown}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentalSituation from \"./pages/RentalSituation\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\nimport NewMember from \"./pages/NewMember\";\r\n//import Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY, SERVER_QUERY} from \"./api/query.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n            setInitialized(true);\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n            console.log(\"Login check \" + context.cookie.password);\r\n            console.log(userData);\r\n            if (context.cookie.password && context.checkLogIn(userData, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(userData.user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n                doc.setRent(rentData.rents)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.books)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n\r\n            console.log(serverData);\r\n            console.log(initialized);\r\n            if (!serverData || !initialized)\r\n                return\r\n\r\n            console.log(\"Server info available\")\r\n            logMsg = logMsg + \"<p>Server info available</p>\";\r\n            console.log(serverData.serverInfo)\r\n            doc.setServerInfo(serverData.serverInfo)\r\n\r\n            if (!doc.serverAvailable)\r\n            {\r\n                console.log(\"Server is not available. Load books from cloud DB\");\r\n                loadBook();\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.LOADING;\r\n                prop.autoClose = false;\r\n                prop.toastId = loadingId;\r\n                toast.loading(textString.loading, prop);\r\n                doc.setLogCallback(updateLog);\r\n            }\r\n        }, [serverLoading, serverError, serverData, loadBook, initialized]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentalSituation\" element={<RentalSituation context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/newMember\" element={<NewMember context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}