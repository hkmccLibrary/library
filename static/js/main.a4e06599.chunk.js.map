{"version":3,"sources":["pages/Home.js","Util.js","api/query.js","pages/Notice.js","ListView.js","pages/Search.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","UserInfo.js","pages/UserSearch.js","pages/RentalSituation.js","pages/RentHistory.js","pages/NewMember.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","console","log","doc","setCallback","undefined","initialize","serverAvailable","id","className","to","text","checkOut","return","dangerouslySetInnerHTML","__html","homeText","SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","arguments","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getUserState","state","normal","overDue","stopped","getBookState","available","checkedOut","reserved","lost","damaged","given","notAvailable","deleted","compareRent","a1","a2","rentDate","title","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","BOOK_QUERY","gql","RENT_QUERY","USERS_QUERY","USER_QUERY","HISTORY_QUERY","HISTORY_BOOK_QUERY","HISTORY_PERIOD_QUERY","NOTICE_QUERY","CONTENT_QUERY","SERVER_QUERY","Notice","useState","searchResults","setSearchResults","displayedCodes","setDisplayedCodes","pageNum","setPageNum","selectedId","setSelectedId","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","useLazyQuery","loadSelected","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","date","colSpan","onClick","_id","notice","content","map","fontSize","sx","color","showCallback","ListView","itemList","setItemList","displayList","setDisplayList","list","keyValue","detail","initialized","Search","inputText","setInputText","bookList","setBookList","rentList","setRentList","setBookState","needConfirm","setNeedConfirm","queryRequest","toggleQueryRequest","bookId","setBookId","advancedSearch","setAdvancedSearch","author","setAuthor","fromId","setFromId","toId","setToId","fromDate","setFromDate","toDate","setToDate","stateFilter","setStateFilter","rentHistory","setRentHistory","useDebounce","searchQuery","loadHistory","historyData","selectedRef","useRef","needConfirmRef","bookStateRef","historyAvailable","useParams","compareBook","book1","book2","name","parseInt","claim_num","updateDoc","rl","rm","rented","rent","push","code","book_id","retDate","return_date","key","bl","books","book","num","claim","regDate","registration_date","totalName","series","category","publisher","publish","isbn","isOpen","findBooks","results","btoa","url","serverInfo","localIp","port","param","requestGet","response","resultString","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","resultObject","index","BARCODE","REG_DATE","AUTHOR","TOTAL_NAME","PUBLISH","CLAIM","ISBN","findBookLocally","sort","keyword","sr","current","query","history","rentLogs","book_state","pair","timestamp","selectId","setState","setSearchState","stateStr","value","document","getElementById","checked","filter","idx","element","ipAddr","portNum","obj","requestPost","hidden","entryId","flags","rowSpan","entry","showHistoryEntry","admin","disabled","confirmAction","confirm","cancel","setPeriod","from","row","toLowerCase","includes","bookSearch","placeholder","searchBook","onChange","event","target","type","advSearch","bookCode","registeredDate","date1","date2","dateStr1","getFullYear","getMonth","padStart","getDate","dateStr2","selectRange","all","a","b","search","entries","showEntries","State","LoggedOut","LoggingIn","LoggedIn","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","setHistory","autoLogin","setAutoLogin","loadUser","userData","expireDate","setExpireDate","setTitle","logged","userInfo","getRent","adminMode","userSearch","logIn","context","cookie","Date","setTime","getTime","days","toGMTString","compare","func","bookReady","rentReady","hist","split","retText","bookName","Fragment","showRented","noEntry","toUpperCase","toast","isActive","prop","checkLogIn","user","TYPE","SUCCESS","logInSucceed","ERROR","logInFail","render","toastId","update","info","idHolder","onInput","pwHolder","cookieString","toggleAutoLogin","dueDate","LoggingOut","CheckOut","bookText","setBookText","bookValue","barcode","setBarcode","notifyRequest","setNotifyRequest","setRented","setUserData","bookData","setBookData","navigate","useNavigate","prefixList","getElementsByName","prefix","interval","setInterval","scan","clearInterval","notify","RENTED","dismiss","getUserData","USER_CODE","inputId","substring","found","userValue","logOut","ret","rentSucceed","NOT_AVAILABLE","showBook","_bookId","setBookValue","htmlFor","pattern","inputMode","onKeyDown","setUserKeyDown","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","numberOnly","bookHolder","confirmRent","finish","Return","scannedBook","setScannedBook","returned","setReturned","returnSucceed","NOT_RENTED","confirmReturn","UserInfo","setDisabled","setUserInfo","setProperty","PHONE_NUMBER","EMAIL","ADDRESS","USER_LEVEL","NOTICE","Object","keys","refresh","phone","email","address","notice_","level","kid","adult","save","confirmSave","userLoading","userListData","userError","userList","setUserList","succeededToOpen","extend","users","setUser","getUser","extendCount","forceSelect","showUsers","showUser","findUsers","input","trim","RentHistory","RETURN_DATE","STATS","LENT_DATE","CLAMENUM","USER","userName","situation","fromTime","setFromTime","toTime","setToTime","historyLoading","historyError","yearValue","setYear","monthValue","setMonth","setQuery","year","month","option","createElement","add","thisYear","thisMonth","bookInfo","user_id","_RETURN_DATE","RENT_DATE","nextMonth","queryTo","warn","movePrev","moveNext","NewMember","prepareNewMember","newMember","regSuccess","regFail","Doc","userReady","logCallback","os","navigator","platform","axios","get","post","ip","checkServerIp","callback","checkState","checkRent","globalIp","proxy","_EXTEND_COUNT","retEntry","rent_date","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","join","decodeURIComponent","passwordTyped","matched","emailDb","phoneDb","sign","numberString","isNaN","DropDown","dropdown","setDropdown","close","window","addEventListener","menu","classList","remove","removeEventListener","home","checkOutStatus","Navbar","isMobile","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","serverLoading","serverError","serverData","loadBook","bookLoading","bookError","notifyInit","updateLog","process","APP_NAME","APP_VERSION","lang","languages","ts","kr","en","updateIpAddr","nothing","password","setRent","rents","setBook","setServerInfo","LOADING","setLogCallback","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","path","UserSearch","RentalSituation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","options","headers","Authorization","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.a4e06599.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    if (!props.doc.serverAvailable)\r\n    {\r\n        return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n    }\r\n    else\r\n    {\r\n        import(\"./PageServer.css\");\r\n        return (<div id=\"home\">\r\n                    <Link className='home-items' to=\"/checkOut\">\r\n                        {props.text.checkOut}\r\n                    </Link>\r\n                    <Link className='home-items' to=\"/return\">\r\n                        {props.text.return}\r\n                    </Link>\r\n                </div>);\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\" || state === 0)\r\n        return text.normal;\r\n    else if (state === \"1\" || state === 1)\r\n        return text.overDue;\r\n    else if (state === \"2\" || state === 2)\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    switch (state)\r\n    {\r\n        case \"0\":\r\n        case 0:\r\n            return text.available;\r\n        case \"1\":\r\n        case 1:\r\n            return text.checkedOut;\r\n        case \"2\":\r\n        case 2:\r\n            return text.reserved;\r\n        case \"3\":\r\n        case 3:\r\n            return text.overDue;\r\n        case \"4\":\r\n        case 4:\r\n            return text.lost;\r\n        case \"5\":\r\n        case 5:\r\n            return text.damaged;\r\n        case \"6\":\r\n        case 6:\r\n            return text.given;\r\n        case \"7\":\r\n        case 7:\r\n        default:\r\n            return text.notAvailable;\r\n        case \"8\":\r\n        case 8:\r\n            return text.deleted;\r\n    }\r\n}\r\n\r\nexport const compareRent = function(a1, a2)\r\n{\r\n    if (a1.rentDate > a2.rentDate)\r\n        return true;\r\n    else if (a1.rentDate < a2.rentDate)\r\n        return false;\r\n    return a1.title > a2.title;\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n            registration_date\n            isbn\n            deleted\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        users (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (limit: 20000, query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const HISTORY_BOOK_QUERY = gql`\n    query findLogs($book_id: String!){\n        rentLogs (limit: 20000, query: {book_id: $book_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const HISTORY_PERIOD_QUERY = gql`\n    query findLogs ($fromTime: String!, $toTime: String!) {\n        rentLogs(limit: 20000, query: {AND: [{timestamp_gte: $fromTime}, {timestamp_lt: $toTime}]}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n            proxy\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div id=\"noticeContent\">\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"noticeList\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        setPageNum(0);\n    }, [props.keyValue]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList, props.detail)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { MAX_SEARCH_ENTRY, getBookState, toUtf8 } from \"../Util\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport {HISTORY_BOOK_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport Calendar from \"react-calendar\";\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const [bookState, setBookState] = useState(0);\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n\r\n    const [bookId, setBookId] = useState(\"\");\r\n\r\n    const [advancedSearch, setAdvancedSearch] = useState(false);\r\n\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [fromId, setFromId] = useState(\"\");\r\n    const [toId, setToId] = useState(\"\");\r\n    const [fromDate, setFromDate] = useState(\"\");\r\n    const [toDate, setToDate] = useState(\"\");\r\n\r\n    const [stateFilter, setStateFilter] = useState(0);\r\n    const [rentHistory, setRentHistory] = useState([]);\r\n\r\n    const [searchQuery] = useDebounce(inputText, 300);\r\n    const [loadHistory, {data: historyData}] = useLazyQuery(HISTORY_BOOK_QUERY,\r\n            {\"variables\": { \"book_id\": bookId }});\r\n    const selectedRef = useRef(\"0\");\r\n    const needConfirmRef = useRef(false);\r\n    const bookStateRef = useRef(0);\r\n    const historyAvailable = useRef(false);\r\n    const { id } = useParams();\r\n\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                console.log(\"Set Book ID \" + id);\r\n //               setInputText(id);\r\n                setBookId(id);\r\n                loadHistory();\r\n            }\r\n            else\r\n            {\r\n//                setInputText(\"\");\r\n                setBookId(\"\");\r\n            }\r\n        }, [id, loadHistory]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    console.log(\"=======================\");\r\n                    console.log(\"Request book list\");\r\n                    const param = {\"book\": btoa(toUtf8(text)), \"match\":false};\r\n                    const response = await props.doc.requestGet(url, param);\r\n                    console.log(response)\r\n                    if (!(\"books\" in response.data.return))\r\n                        return results;\r\n                    const books = response.data.return.books;\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        let retDate = \"\";\r\n                        if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            regDate: book.REG_DATE,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAIMNUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM,\r\n                            state: book._STATE,\r\n                            isbn: book.ISBN\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    results = findBookLocally(text, bookList);\r\n                }\r\n                results.sort(compareBook);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                console.log(\"Refresh\");\r\n                if (advancedSearch) {\r\n                    return;\r\n                }\r\n                var keyword;\r\n                if (bookId !== \"\")\r\n                    keyword = bookId;\r\n                else\r\n                    keyword = searchQuery;\r\n                console.log(keyword)\r\n                if (keyword) {\r\n                    let sr = await findBooks(keyword);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery, bookId, bookList, rentList, props, queryRequest, advancedSearch]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\");\r\n            console.log(historyData);\r\n            if (!historyData)\r\n            {\r\n                setRentHistory([])\r\n                historyAvailable.current = false;\r\n                return;\r\n            }\r\n            let history = [];\r\n            for (let i = 0 ; i < historyData.rentLogs.length ; i++)\r\n            {\r\n                const rent = historyData.rentLogs[i];\r\n                if (rent.book_state !== 1)\r\n                    continue;\r\n                let pair = [rent.timestamp];\r\n                if ( \"return_date\" in rent)\r\n                    pair.push(rent.return_date)\r\n                else\r\n                    pair.push(rent.return_date)\r\n                history.push(pair);\r\n            }\r\n            console.log(history.length);\r\n            setRentHistory(history);\r\n            historyAvailable.current = (history.length > 0);\r\n        },\r\n        [historyData]\r\n    );\r\n\r\n    function compareBook(book1, book2)\r\n    {\r\n        if (book1.name > book2.name)\r\n            return true;\r\n        else if (book1.name < book2.name)\r\n            return false\r\n        const claim1 = parseInt(book1.claim_num);\r\n        const claim2 = parseInt(book2.claim_num);\r\n        if (claim1 > claim2)\r\n            return true\r\n        else\r\n            return false\r\n    }\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        let rm = {};\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n           rm[rented[i].book_id] = rented[i].state;\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           const state = (key in rm) ? rm[key] : 0;\r\n           bl.push({code: book._id, name: book.title, state: state, num: book.num, author: book.author, claim: book.claim,\r\n                    regDate: book.registration_date,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher, isbn: book.isbn, deleted: book.deleted});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(bl.length);\r\n        setBookList(bl);\r\n\r\n        console.log(bookId);\r\n        if (bookId !== \"\")\r\n        {\r\n            console.log(\"Load history\");\r\n            loadHistory();\r\n        }\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (searchResults.length === 1 || selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    function setState(state)\r\n    {\r\n        console.log(\"Set state \" + state.toString());\r\n        needConfirmRef.current = true;\r\n        setNeedConfirm(true);\r\n        setBookState(state);\r\n        bookStateRef.current = state;\r\n        console.log(selectedId.toString() + needConfirmRef.current);\r\n    }\r\n\r\n    function setSearchState(state)\r\n    {\r\n        const stateStr = state.toString()\r\n        const value = document.getElementById(stateStr).checked;\r\n        console.log(\"Set Search state \" + stateStr + \" Value: \" + value);\r\n        if (stateStr === \"1023\")\r\n        {\r\n            document.getElementById(\"1023\").checked = value;\r\n            document.getElementById(\"0\").checked = value;\r\n            document.getElementById(\"1\").checked = value;\r\n            document.getElementById(\"3\").checked = value;\r\n            document.getElementById(\"4\").checked = value;\r\n            document.getElementById(\"5\").checked = value;\r\n            document.getElementById(\"6\").checked = value;\r\n            document.getElementById(\"7\").checked = value;\r\n            document.getElementById(\"8\").checked = value;\r\n        }\r\n        else\r\n        {\r\n            document.getElementById(stateStr).checked = value;\r\n        }\r\n\r\n        var filter = 0;\r\n        for (var i = 0 ; i < 9 ; i++)\r\n        {\r\n            const idx = i.toString();\r\n            const element = document.getElementById(idx);\r\n            if (element)\r\n                filter |= (element.checked) ? (1 << i) : 0;\r\n        }\r\n        setStateFilter(filter);\r\n        console.log(\"Filter: \" + filter.toString());\r\n    }\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/book\";\r\n        var obj = {};\r\n        obj[\"book\"] = selectedRef.current;\r\n        obj[\"state\"] = bookStateRef.current;\r\n        console.log(\"=======================\");\r\n        console.log(\"Change book state\");\r\n        await props.doc.requestPost(url, obj);\r\n\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n    }\r\n\r\n    const showHistoryEntry = (entry) => {\r\n        return (<tr key={entry[0]}><td key={entry[0] + \"x\"}>{entry[0]}</td><td>{entry[1]}</td></tr>);\r\n    }\r\n\r\n    const showEntry = (result, detail) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        const flags = [false, false, false, false, false, false, false, false, false, false]\r\n        flags[result.state] = true;\r\n        if (result.state === 1 || result.state === 2 || result.state === 3)\r\n            flags[0] = true;\r\n//        if (!hidden)\r\n//        {\r\n//            console.log(detail);\r\n//            console.log(flags);\r\n//        }\r\n        const rentHistory = detail[2];\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\">{result.text}</td>\r\n                        <td className=\"searchRent\">{result.rent}</td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr key=\"row1\">\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName + \" \"}<b>{result.name}</b>{\" \" + result.claim_num}</td>\r\n                </tr>\r\n                <tr key=\"row2\">\r\n                    <td>\r\n                        <Link to={\"/search/\"+result.code}>{result.code}</Link>\r\n                    </td>\r\n                </tr>\r\n                <tr key=\"row3\">\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim}</td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n                <table className=\"rentHistory\" hidden={!historyAvailable.current}><tbody>\r\n                    <tr id=\"titles\"><td>{props.text.rentDate}</td><td>{props.text.returnDate}</td></tr>\r\n                    {rentHistory.map(entry => showHistoryEntry(entry))}\r\n                </tbody></table>\r\n                <div hidden={!props.doc.serverAvailable || !props.doc.admin}>\r\n                    <button className=\"bookStates\" id = \"0\" disabled={flags[0]} onClick={() => setState(0)}> {props.text.available} </button>\r\n                    <button className=\"bookStates\" id = \"4\" disabled={flags[4]} onClick={() => setState(4)}> {props.text.lost} </button>\r\n                    <button className=\"bookStates\" id = \"5\" disabled={flags[5]} onClick={() => setState(5)}> {props.text.damaged} </button>\r\n                    <button className=\"bookStates\" id = \"6\" disabled={flags[6]} onClick={() => setState(6)}> {props.text.given} </button>\r\n                    <button className=\"bookStates\" id = \"7\" disabled={flags[7]} onClick={() => setState(7)}> {props.text.notAvailable} </button>\r\n                    <button className=\"bookStates\" id = \"8\" disabled={flags[8]} onClick={() => setState(8)}> {props.text.deleted} </button>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirmRef.current}>\r\n                    <div id=\"bookName\"> {getBookState(props.text, bookStateRef.current)} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results, detail)\r\n    {\r\n        console.log(\"Redraw \" + needConfirmRef.current);\r\n        console.log(historyAvailable.current);\r\n        console.log(detail);\r\n        return results.map((result) => showEntry(result, detail))\r\n    }\r\n\r\n    function setPeriod(from, text)\r\n    {\r\n        if (from)\r\n            setFromId(text)\r\n        else\r\n            setToId(text)\r\n    }\r\n\r\n    function findBookLocally(keyword, bookList)\r\n    {\r\n        let results = [];\r\n        console.log(advancedSearch);\r\n        for (let i = 0 ; i < bookList.length ; i++) {\r\n            const row = bookList[i];\r\n            if (results.length >= MAX_SEARCH_ENTRY) break;\r\n\r\n            const text = keyword.toLowerCase();\r\n            if (text.length > 0 &&\r\n                (!row.name || !row.name.toString().toLowerCase().includes(text)) &&\r\n                (!row.totalName || !row.totalName.toString().toLowerCase().includes(text)) &&\r\n                (!row.author || !row.author.toString().toLowerCase().includes(text)) &&\r\n                row.code !== text && row.isbn !== text)\r\n                continue\r\n            if (row.deleted && row.deleted === \"Y\")\r\n                continue\r\n            console.log(row)\r\n\r\n            if (advancedSearch)\r\n            {\r\n                if (author.length > 0 && row.author && !row.author.toString().toLowerCase().includes(author.toLowerCase()))\r\n                    continue;\r\n\r\n                if (fromId.length > 0 && row.code < fromId)\r\n                    continue;\r\n\r\n                if (toId.length > 0 && row.code > toId)\r\n                    continue;\r\n\r\n                const regDate = row.regDate;\r\n\r\n                if (regDate < fromDate || regDate > toDate)\r\n                    continue;\r\n                console.log(row);\r\n                console.log(regDate);\r\n                console.log(regDate < fromDate);\r\n                console.log(regDate > toDate);\r\n\r\n                if (!((1<<row.state) & stateFilter))\r\n                    continue;\r\n            }\r\n            else if (text.length === 0)\r\n                continue;\r\n\r\n            let resultString = `${row.name} ${row.claim_num}`;\r\n            let retDate = \"\";\r\n            let state = \"0\";\r\n            for (const entry of rentList)\r\n            {\r\n                if (entry.code === row.code)\r\n                {\r\n                    state = entry.state;\r\n                    if (state === \"1\" || state === \"3\")\r\n                    {\r\n                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            let resultObject = {\r\n                index: i,\r\n                text: resultString,\r\n                name: row.name,\r\n                code: row.code.toString(),\r\n                rent: getBookState(props.text, state),\r\n                retDate: retDate,\r\n                regDate: row.regDate,\r\n                author: row.author,\r\n                totalName: row.totalName,\r\n                claim_num: row.claim_num,\r\n                publish: row.publish,\r\n                claim: row.claim,\r\n                state: parseInt(state),\r\n                isbn: row.isbn\r\n            };\r\n            results.push(resultObject);\r\n//            console.log(resultObject);\r\n        }\r\n        console.log(results.length);\r\n\r\n        return results;\r\n    }\r\n\r\n    function onChangeDate(date)\r\n    {\r\n        console.log(date);\r\n        const date1 = date[0]\r\n        const date2 = date[1]\r\n        const y1 = date1.getFullYear().toString();\r\n        const m1 = (date1.getMonth() + 1).toString().padStart(2, \"0\")\r\n        const d1 = date1.getDate().toString().padStart(2, \"0\");\r\n        const dateStr1 = y1 + \"-\" + m1 + \"-\" + d1;\r\n        console.log(dateStr1);\r\n        setFromDate(dateStr1);\r\n\r\n        const y2 = date2.getFullYear().toString();\r\n        const m2 = (date2.getMonth() + 1).toString().padStart(2, \"0\")\r\n        const d2 = date2.getDate().toString().padStart(2, \"0\");\r\n        const dateStr2 = y2 + \"-\" + m2 + \"-\" + d2;\r\n        console.log(dateStr2);\r\n        setToDate(dateStr2);\r\n    }\r\n\r\n    function searchEntry()\r\n    {\r\n        console.log(\"Search\");\r\n        console.log(fromId);\r\n        console.log(toId);\r\n        console.log(fromDate);\r\n        console.log(toDate);\r\n        let results = findBookLocally(inputText, bookList);\r\n        results.sort(function(a,b) { return a['code'] > b['code']; });\r\n\r\n        let sr = results;\r\n        if (sr.length > 0)\r\n            setSearchResults(sr);\r\n        else\r\n            setSearchResults([]);\r\n        if (sr.length === 1)\r\n            selectedRef.current = sr[0].code;\r\n    }\r\n\r\n    function toggleAdvancedSearch()\r\n    {\r\n        setAdvancedSearch(!advancedSearch);\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\" hidden={bookId !== \"\"}>\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n                    <div hidden={!props.doc.admin}>\r\n                        <input type=\"checkbox\" id=\"advancedSearch\" checked={advancedSearch} onChange={() => toggleAdvancedSearch()}/>\r\n                        <label>\r\n                            {props.text.advSearch}\r\n                        </label>\r\n                    </div>\r\n                <div hidden={!advancedSearch}>\r\n                    <div>\r\n                    <label> {props.text.author} </label>\r\n                    <input type=\"text\" id=\"author\" onChange={(event) => {setAuthor(event.target.value)}} />\r\n                    </div>\r\n                    <div>\r\n                    <label> {props.text.bookCode} </label>\r\n                    <input type=\"text\" id=\"fromPeriod\" onChange={(event) => {setPeriod(true, event.target.value);}} />\r\n                    <label> ~  </label>\r\n                    <input type=\"text\" id=\"toPeriod\" onChange={(event) => {setPeriod(false, event.target.value);}} />\r\n                    </div>\r\n                    <div>\r\n                    <label> {props.text.registeredDate} </label>\r\n                    <Calendar onChange={onChangeDate} selectRange={true}/>\r\n                    </div>\r\n                    <div>\r\n                    <table><tbody>\r\n                        <tr key=\"stateName\" className=\"bookData\">\r\n                            <td className =\"stateName\">{props.text.all}</td>\r\n                            <td className =\"stateName\">{props.text.available}</td>\r\n                            <td className =\"stateName\">{props.text.checkedOut}</td>\r\n                            <td className =\"stateName\">{props.text.overDue}</td>\r\n                            <td className =\"stateName\">{props.text.lost}</td>\r\n                            <td className =\"stateName\">{props.text.damaged}</td>\r\n                            <td className =\"stateName\">{props.text.given}</td>\r\n                            <td className =\"stateName\">{props.text.notAvailable}</td>\r\n                            <td className =\"stateName\">{props.text.deleted}</td>\r\n                        </tr>\r\n                        <tr key=\"stateButton\" className=\"bookData\">\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1023\" onChange={() => setSearchState(1023)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"0\" onChange={() => setSearchState(0)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1\" onChange={() => setSearchState(1)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"3\" onChange={() => setSearchState(3)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"4\" onChange={() => setSearchState(4)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"5\" onChange={() => setSearchState(5)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"6\" onChange={() => setSearchState(6)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"7\" onChange={() => setSearchState(7)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"8\" onChange={() => setSearchState(8)}/>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                    </div>\r\n                    <div>\r\n                    <button id=\"searchEntry\" onClick={searchEntry}> {props.text.search} </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ListView keyValue={searchQuery} list={searchResults} detail={[selectedId, needConfirm, rentHistory]} showCallback={(entries, detail) => { return showEntries(entries, detail); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, compareRent } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\n//import {USER_QUERY, HISTORY_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(() => {\r\n            async function func() {\r\n                console.log(\"User data updated \");\r\n                await compare();\r\n            }\r\n            func();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n            let hist = [];\r\n            const rentLogs = historyData.rentLogs;\r\n//            const rentLogs = historyData.rentLog_tests;\r\n            for (let i = 0 ; i < rentLogs.length ; i++)\r\n            {\r\n                const entry = rentLogs[i];\r\n                if (entry.book_state !== \"1\" && entry.book_state !== 1)\r\n                    continue;\r\n                if (! (\"return_date\" in entry) || ! entry.return_date)\r\n                    continue;\r\n                console.log(entry);\r\n                const id = entry.book_id;\r\n                const title = (id in props.doc.book) ? props.doc.book[id].title : \"N/A\";\r\n                const date = entry.timestamp.split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                const retDate = entry.return_date;\r\n                const claim = (id in props.doc.book) ? props.doc.book[id].claim : \"N/A\";\r\n                hist.push({\"id\": id, \"title\": title, \"rentDate\": date, \"retDate\": retDate, \"claim\": claim});\r\n\r\n            }\r\n            hist.sort(compareRent);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const claim = rent[\"claim\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n//        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result, retText) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{retText}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        await compare();\r\n    }\r\n\r\n    const compare = async () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData.user, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user);\r\n\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults, props.text.dueDate) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries, props.text.returnDate); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\n//import CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userId, setUserId] = useState(\"\");\r\n\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [bookValue] = useDebounce(bookText, 500);\r\n    const [bookId, setBookId] = useState(\"\");\r\n\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n\r\n    const [rented, setRented] = useState([]);\r\n    const [userData, setUserData] = useState({});\r\n    const [bookData, setBookData] = useState({});\r\n    const [state, setState] = useState(State.LoggedOut);\r\n\r\n    const { id } = useParams();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n            const prefixList = document.getElementsByName(\"idPrefix\");\r\n            for (var i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                const prefix = prefixList[i].id\r\n                if (\"AB\" === prefix)\r\n                    prefixList[i].checked = true\r\n                else\r\n                    prefixList[i].checked = false\r\n\r\n            }\r\n            console.log(\"ID: \" + id);\r\n            if (id && id.length !== 0)\r\n            {\r\n//                setBarcode(id)\r\n                setUserId(id);\r\n                logIn(id);\r\n            }\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n//            console.log(props.doc.serverInfo);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            if (props.doc.admin)\r\n                return;\r\n            import(\"./PageServer.css\");\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                const response = await props.doc.requestGet(url, {});\r\n                const code = response.data.scan;\r\n                if (code) {\r\n                    console.log(code)\r\n                    console.log(state)\r\n                    setBarcode(code)\r\n                }\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!barcode)\r\n                return;\r\n            console.log(\"Updated barcode: \" + barcode);\r\n            console.log(\"state : \" + state);\r\n            if (state === State.LoggedIn)\r\n                setBookId(barcode);\r\n            else if (state === State.LoggedOut)\r\n                logIn(barcode);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [barcode]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                console.log(\"Set state to LoggedIn from \" + state);\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                console.log(\"Set state to LoggedOut from \" + state);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n                setState(State.LoggedOut);\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in bookData)\r\n            {\r\n                if (bookData._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n//                setBarcode(\"\")\r\n                setBookId(\"\");\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            if (state === State.LoggedIn)\r\n                return;\r\n\r\n            const prefixList = document.getElementsByName(\"idPrefix\");\r\n            var prefix = \"\"\r\n            for (var i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                if (prefixList[i].checked)\r\n                    prefix = prefixList[i].id\r\n                    console.log(\"Pressed [\" + i.toString() + \" \" + prefix + \"]\")\r\n\r\n            }\r\n            let _userId;\r\n            if (userValue[0] === \"A\" || userValue[0] === \"a\")\r\n                _userId = userValue;\r\n            else\r\n                _userId = prefix + userValue;\r\n//                setBarcode(_userId);\r\n            setUserId(_userId);\r\n\r\n        }, [state, userValue]\r\n    );\r\n*/\r\n\r\n    const getUserData = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const param = {\"user\": userText, \"data\":\"nothing\"};\r\n        const response = await props.doc.requestGet(url, param);\r\n        const user = response.data.return;\r\n\r\n        setUserData(user);\r\n        console.log(user);\r\n        setUserId(user.USER_CODE);\r\n    }\r\n\r\n    const logIn = async (inputId = undefined) => {\r\n        var userId;\r\n        var prefix = \"\";\r\n        var i;\r\n        const prefixList = document.getElementsByName(\"idPrefix\");\r\n        if (inputId)\r\n        {\r\n            if (inputId.length <= 2)\r\n                return;\r\n            prefix = inputId.substring(0, 2);\r\n            var found = false;\r\n            for (i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                if (prefix === prefixList[i].id)\r\n                {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found)\r\n                return;\r\n            userId = inputId;\r\n        }\r\n        else\r\n        {\r\n            const userValue = document.getElementById('userInput').value;\r\n            for (i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                if (prefixList[i].checked)\r\n                    prefix = prefixList[i].id\r\n                    console.log(\"Pressed [\" + i.toString() + \" \" + prefix + \"]\")\r\n\r\n            }\r\n            if (userValue[0] === \"A\" || userValue[0] === \"a\")\r\n                userId = userValue;\r\n            else\r\n                userId = prefix + userValue;\r\n        }\r\n        console.log(\"LOGIN\");\r\n        console.log(userId);\r\n        if (userId.length === 0)\r\n            return;\r\n        console.log(\"Set state to LoggingIn from \" + state );\r\n        setState(State.LoggingIn);\r\n        const _id = userId.toUpperCase();\r\n        getUserData(_id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Finish\")\r\n        setUserData({});\r\n        setBookData({});\r\n//        setBarcode(\"\");\r\n        setUserId(\"\");\r\n        setBookId(\"\");\r\n        setRented([])\r\n        navigate(\"/\")\r\n    }\r\n\r\n/*\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n*/\r\n\r\n    useEffect(() => {\r\n        async function setBookValue() {\r\n            if (bookValue.length <= 0)\r\n                return;\r\n            var _bookId;\r\n            if (props.doc.admin)\r\n                _bookId = bookValue;\r\n            else\r\n                _bookId = \"HK\" + bookValue;\r\n            console.log(\"Search book1 \" + _bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(_bookId)), \"match\": true}};\r\n            const param = {\"book\": _bookId, \"match\": true};\r\n            const response = await props.doc.requestGet(url, param);\r\n            const book = response.data.return;\r\n            console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n            if ('books' in book && 'BOOKNAME' in book.books)\r\n            {\r\n                console.log(book.books)\r\n                setBookData(book.books)\r\n            }\r\n        }\r\n        setBookValue()\r\n    }, [bookValue, props.doc]);\r\n\r\n    useEffect(() => {\r\n        async function setBookId() {\r\n            console.log(\"Set bookId: \" + bookId);\r\n            if (bookId.length === 0)\r\n                return;\r\n            console.log(\"Search book2 \" + bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n            const param = {\"book\": bookId, \"match\": true};\r\n            const response = await props.doc.requestGet(url, param);\r\n            const book = response.data.return;\r\n            console.log(book)\r\n            if ('books' in book && 'BOOKNAME' in book.books)\r\n            {\r\n                setBookData(book.books)\r\n            }\r\n        }\r\n        setBookId();\r\n    }, [bookId, props.doc]);\r\n\r\n    useEffect(() => {\r\n        async function setUserId() {\r\n            console.log(\"Set userId: \" + userId);\r\n            if (!userId || userId.length === 0)\r\n                return;\r\n            if (userId.search(\"AA\") === 0 || userId.search(\"AB\") === 0 )\r\n            {\r\n                const prefixList = document.getElementsByName(\"idPrefix\");\r\n                const prefix = userId.substring(0, 2);\r\n                for (var i = 0 ; i < prefixList.length ; i++)\r\n                {\r\n                    const id = prefixList[i].id\r\n                    if (prefix === id)\r\n                        prefixList[i].checked = true\r\n                    else\r\n                        prefixList[i].checked = false\r\n\r\n                }\r\n            }\r\n        }\r\n    setUserId();\r\n    }, [userId]);\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(bookData);\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        const param = {\r\n            book: bookData.BARCODE,\r\n            user: userId\r\n        };\r\n        const response = await props.doc.requestPost(url, param);\r\n        const ret = response.data.return\r\n        console.log(\"Rent confirmed\");\r\n        console.log(ret)\r\n\r\n        if (ret === \"SUCCESS\")\r\n        {\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.rentSucceed,\r\n                              \"type\": toast.TYPE.SUCCESS})\r\n            rented.push({\"id\": bookData.BARCODE, \"name\": bookData.BOOKNAME})\r\n            console.log(rented)\r\n            setRented(rented)\r\n        }\r\n        else\r\n        {\r\n            let text\r\n            if (ret in props.text)\r\n                text = props.text[ret];\r\n            else\r\n                text = props.text.NOT_AVAILABLE;\r\n            console.log(text)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": text,\r\n                              \"type\": toast.TYPE.ERROR})\r\n        }\r\n        setBookData({});\r\n//        setBarcode(\"\");\r\n        setBookId(\"\");\r\n        getUserData(userId);\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n    /*\r\n        return (<React.Fragment key={index + \"Fragment\"}>\r\n                    <tr key={index}>\r\n                        <td className=\"bookCell\"> {rent.id} </td>\r\n                        <td colSpan=\"3\" className=\"bookCell\"> {rent.name} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    */\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    <div id=\"dueDate\">\r\n                    {props.text.dueDate} : {props.doc.dueDate}\r\n                    </div>\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n    /*\r\n                    <table><tbody>\r\n                        {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                    </tbody></table>\r\n    */\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setBookData({});\r\n//        setBarcode(\"\")\r\n        setBookId(\"\");\r\n    }\r\n\r\n    function setUserKeyDown(event)\r\n    {\r\n        if (event.key === \"Enter\")\r\n        {\r\n            console.log(event);\r\n            console.log(document.getElementById('userInput').value);\r\n            logIn();\r\n        }\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"radio\" id = \"AA\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AA\" className=\"idPrefix\" name=\"idPrefix\"> AA </label>\r\n                <input type=\"radio\" id = \"AB\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AB\" className=\"idPrefix\" name=\"idPrefix\"> AB </label>\r\n                <input type=\"text\" id=\"userInput\" pattern=\"[0-9]*\" inputMode=\"numeric\"\r\n                    placeholder={props.text.idHolder}\r\n                    onKeyDown={(event) => {\r\n                        setUserKeyDown(event);\r\n                    }}/>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"bookInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {bookData.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {bookData.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={async () => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {rented.length > 0 &&\r\n                    <ListView list={rented} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n            <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.finish} </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n//    const [initialized, setInitialized] = useState(false);\r\n//    const [userId, setUserId] = useState(\"\");\r\n//    const [state, setState] = useState(State.LoggedOut);\r\n//    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n//                     { \"variables\": { \"_id\": userId } });\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [returned, setReturned] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            if (props.doc.admin)\r\n                return;\r\n            import(\"./PageServer.css\")\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                const response = await props.doc.requestGet(url, {});\r\n                const book = response.data.scan;\r\n                if (book) {\r\n                    console.log(book.search(\"HK\"))\r\n                    if (book.search(\"HK\") === 0) {\r\n                        console.log(barcode + \" -> \" + book)\r\n                        setBarcode(book)\r\n                    }\r\n                }\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    useEffect(() => {\r\n        async function setBookId() {\r\n            if (bookText.length > 0)\r\n            {\r\n                var bookId;\r\n                if (props.doc.admin)\r\n                    bookId = bookText;\r\n                else\r\n                    bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        }\r\n        setBookId();\r\n    }, [searchQuery, props.doc, bookText]);\r\n\r\n    useEffect(() => {\r\n        async function setBarcode()  {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                console.log(book)\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        }\r\n        setBarcode();\r\n    }, [barcode, props.doc]);\r\n\r\n/*\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 1 || scannedBook._STATE === 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Returned updated\");\r\n            console.log(returned);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            console.log(\"Update return list\");\r\n            const bookId = \"HK\" + bookText;\r\n            console.log(\"Search book1 \" + bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const param = {\"books\": returned};\r\n            props.doc.requestGet(url, param);\r\n        },\r\n        [returned, bookText, props.doc]\r\n    );\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        const param = {\r\n            book: scannedBook.BARCODE\r\n        }\r\n        const response = await props.doc.requestPost(url, param)\r\n        const ret = response.data.return;\r\n        console.log(ret);\r\n        if (ret === \"SUCCESS\")\r\n        {\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.returnSucceed,\r\n                              \"type\": toast.TYPE.SUCCESS})\r\n            returned.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n            console.log(returned)\r\n            setReturned(returned)\r\n        }\r\n        else\r\n        {\r\n            let text\r\n            if (ret in props.text)\r\n                text = props.text[ret];\r\n            else\r\n                text = props.text.NOT_AVAILABLE;\r\n            console.log(text)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": text,\r\n                              \"type\": toast.TYPE.ERROR})\r\n        }\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Finish\")\r\n        navigate(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {returned.length > 0 &&\r\n                    <ListView list={returned} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n            <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.finish} </button>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import { useEffect, useState } from \"react\";\nimport { toUtf8 } from \"./Util\";\nimport \"./UserInfo.css\";\n\nfunction UserInfo(props) {\n    const [needConfirm, setNeedConfirm] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(function() {\n        console.log(\"User Info\");\n        console.log(props.info);\n        document.getElementById('userName').value = props.info.USER_NAME ? props.info.USER_NAME : \"\";\n        document.getElementById('phone').value = props.info.PHONE_NUMBER ? props.info.PHONE_NUMBER : \"\";\n        document.getElementById('email').value = props.info.EMAIL ? props.info.EMAIL : \"\";\n        document.getElementById('address').value = props.info.ADDRESS ? props.info.ADDRESS : \"\";\n        document.getElementById('notice_').value = props.info.NOTICE ? props.info.NOTICE : \"\";\n        document.getElementById('user_level').value = props.info.USER_LEVEL;\n        setUserInfo({\"USER_CODE\": props.info.USER_CODE});\n        setDisabled(true);\n\n    }, [props.info]);\n\n    function setProperty(index, value)\n    {\n        console.log(index);\n        console.log(value);\n        var info = userInfo;\n        switch (index)\n        {\n        case 0:\n            info.USER_NAME = value;\n            break;\n        case 1:\n            info.PHONE_NUMBER = value;\n            break;\n        case 2:\n            info.EMAIL = value;\n            break;\n        case 3:\n            info.ADDRESS = value;\n            break;\n        case 4:\n            info.USER_LEVEL = value;\n            break;\n        case 5:\n            info.NOTICE = value;\n            break;\n        default:\n            break;\n        }\n        const length = Object.keys(info).length;\n        console.log(length);\n//        if (length >= 1 && \"USER_LEVEL\" in info && info.USER_LEVEL >= 0 && info.USER_LEVEL <= 2)\n        if (length > 1)\n            setDisabled(false);\n        setUserInfo(info);\n    }\n\n    async function confirmAction()\n    {\n        console.log(\"Save modification\");\n        console.log(userInfo);\n        const ipAddr = props.doc.serverInfo.localIp;\n        const portNum = props.doc.serverInfo.port;\n        if (ipAddr.length === 0 || portNum <= 0)\n            return;\n\n        const url = \"https://\" + ipAddr + \":\" +\n            portNum + \"/user\";\n\n        var obj = {};\n        console.log(userInfo)\n        for (const key in userInfo)\n        {\n            obj[key] = btoa(toUtf8(userInfo[key]));\n        }\n        const response = await props.doc.requestPost(url, obj);\n        console.log(response);\n        props.refresh(response);\n        setNeedConfirm(false);\n    }\n\n    function cancelAction()\n    {\n        setNeedConfirm(false);\n    }\n\n    return (\n        <div>\n            <table><tbody>\n                <tr key=\"Name\">\n                    <td> {props.text.name} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"userName\" onChange={(event) => {setProperty(0, event.target.value);}} />\n                    </td>\n                </tr>\n                {\"REG_DATE\" in props.info &&\n                    <tr key=\"Register\">\n                        <td> {props.text.registeredDate} </td>\n                        <td colSpan=\"3\" className=\"data\">\n                            {props.info.REG_DATE}\n                        </td>\n                    </tr>\n                }\n                <tr key=\"Phone\">\n                    <td> {props.text.phone} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"phone\" onChange={(event) => {setProperty(1, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Email\">\n                    <td> {props.text.email} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"email\" onChange={(event) => {setProperty(2, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Address\">\n                    <td> {props.text.address} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"address\" onChange={(event) => {setProperty(3, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Notice\">\n                    <td> {props.text.notice_} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"notice_\" onChange={(event) => {setProperty(5, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Level\">\n                    <td> {props.text.level} </td>\n                    <td colSpan=\"3\" className=\"cell\">\n                        <select name=\"User Level\" id=\"user_level\" className=\"dropdown\" onChange={(event) => {setProperty(4, event.target.value);}}>\n                            <option value=\"0\"> {props.text.kid} </option>\n                            <option value=\"1\"> {props.text.adult} </option>\n                            <option value=\"2\"> {props.text.admin} </option>\n                        </select>\n                    </td>\n                </tr>\n            </tbody></table>\n           <button id=\"modify\" hidden={needConfirm} onClick={async () => setNeedConfirm(true)} disabled={disabled}> {props.text.save} </button>\n            <div id=\"checkModify\" hidden={!needConfirm}>\n                <div id=\"noticeMsg\"> {props.text.confirmSave} </div>\n                <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\n                <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\n            </div>\n        </div>\n    );\n}\nexport default UserInfo;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, MAX_SEARCH_ENTRY, getUserState, toUtf8 } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useNavigate, Link, Navigate, useParams } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport UserInfo from \"../UserInfo\";\r\n\r\n//var rentList = [];\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 300);\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n//    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const { id } = useParams();\r\n    const [rentList, setRentList] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                return;\r\n            }\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.users;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    async function extend(key)\r\n    {\r\n        console.log(\"Extend \" + key);\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/extend\";\r\n        var obj = {};\r\n        obj[\"book\"] = key\r\n\r\n        const ret = await props.doc.requestPost(url, obj);\r\n        console.log(\"Extended\")\r\n        console.log(ret)\r\n        selectId(selectedRef.current, true);\r\n        if (ret.data.return === \"SUCCESS\")\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.extend, prop);\r\n        }\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const extendCount = rent.extendCount;\r\n        const key = index.toString();\r\n//                        <td colSpan={props.doc.serverAvailable?\"3\":\"2\"} className=\"bookName\">{bookName}</td>\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan={props.doc.serverAvailable?\"2\":\"3\"} className=\"bookName\">{bookName}</td>\r\n                        {props.doc.serverAvailable &&\r\n                            <td className=\"bookName\"><button className=\"extend\" onClick={() => extend(id)}>{props.text.extend + \" (\" + extendCount.toString() + \")\"}</button></td>\r\n                        }\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id, forceSelect = false) => {\r\n        const rent = await props.doc.getRent(id);\r\n        console.log(rent);\r\n        if (selectedRef.current === -1 || selectedRef.current !== id || forceSelect )\r\n        {\r\n            console.log(\"Select \" + id);\r\n//            setSelectedId(id);\r\n            selectedRef.current = id;\r\n            console.log(\"Set Rent List\");\r\n            console.log(rent)\r\n            setRentList(rent);\r\n//            rentList = rent;\r\n        }\r\n        else if (searchResults.length > 1)\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n//            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n            setRentList([]);\r\n//            rentList = [];\r\n        }\r\n    }\r\n\r\n    const showUser = (user, detail, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div key={key}>\r\n                    <table><tbody>\r\n                        <tr key={user.id} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user, detail) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result, detail) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, detail, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (user, detail) => {\r\n        console.log(\"Detail\");\r\n        console.log(user);\r\n        return (<>\r\n                    {props.doc.serverAvailable &&\r\n                        <div>\r\n                        <UserInfo text={props.text} doc={props.doc} info={user} refresh={refresh}/>\r\n                        <button id=\"modify\" onClick={() => navigate(\"/checkOut/\" + user.USER_CODE)}> {props.text.checkOut} </button>\r\n                        </div>\r\n                    }\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        detail.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        detail.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a.name > b.name; });\r\n                console.log(results);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                const input = userText.trim()\r\n                console.log(\"Query \" + input + \" \" + searchQuery)\r\n                if (input.length > 0 && searchQuery) {\r\n\r\n                    let sr;\r\n                    if (props.doc.serverAvailable)\r\n                    {\r\n                        console.log(\"from CLIB\")\r\n                        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/users\";\r\n                        const param = {\"user\": btoa(toUtf8(input))};\r\n                        const response = await props.doc.requestGet(url, param);\r\n                        const users = response.data.return.data;\r\n                        console.log(response.data.return);\r\n                        sr = [];\r\n                        if (users) {\r\n                            for (const entry of response.data.return.data)\r\n                            {\r\n                                console.log(entry);\r\n                                let user = entry;\r\n                                user.id = entry.USER_CODE;\r\n                                user.name = entry.USER_NAME;\r\n                                user.state = getUserState(props.text, entry.USER_STATE);\r\n                                user.rent = entry._RENT.length;\r\n                                sr.push(user);\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"from DB\")\r\n                        sr = await findUsers(searchQuery);\r\n                    }\r\n\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                   else\r\n                       selectId(0);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n       [searchQuery, props, userList, queryRequest, userText]\r\n    );\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView keyValue={searchQuery} list={searchResults} detail={rentList} showCallback={(entries, detail) => { return showUsers(entries, detail); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getBookState } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.users;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userList]\r\n    );\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        return a1.rentDate > a2.rentDate;\r\n    }\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.serverAvailable)\r\n        {\r\n            let results = [];\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const param = {\"user\": \"*\", \"match\":false};\r\n//            console.log(obj);\r\n            const response = await props.doc.requestGet(url, param);\r\n//           console.log(response)\r\n//            if (!(\"books\" in response.data.return))\r\n//                return results;\r\n            const books = response.data.return.books;\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                const state = book._STATE;\r\n                let retDate = \"\";\r\n                if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                {\r\n                    retDate = book.RETURN_DATE;\r\n                }\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: book.BOOKNAME,\r\n                    id: book.BARCODE,\r\n                    rent: getBookState(props.text, book.STATS.toString()),\r\n                    rentDate: book.LENT_DATE,\r\n                    retDate: retDate,\r\n                    author: book.AUTHOR,\r\n                    totalName: book.TOTAL_NAME,\r\n                    claim_num: book.CLAMENUM,\r\n                    publish: book.PUBLISH,\r\n                    claim: book.CLAIM,\r\n                    user: book.USER,\r\n                    userName: book.USER_NAME\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compare);\r\n            setRentList(results);\r\n        }\r\n        else\r\n        {\r\n\r\n            const rent = await props.doc.getRent();\r\n            console.log(\"Rent\");\r\n            console.log(rent);\r\n            rent.sort(compare);\r\n            for (const index in rent)\r\n            {\r\n                const userId = rent[index][\"user\"];\r\n                let userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                rent[index][\"userName\"] = userName;\r\n//                console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n            }\r\n            setRentList(rent);\r\n        }\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        const claim = rent[\"claim\"];\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"situation\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.situation}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue=\"\" list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n//    const [initialized, setInitialized] = useState(false);\r\n    const [fromTime, setFromTime] = useState(\"\");\r\n    const [toTime, setToTime] = useState(\"\");\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [loadHistory, {loading: historyLoading, data: historyData, error: historyError }] = useLazyQuery(HISTORY_PERIOD_QUERY,\r\n            {\"variables\": { \"fromTime\" : fromTime, \"toTime\": toTime}});\r\n    const [userList, setUserList] = useState({});\r\n    const [yearValue, setYear] = useState(0);\r\n    const [monthValue, setMonth] = useState(0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [searchQuery] = useDebounce(query, 300);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            var i;\r\n            var option;\r\n            var year = document.getElementById('year')\r\n            var month = document.getElementById('month')\r\n            for (i = 1; i <= 12 ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                month.add(option, i);\r\n            }\r\n            const thisYear = new Date().getFullYear();\r\n            const thisMonth = new Date().getMonth() + 1;\r\n            const fromYear = 2017;\r\n\r\n            for (i = fromYear ; i <= thisYear ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                year.add(option, i);\r\n            }\r\n\r\n            console.log(thisYear);\r\n            console.log(thisMonth);\r\n            setYear(thisYear);\r\n            setMonth(thisMonth);\r\n            document.getElementById('year').value = thisYear;\r\n            document.getElementById('month').value = thisMonth;\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n//                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.users;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\")\r\n\r\n            if (!historyData)\r\n                return\r\n\r\n//            console.log(historyData.rentLog_tests)\r\n\r\n            const books = historyData.rentLogs;\r\n//            const books = historyData.rentLog_tests;\r\n            let results = [];\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const state = book.book_state;\r\n                if (state !== \"1\" && state !== 1)\r\n                    continue\r\n                if (!book.return_date || book.return_date.length === 0)\r\n                    continue\r\n//                console.log(book)\r\n                const bookId = book.book_id;\r\n                const userId = book.user_id;\r\n                var userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                var bookInfo;\r\n                if (bookId in props.doc.book)\r\n                {\r\n                    bookInfo = props.doc.book[bookId];\r\n                }\r\n                else\r\n                {\r\n                    bookInfo = {}\r\n                    bookInfo.author = \"\"\r\n                    bookInfo.totalName = \"\"\r\n                    bookInfo.claim_num = \"\"\r\n                    bookInfo.publish = \"\"\r\n                    bookInfo.title = \"\"\r\n                }\r\n                const resultString = `${bookInfo.title} ${bookInfo.claim_num}`;\r\n                retDate = book.return_date;\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: bookInfo.title,\r\n                    id: bookId,\r\n                    rentDate: book.timestamp,\r\n                    retDate: retDate,\r\n                    author: bookInfo.author,\r\n                    claim_num: bookInfo.claim_num,\r\n                    publish: bookInfo.publisher,\r\n                    claim: bookInfo.claim,\r\n                    user: userId,\r\n                    userName: userName\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n//            console.log(results);\r\n            setRentList(results);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, historyLoading, historyError]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        }, [userList]\r\n    );\r\n*/\r\n\r\n    function compare(a1, a2)\r\n    {\r\n        if (a1.rentDate > a2.rentDate)\r\n            return true;\r\n        else if (a1.rentDate < a2.rentDate)\r\n            return false;\r\n        return a1.title > a2.title;\r\n    }\r\n\r\n/*\r\n    async function updateDoc()\r\n    {\r\n        setInitialized(true);\r\n    }\r\n*/\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const claim = rent[\"claim\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookCell\">{bookName}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n    function setProperty(index, value)\r\n    {\r\n        console.log(index);\r\n        console.log(value);\r\n        switch (index)\r\n        {\r\n            case 0:\r\n                setYear(value);\r\n                break;\r\n            case 1:\r\n                setMonth(parseInt(value));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(function () {\r\n        setQuery(yearValue.toString() + \"-\" + monthValue.toString().padStart(2, \"0\"))\r\n\r\n    }, [yearValue, monthValue]\r\n    );\r\n\r\n    useEffect(function () {\r\n        async function search()\r\n        {\r\n            console.log(\"Search\")\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/history\";\r\n                const param = {\"period\": query};\r\n                const response = await props.doc.requestGet(url, param);\r\n                console.log(response);\r\n\r\n                const books = response.data.return.books;\r\n                let results = [];\r\n                let retDate = \"\";\r\n                for (let i = 0 ; i < books.length ; i++)\r\n                {\r\n                    const book = books[i];\r\n                    const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                    if (\"_RETURN_DATE\" in book)\r\n                    {\r\n                        retDate = book._RETURN_DATE;\r\n                    }\r\n                    let resultObject = {\r\n                        index: i,\r\n                        text: resultString,\r\n                        title: book.BOOKNAME,\r\n                        id: book.BARCODE,\r\n        //                rent: getBookState(props.text, book..toString()),\r\n                        rentDate: book.RENT_DATE,\r\n                        retDate: retDate,\r\n                        author: book.AUTHOR,\r\n                        totalName: book.TOTAL_NAME,\r\n                        claim_num: book.CLAMENUM,\r\n                        publish: book.PUBLISH,\r\n                        claim: book.CLAIM,\r\n                        user: book.USER,\r\n                        userName: book.USER_NAME\r\n                    };\r\n                    results.push(resultObject);\r\n                }\r\n                results.sort(compare);\r\n                setRentList(results);\r\n            }\r\n            else\r\n            {\r\n                var queryTo;\r\n                const nextMonth = monthValue + 1\r\n                queryTo = yearValue.toString() + \"-\" + nextMonth.toString().padStart(2, \"0\")\r\n                setFromTime(query)\r\n                setToTime(queryTo)\r\n                console.log(query)\r\n                console.log(queryTo)\r\n\r\n                try {\r\n                    await loadHistory();\r\n                }\r\n                catch (e)\r\n                {\r\n                    console.warn(e.name);\r\n                }\r\n\r\n    /*\r\n                for (const index in rent)\r\n                {\r\n                    const userId = rent[index][\"user\"];\r\n                    let userName;\r\n                    if (userList && userId in userList)\r\n                        userName = userList[userId].name;\r\n                    else\r\n                        userName = \"\"\r\n                    rent[index][\"userName\"] = userName;\r\n                    console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n                }\r\n                setRentList(rent);\r\n    */\r\n            }\r\n        }\r\n        search();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery]\r\n    );\r\n\r\n    function movePrev()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month > 1)\r\n        {\r\n            month -= 1\r\n        }\r\n        else\r\n        {\r\n            year -= 1;\r\n            month = 12;\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    function moveNext()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month < 12)\r\n        {\r\n            month += 1\r\n        }\r\n        else\r\n        {\r\n            year += 1\r\n            month = 1\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"searchRange\">\r\n                <div className=\"page\" id = \"page\">\r\n                    <NavigateBeforeIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {movePrev();} }/>\r\n                </div>\r\n                <select name=\"year\" id=\"year\" className=\"dropdown\" onChange={(event) => {setProperty(0, event.target.value);}}/>\r\n                <select name=\"month\" id=\"month\" className=\"dropdown\" onChange={(event) => {setProperty(1, event.target.value);}}/>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {moveNext();} }/>\r\n                    </div>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue={searchQuery} list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\nimport { Navigate } from 'react-router-dom'\r\nimport UserInfo from \"../UserInfo\";\r\n\r\nfunction NewMember(props) {\r\n//    const [userText, setUserText] = useState(\"\");\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n//    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n//    const [userList, setUserList] = useState({});\r\n//    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized || !props.doc.serverAvailable)\r\n            {\r\n                return;\r\n            }\r\n            import(\"./PageServer.css\");\r\n            console.log(\"=======================================\");\r\n            console.log(\"NewMember initialize\");\r\n            prepareNewMember();\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n*/\r\n\r\n    function prepareNewMember()\r\n    {\r\n        var info = {};\r\n        info.USER_CODE = \"\";\r\n        info.USER_NAME = \"\";\r\n        info.PHONE_NUMBER = \"\";\r\n        info.EMAIL = \"\";\r\n        info.ADDRESS = \"\";\r\n        info.NOTICE = \"\";\r\n        info.USER_LEVEL = -1;\r\n        setUserInfo(info);\r\n    }\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n*/\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n\r\n        const prop = toastProp;\r\n        var text\r\n        if (response.data.return === \"OK\")\r\n        {\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.regSuccess;\r\n            prepareNewMember()\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.regFail;\r\n        }\r\n        prop.autoClose = 3000;\r\n        toast.info(text, prop);\r\n    }\r\n    if (!props.doc.initialized || !props.doc.serverAvailable)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.newMember}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                {props.doc.serverAvailable &&\r\n                    <UserInfo text={props.text} doc={props.doc} info={userInfo} refresh={refresh}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMember;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.dueDate = \"\";\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async requestGet(url, param)\r\n    {\r\n        param.os = navigator.platform;\r\n        const obj = {\"params\": param};\r\n        console.log(\"Request GET : \" + url);\r\n//        console.log(obj);\r\n        const response = await axios.get(url, obj);\r\n        return response;\r\n    }\r\n\r\n    async requestPost(url, param)\r\n    {\r\n        console.log(\"Request POST: \" + url);\r\n        param.os = navigator.platform;\r\n//        console.log(param);\r\n        const response = await axios.post(url, param);\r\n\r\n        return response;\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n        return;\r\n//        const response = await axios.get(\"https://ipv4.seeip.org/jsonip\");\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\")\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        return;\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return;\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            this.serverAvailable = true;\r\n            axios.get(query, {\"params\": {\"os\": navigator.platform, }})\r\n                .then( (response) => {\r\n                    console.log(\"Server connected\");\r\n                    console.log(response.data);\r\n                    this.admin = response.data.admin;\r\n                    this.dueDate = response.data.dueDate;\r\n                    this.initialized = true;\r\n                })\r\n                .catch(error => {\r\n                  const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n                  window.open(query);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        console.log(serverInfo)\r\n        this.serverInfo = serverInfo;\r\n        this.serverInfo = {}\r\n        this.serverInfo.globalIp = serverInfo.globalIp;\r\n\r\n        if (serverInfo.proxy)\r\n        {\r\n            this.serverInfo.localIp = \"libserver.hkmcclibrary.duckdns.org\";\r\n            this.serverInfo.port = 443;\r\n        }\r\n        else\r\n        {\r\n            this.serverInfo.localIp = serverInfo.localIp;\r\n            this.serverInfo.port = serverInfo.port;\r\n        }\r\n\r\n\r\n        console.log(this.serverInfo);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = {...book};\r\n            this.book[id].claim = book.claim.replace(/_/g, \" \");\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n//        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\" && state !== 1 && state !== 3)\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n//           console.log(userId);\r\n//           console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n                this.user[userId][\"rent\"] += 1;\r\n            else\r\n                this.user[userId][\"rent\"] = 1;\r\n        }\r\n        console.log(this.user);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\" ||\r\n            userInfo['level'] === 2)\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    async getRent(userId = undefined) {\r\n        let ret = [];\r\n        if (this.serverAvailable) {\r\n            const url = \"https://\" + this.serverInfo.localIp + \":\" +\r\n                this.serverInfo.port + \"/book\";\r\n            const param = {\"user\": userId};\r\n            const result = await this.requestGet(url, param);\r\n            console.log(result);\r\n            if (\"books\" in result.data.return)\r\n            {\r\n                // BARCODE, BOOKNAME, LENT_DATE, RETURN_DATE, STATS\r\n                // id, title, rentDate, retData,  stat\r\n                for (const entry of result.data.return.books)\r\n                {\r\n                    console.log(entry);\r\n                    const book = {'id': entry.BARCODE, 'title': entry.BOOKNAME, 'claim': entry.CLAIM, 'rentDate': entry.LENT_DATE, 'retDate': entry.RETURN_DATE, 'stat': entry.STATS, 'extendCount': entry._EXTEND_COUNT}\r\n                    ret.push(book);\r\n                }\r\n//                ret = result.data.return.books;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Check \" + userId);\r\n            console.log(this.bookReady);\r\n            if (!this.bookReady)\r\n                return ret;\r\n    //        console.log(this.rent.length);\r\n            for (let i = 0 ; i < this.rent.length ; i++) {\r\n                const entry = this.rent[i];\r\n                if (userId !== undefined && entry.user_id !== userId)\r\n                    continue;\r\n    //            console.log(entry)\r\n                if (entry.state !== \"1\" && entry.state !== \"3\" && entry.state !== 1 && entry.state !== 3)\r\n                    continue;\r\n    //            console.log(entry);\r\n                const id = entry[\"book_id\"];\r\n                const book = this.book[id];\r\n    //            console.log(book)\r\n                let retEntry = {}\r\n                retEntry[\"id\"] = book._id\r\n                retEntry[\"title\"] = book.title\r\n                retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"claim\"] = book.claim\r\n                retEntry[\"user\"] = entry.user_id;\r\n                ret.push(retEntry)\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n    }\n\n    checkLogIn(user, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = user[\"encrypted_email\"];\n            const phoneDb = user[\"encrypted_phone\"];\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \" ; SameSite=Lax ;\" ;\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n\r\n    useEffect(\r\n        () => {\r\n            function close() {\r\n                console.log(\"Close\")\r\n                console.log(dropdown)\r\n                setDropdown(false);\r\n            };\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./DropdownServer.css\");\r\n            }\r\n\r\n            if (dropdown)\r\n            {\r\n                window.addEventListener(\"click\", close);\r\n            }\r\n\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!dropdown)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n            return function removeListener() {\r\n                window.removeEventListener(\"click\", close);\r\n            }\r\n\r\n        }, [dropdown, props.doc.logged, props.doc.serverAvailable]\r\n    );\r\n\r\n    const toggleMenu = () => {\r\n        console.log(\"Click menu\")\r\n        setDropdown(!dropdown);\r\n        console.log(dropdown)\r\n    }\r\n\r\n    const logOut = () =>\r\n    {\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (<div>\r\n            <div className='menu' onClick={toggleMenu} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <div id='dropdown-menu' onClick={() => { setDropdown(false)}} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\">\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\">\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\">\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\">\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\">\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\">\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {props.doc.admin &&\r\n                    <>\r\n                    <hr className=\"hline\"/>\r\n                    <Link className='menu-items' to=\"/userSearch\">\r\n                        {props.text.userSearch}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentalSituation\">\r\n                        {props.text.situation}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentHistory\">\r\n                        {props.text.history}\r\n                    </Link>\r\n                    </>\r\n                }\r\n                {props.doc.serverAvailable && props.doc.admin &&\r\n                    <Link className='menu-items' to=\"/newMember\">\r\n                        {props.text.newMember}\r\n                    </Link>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items'>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\">\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\n\r\nfunction Navbar(props) {\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentalSituation from \"./pages/RentalSituation\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\nimport NewMember from \"./pages/NewMember\";\r\n//import Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {SERVER_QUERY} from \"./api/query.js\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query.js\";\r\n//import {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query_test.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            console.log(\"Platform: \");\r\n            console.log(navigator.platform);\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n            setInitialized(true);\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n//            console.log(\"Login check \" + context.cookie.password);\r\n            const user = userData.user\r\n//            const user = userData.user_test\r\n//            console.log(user);\r\n            if (context.cookie.password && context.checkLogIn(user, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(\"Rent Error\");\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n                doc.setRent(rentData.rents)\r\n//                doc.setRent(rentData.rent_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.books)\r\n//                doc.setBook(bookData.book_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n\r\n            console.log(serverData);\r\n            console.log(initialized);\r\n            if (!serverData || !initialized)\r\n                return\r\n\r\n            console.log(\"Server info available\")\r\n            logMsg = logMsg + \"<p>Server info available</p>\";\r\n            console.log(serverData)\r\n            doc.setServerInfo(serverData.serverInfo)\r\n\r\n            if (!doc.serverAvailable)\r\n            {\r\n                console.log(\"Server is not available. Load books from cloud DB\");\r\n                loadBook();\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.LOADING;\r\n                prop.autoClose = false;\r\n                prop.toastId = loadingId;\r\n                toast.loading(textString.loading, prop);\r\n                doc.setLogCallback(updateLog);\r\n            }\r\n        }, [serverLoading, serverError, serverData, loadBook, initialized]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n//        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut/:id?\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentalSituation\" element={<RentalSituation context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/newMember\" element={<NewMember context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}