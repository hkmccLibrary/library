{"version":3,"sources":["Util.js","pages/Home.js","api/query.js","pages/Notice.js","pages/Search.js","pages/CheckOut.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["SEARCH_PER_SCREEN","MAX_SEARCH_ENTRY","String","prototype","format","formatted","this","i","arguments","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","loadingId","loggingId","Home","props","updateDoc","notify","console","log","prop","type","toast","TYPE","SUCCESS","render","text","succeededToOpen","toastId","info","useEffect","doc","isOpen","setCallback","initialize","id","dangerouslySetInnerHTML","__html","homeText","BOOK_QUERY","gql","RENT_QUERY","USER_QUERY","HISTORY_QUERY","NOTICE_QUERY","CONTENT_QUERY","Notice","useState","searchResults","setSearchResults","displayedCodes","setDisplayedCodes","pageNum","setPageNum","selectedId","setSelectedId","useQuery","noticeLoading","loading","noticeData","data","noticeError","error","useLazyQuery","loadSelected","selectedLoading","selectedData","selectedError","notices","toString","startIdx","count","Math","min","slice","showEntry","result","className","date","colSpan","onClick","_id","title","notice","content","map","fontSize","sx","color","initialized","Search","inputText","setInputText","useDebounce","searchQuery","bookList","setBookList","rentList","setRentList","useParams","rl","rented","rent","push","code","book_id","retDate","return_date","state","key","bl","books","book","name","num","author","claim","claim_num","totalName","series","category","publisher","publish","findBooks","results","row","includes","resultString","available","entry","checkedOut","returnDate","overDue","notAvailable","resultObject","index","sort","a","b","sr","query","selectId","searchTitle","placeholder","searchBook","value","onChange","event","target","hidden","bookInfo","entryId","rowSpan","State","LoggedOut","LoggingIn","LoggedIn","CheckOut","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","setState","history","setHistory","autoLogin","setAutoLogin","loadUser","userData","loadHistory","historyData","expireDate","setExpireDate","logged","userInfo","getRent","context","cookie","Date","setTime","getTime","days","toGMTString","compare","rawHist","bookReady","rentReady","split","s1","s2","hist","j","showEntries","rentDate","bookName","Fragment","to","showRented","noEntry","logIn","toUpperCase","isActive","checkLogIn","user","logInSucceed","document","ERROR","logInFail","update","checkOutTitle","idHolder","disabled","onInput","pwHolder","checked","cookieString","toggleAutoLogin","Doc","logCallback","callback","dismiss","checkState","ret","retEntry","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","trim","join","decodeURIComponent","passwordTyped","matched","emailDb","encrypted_email","phoneDb","encrypted_phone","sign","numberString","isNaN","DropDown","dropdown","setDropdown","click","setClick","nameSuffix","home","logOut","Navbar","isMobile","maxWidth","getElementById","style","width","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","bookLoading","bookError","bookData","updateLog","process","APP_NAME","APP_VERSION","lang","navigator","languages","ts","toLowerCase","kr","en","user_id","nothing","LOADING","setLogCallback","password","setRent","rents","setBook","path","element","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","APP_ID","graphqlUri","app","Realm","getValidAccessToken","currentUser","anonymous","refreshAccessToken","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","options","headers","Authorization","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.4bcb9944.chunk.js","sourcesContent":["export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"bottom-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import React, { useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./Home.css\";\r\nimport { toastProp } from \"../Util\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \");\r\n\r\n        if (notify) {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Done\");\r\n    }\r\n\r\n    return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n}\r\n\r\nexport default Home;\r\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        books (sortBy: TITLE_ASC, limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rents (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: String!){\n        user (query: {_id:$_id}) {\n            _id\n            name\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: String!){\n        rentLogs (query: {user_id: $user_id}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notices (sortBy: _ID_DESC, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: String!) {\n        notice (query: {_id: $_id}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n","import React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(-1);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": selectedId}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notices);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \");\r\n\r\n        if (notify) {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Done\");\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    const selectEntry = (id) => {\r\n        console.log(\"selected \" + id.toString());\r\n        if (selectedId === id)\r\n        {\r\n            setSelectedId(-1);\r\n        }\r\n        else\r\n        {\r\n            setSelectedId(id);\r\n        }\r\n        loadSelected();\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\" onClick={() => selectEntry(result._id)}> {result.title}</td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {selectedId > 0 && selectedData &&\r\n                <div>\r\n                    <table className=\"content\"><tbody>\r\n                           {showEntry(selectedData.notice)}\r\n                        <tr>\r\n                            <td className=\"content\" colSpan=\"3\">\r\n                                {selectedData.notice.content}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                </div>\r\n                }\r\n                <div id=\"list\">\r\n                    <table><tbody>\r\n                       {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                    </tbody></table>\r\n                </div>\r\n                {searchResults.length > SEARCH_PER_SCREEN && (\r\n                    <div id=\"pageControl\">\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                        </div>\r\n                        <div className=\"pageNum\" id=\"pageNum\">\r\n                            {pageNum+1}\r\n                        </div>\r\n                        <div className=\"page\" id = \"page\">\r\n                            <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp } from \"../Util\";\r\nimport { SEARCH_PER_SCREEN, MAX_SEARCH_ENTRY } from \"../Util\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(inputText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setInputText(id);\r\n            }\r\n            else\r\n            {\r\n                setInputText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                for (let i = 0 ; i < bookList.length ; i++) {\r\n                    const row = bookList[i];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.code === text))\r\n                    {\r\n                        let resultString = `${row.name} ${row.claim_num}`;\r\n                        let rent = props.text.available;\r\n                        let retDate = \"\";\r\n                        for (const entry of rentList)\r\n                        {\r\n                            if (entry.code === row.code)\r\n                            {\r\n                                if (entry.state === \"1\")\r\n                                {\r\n                                    rent = props.text.checkedOut;\r\n                                    retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                                }\r\n                                else if (entry.state === \"3\")\r\n                                {\r\n                                    rent = props.text.overDue;\r\n                                    retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                                }\r\n                                else\r\n                                {\r\n                                    rent = props.text.notAvailable;\r\n                                }\r\n\r\n                                break;\r\n                            }\r\n                        }\r\n//                        if (rentList.includes(row.code))\r\n//                            rent = props.text.checkedOut;\r\n//                        else\r\n//                            rent = props.text.available;\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: row.name,\r\n                            code: row.code.toString(),\r\n                            rent: rent,\r\n                            retDate: retDate\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                results.sort(function(a,b) { return a['text'] > b['text']; });\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findBooks(searchQuery);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        setSelectedId(sr[0].index);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n                setPageNum(0);\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, bookList, rentList, props]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n                console.log(\"Page num \" + pageNum.toString());\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        if (notify) {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.loading, prop);\r\n        }\r\n        console.log(\"Done\");\r\n        let rl = [];\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           bl.push({code: book._id, name: book.title, num: book.num, author: book.author, claim: book.claim,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(books.length);\r\n        setBookList(bl);\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (searchResults.length > (pageNum + 1) * SEARCH_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    const selectId = async (id) => {\r\n        if (selectedId === -1 || selectedId !== id)\r\n        {\r\n            console.log(\"Select \" + id);\r\n            setSelectedId(id);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n            setSelectedId(-1);\r\n        }\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n        const hidden = (result.index !== selectedId);\r\n        const bookInfo = bookList[result.index];\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.index)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\"> {result.text}</td>\r\n                        <td className=\"searchRent\"> {result.rent} </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr>\r\n                    <td>{bookInfo.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{bookInfo.totalName} <b>{bookInfo.name}</b> { bookInfo.claim_num} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{bookInfo.code} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{bookInfo.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{bookInfo.claim} </td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.searchTitle} </h2>\r\n            </div>\r\n            <div id=\"searchContents\">\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n\r\n                {displayedCodes.map((result) => showEntry(result))}\r\n            </div>\r\n            {searchResults.length > SEARCH_PER_SCREEN && (\r\n                <div id=\"pageControl\">\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={movePrev}/>\r\n                    </div>\r\n                    <div className=\"pageNum\" id=\"pageNum\">\r\n                        {pageNum+1}\r\n                    </div>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (searchResults.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={moveNext}/>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n//                        <NavigateBeforeIcon fontSize=\"large\" hidden={pageNum === 0 ? \"hidden\":\"\"} color=\"primary\" onClick={movePrev}/>\r\n//                        <NavigateBeforeIcon id=\"prevPage\" fontSize=\"large\" color=\"primary\" onClick={movePrev} />\r\n//                        {pageNum !== 0 ?\r\n//                         <button id=\"prevPage\" hidden onClick={movePrev}> &lt;&lt; </button> : null}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY} from \"../api/query.js\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            compare();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(props.doc.getRent(userId));\r\n            await loadHistory();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const key = index.toString();\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan=\"3\" className=\"bookName\">{bookName}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        console.log(\"Log In\");\r\n        compare();\r\n    }\r\n\r\n    const compare = () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        let text;\r\n        if (props.context.checkLogIn(userData, passwordText))\r\n        {\r\n            props.doc.logIn(userData.user);\r\n\r\n            setSearchResults(props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.logged && props.text.checkOutTitle}\r\n                    {!props.logged && props.text.logIn}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                <div>\r\n                    { showEntries(searchResults) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <div>\r\n                    { showEntries(history) }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import { toast } from \"react-toastify\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n    }\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            if (this.callback) {\r\n                toast.dismiss();\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = book;\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    getRent(userId) {\r\n        let ret = [];\r\n        console.log(\"Check \" + userId);\r\n//        console.log(this.rent.length);\r\n        for (let i = 0 ; i < this.rent.length ; i++) {\r\n            const entry = this.rent[i];\r\n            if (entry[\"user_id\"] !== userId)\r\n                continue;\r\n//            console.log(entry);\r\n            const id = entry[\"book_id\"];\r\n            const book = this.book[id];\r\n//            console.log(book)\r\n            let retEntry = {}\r\n            retEntry[\"id\"] = book[\"_id\"];\r\n            retEntry[\"title\"] = book[\"title\"];\r\n            retEntry[\"rentDate\"] = entry[\"rent_date\"].split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n            retEntry[\"retDate\"] = entry[\"return_date\"].split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n            ret.push(retEntry)\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/config\";\n\nconst NodeRSA = require('node-rsa');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n        console.log(this.cookie);\n    }\n\n    checkLogIn(userData, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (userData.user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = userData.user.encrypted_email;\n            const phoneDb = userData.user.encrypted_phone;\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \";\";\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (dropdown !== props.dropdown)\r\n            {\r\n                console.log(\"User clicked\");\r\n                console.log(props.dropdown);\r\n                setClick(!click);\r\n                setDropdown(props.dropdown);\r\n            }\r\n        }, [props.dropdown, dropdown, click]\r\n    );\r\n\r\n    const logOut = () =>\r\n    {\r\n        setClick(false);\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (\r\n            <div onClick={() => { setClick(!click)}} className={click ? 'dropdown-menu' : 'drop-menu'}>\r\n                {props.logged &&\r\n                    <>\r\n                        <div className='menu-items'>\r\n                            {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                        </div>\r\n                        <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                            {props.text.home}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                            {props.text.notice}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                            {props.text.searchTitle}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                            {props.text.checkOutTitle}\r\n                        </Link>\r\n                        <div className='menu-items' onClick={() => logOut()}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/\" onClick={() => setClick(false)}>\r\n                            {props.text.home}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/notice\" onClick={() => setClick(false)}>\r\n                            {props.text.notice}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/checkOut\" onClick={() => setClick(false)}>\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/search\" onClick={() => setClick(false)}>\r\n                            {props.text.searchTitle}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar(props) {\r\n    const [dropdown, setDropdown] = useState(false)\r\n\r\n    const onClick = () => {\r\n        const maxWidth = document.getElementById(\"navbar\").style.maxWidth;\r\n        console.log(\"maxWidth\");\r\n        console.log(maxWidth);\r\n        console.log(document.getElementById(\"navbar\").style.width);\r\n        setDropdown(!dropdown);\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <div className='menu' onClick={onClick} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc} logged={props.logged} dropdown={dropdown}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: bookLoading, error: bookError, data: bookData } = useQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n            }\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.LOADING;\r\n            prop.autoClose = false;\r\n            prop.toastId = loadingId;\r\n            toast.loading(textString.loading, prop);\r\n            doc.setLogCallback(updateLog);\r\n\r\n            loadUser();\r\n\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n            console.log(\"Login check \" + context.cookie.password);\r\n            console.log(userData);\r\n            if (context.cookie.password && context.checkLogIn(userData, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(userData.user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rents)\r\n                doc.setRent(rentData.rents)\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.books)\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state\");\r\n        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <Navbar doc={doc} text={textString} logged={logged}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOut\" element={<CheckOut context={context} doc={doc} text={textString} logged={logged}/>} />\r\n            </Routes>\r\n\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={2}\r\n                />\r\n            </div>\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}