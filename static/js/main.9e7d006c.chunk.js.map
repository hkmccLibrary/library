{"version":3,"sources":["pages/Home.js","Util.js","ListView.js","api/query.js","pages/Notice.js","pages/Search.js","pages/CheckOutStatus.js","pages/CheckOut.js","pages/Return.js","UserInfo.js","pages/UserSearch.js","pages/RentalSituation.js","pages/RentHistory.js","pages/NewMember.js","Doc.js","Context.js","Dropdown.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useEffect","async","console","log","doc","setCallback","undefined","initialize","serverAvailable","_jsxs","id","children","_jsx","Link","className","to","text","checkOut","return","dangerouslySetInnerHTML","__html","homeText","SEARCH_PER_SCREEN","String","prototype","format","formatted","this","i","arguments","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getUserState","state","normal","overDue","stopped","getBookState","available","checkedOut","reserved","lost","damaged","given","notAvailable","deleted","compareBook","book1","book2","name","claim1","parseInt","claim_num","claim2","compareUser","a1","a2","compareRent","rentDate","title","toUtf8","unescape","encodeURIComponent","loadingId","loggingId","showCallback","ListView","itemList","setItemList","useState","pageNum","setPageNum","displayList","setDisplayList","list","keyValue","startIdx","count","Math","min","slice","detail","NavigateBeforeIcon","fontSize","sx","color","onClick","NavigateNextIcon","BOOK_QUERY","gql","_templateObject","_taggedTemplateLiteral","RENT_QUERY","_templateObject2","USERS_QUERY","_templateObject3","USER_QUERY","_templateObject4","HISTORY_QUERY","_templateObject5","HISTORY_BOOK_QUERY","_templateObject6","HISTORY_PERIOD_QUERY","_templateObject7","NOTICE_QUERY","_templateObject8","CONTENT_QUERY","_templateObject9","SERVER_QUERY","_templateObject10","REQUEST_QUERY","_templateObject11","Notice","searchResults","setSearchResults","displayedCodes","setDisplayedCodes","loading","noticeLoading","data","noticeData","error","noticeError","useQuery","useParams","loadSelected","selectedLoading","selectedData","selectedError","useLazyQuery","notice","toString","showEntry","result","date","colSpan","_id","content","entries","map","initialized","Search","inputText","setInputText","selectedId","setSelectedId","bookList","setBookList","rentList","setRentList","bookState","setBookState","needConfirm","setNeedConfirm","queryRequest","toggleQueryRequest","bookId","setBookId","advancedSearch","setAdvancedSearch","author","setAuthor","fromId","setFromId","toId","setToId","fromDate","setFromDate","toDate","setToDate","stateFilter","setStateFilter","rentHistory","setRentHistory","searchQuery","useDebounce","loadHistory","historyData","selectedRef","useRef","needConfirmRef","bookStateRef","historyAvailable","updateDoc","rl","rm","rented","rent","push","code","book_id","retDate","return_date","bl","books","book","key","num","claim","regDate","registration_date","totalName","series","category","publisher","publish","isbn","setState","current","setSearchState","stateStr","value","document","getElementById","checked","filter","idx","element","isOpen","keyword","sr","results","btoa","url","serverInfo","localIp","port","param","response","requestGet","resultString","concat","BOOKNAME","CLAIMNUM","_STATE","returnDate","_RETURN","resultObject","index","BARCODE","REG_DATE","AUTHOR","TOTAL_NAME","PUBLISH","CLAIM","ISBN","findBookLocally","sort","findBooks","query","history","rentLog","book_state","pair","timestamp","hidden","entryId","flags","selectId","rowSpan","entry","showHistoryEntry","admin","disabled","ipAddr","portNum","obj","requestPost","confirmAction","confirm","cancel","setPeriod","from","toLowerCase","row","includes","bookSearch","placeholder","searchBook","onChange","event","target","type","advSearch","bookCode","registeredDate","Calendar","date1","date2","dateStr1","getFullYear","getMonth","padStart","getDate","dateStr2","selectRange","all","search","showEntries","State","CheckOutStatus","userText","setUserText","passwordText","setPasswordText","setInitialized","userId","setUserId","setHistory","autoLogin","setAutoLogin","loadUser","userData","loadRequest","requestData","expireDate","setExpireDate","setTitle","logged","userInfo","getRent","adminMode","userSearch","logIn","context","cookie","Date","setTime","getTime","days","toGMTString","compare","func","bookReady","rentReady","hist","rentLogs","split","retText","dueDate","showRented","titleRowSpan","React","Fragment","extend","noEntry","toast","isActive","prop","user","checkLogIn","TYPE","SUCCESS","logInSucceed","ERROR","logInFail","render","toastId","update","info","idHolder","onInput","pwHolder","toggleAutoLogin","cookieString","toUpperCase","Navigate","CheckOut","bookText","setBookText","bookValue","barcode","setBarcode","notifyRequest","setNotifyRequest","setRented","setUserData","bookData","setBookData","navigate","useNavigate","interval","setInterval","scan","prefixList","getElementsByName","prefix","clearInterval","notify","RENTED","dismiss","getUserData","USER_CODE","inputId","substring","found","userValue","showBook","_bookId","setBookValue","htmlFor","pattern","inputMode","onKeyDown","setUserKeyDown","USER_NAME","nameSuffix","USER_STATE","_RENT","rentSuffix","numberOnly","bookHolder","confirmRent","ret","rentSucceed","NOT_AVAILABLE","logOut","finish","Return","scannedBook","setScannedBook","returned","setReturned","NOT_RENTED","CameraAltIcon","confirmReturn","returnSucceed","UserInfo","setDisabled","setUserInfo","setProperty","PHONE_NUMBER","EMAIL","ADDRESS","USER_LEVEL","NOTICE","Object","keys","phone","email","address","notice_","level","kid","adult","save","confirmSave","refresh","userLoading","userListData","userError","userList","setUserList","succeededToOpen","users","setUser","getUser","bookName","extendCount","forceSelect","showUsers","showUser","_Fragment","input","trim","findUsers","RentHistory","RETURN_DATE","STATS","LENT_DATE","CLAMENUM","USER","userName","situation","fromTime","setFromTime","toTime","setToTime","historyLoading","historyError","yearValue","setYear","monthValue","setMonth","setQuery","option","year","month","createElement","add","thisYear","thisMonth","user_id","bookInfo","_RETURN_DATE","RENT_DATE","queryTo","nextMonth","e","warn","movePrev","moveNext","NewMember","prepareNewMember","newMember","regSuccess","regFail","Doc","constructor","userReady","logCallback","os","navigator","platform","axios","get","post","updateIpAddr","checkServerIp","checkState","callback","setLogCallback","setRent","checkRent","setServerInfo","globalIp","proxy","setBook","_EXTEND_COUNT","retEntry","rent_date","openDoc","updateFunc","prk","require","config","Context","rawCookie","v","reduce","acc","shift","join","decodeURIComponent","passwordTyped","matched","emailDb","phoneDb","sign","numberString","isNaN","DropDown","dropdown","setDropdown","close","window","addEventListener","menu","classList","remove","removeEventListener","toggleMenu","MenuIcon","home","checkOutStatus","Navbar","isMobile","textString","logMsg","App","setLogged","rentLoading","rentError","rentData","serverLoading","serverError","serverData","loadBook","bookLoading","bookError","notifyInit","updateLog","process","APP_NAME","APP_VERSION","lang","languages","ts","kr","en","nothing","password","LOADING","Router","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","limit","Routes","Route","path","UserSearch","RentalSituation","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","link","HttpLink","uri","headers","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.9e7d006c.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Home\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    if (!props.doc.serverAvailable)\r\n    {\r\n        return (<div id=\"home\" dangerouslySetInnerHTML={{__html:props.text.homeText}}></div>);\r\n    }\r\n    else\r\n    {\r\n        import(\"./PageServer.css\");\r\n        return (<div id=\"home\">\r\n                    <Link className='home-items' to=\"/checkOut\">\r\n                        {props.text.checkOut}\r\n                    </Link>\r\n                    <Link className='home-items' to=\"/return\">\r\n                        {props.text.return}\r\n                    </Link>\r\n                </div>);\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","export const SEARCH_PER_SCREEN = 10;\r\nexport const MAX_SEARCH_ENTRY = 500;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n\r\nexport const getUserState = function(text, state) {\r\n    if (state === \"0\" || state === 0)\r\n        return text.normal;\r\n    else if (state === \"1\" || state === 1)\r\n        return text.overDue;\r\n    else if (state === \"2\" || state === 2)\r\n        return text.stopped;\r\n}\r\n\r\nexport const getBookState = function(text, state) {\r\n    switch (state)\r\n    {\r\n        case \"0\":\r\n        case 0:\r\n            return text.available;\r\n        case \"1\":\r\n        case 1:\r\n            return text.checkedOut;\r\n        case \"2\":\r\n        case 2:\r\n            return text.reserved;\r\n        case \"3\":\r\n        case 3:\r\n            return text.overDue;\r\n        case \"4\":\r\n        case 4:\r\n            return text.lost;\r\n        case \"5\":\r\n        case 5:\r\n            return text.damaged;\r\n        case \"6\":\r\n        case 6:\r\n            return text.given;\r\n        case \"7\":\r\n        case 7:\r\n        default:\r\n            return text.notAvailable;\r\n        case \"8\":\r\n        case 8:\r\n            return text.deleted;\r\n    }\r\n}\r\n\r\nexport const compareBook = function(book1, book2)\r\n{\r\n    if (book1.name > book2.name)\r\n        return 1;\r\n    else if (book1.name < book2.name)\r\n        return -1;\r\n    const claim1 = parseInt(book1.claim_num);\r\n    const claim2 = parseInt(book2.claim_num);\r\n    if (claim1 > claim2)\r\n        return 1;\r\n    else if (claim1 < claim2)\r\n        return -1;\r\n\r\n    return 0;\r\n}\r\n\r\nexport const compareUser = function(a1, a2)\r\n{\r\n    if (a1.name > a2.name)\r\n        return 1;\r\n    else if (a1.name < a2.name)\r\n        return -1;\r\n    else\r\n        return 0;\r\n}\r\n\r\nexport const compareRent = function(a1, a2)\r\n{\r\n    if (a1.rentDate > a2.rentDate)\r\n        return 1;\r\n    else if (a1.rentDate < a2.rentDate)\r\n        return -1;\r\n    if (a1.title > a2.title)\r\n        return 1;\r\n    else if (a1.title < a2.title)\r\n        return -1;\r\n    else\r\n        return 0;\r\n}\r\n\r\nexport const toUtf8 = function(text) {\r\n    return unescape(encodeURIComponent(text));\r\n};\r\n\r\nexport const fromUtf8 = function(text) {\r\n    return decodeURIComponent(escape(text));\r\n};\r\n\r\nexport const loadingId = \"custom-loading-id\";\r\nexport const loggingId = \"custom-logging-id\";\r\n","import { useEffect, useState } from \"react\";\nimport { SEARCH_PER_SCREEN } from \"./Util\";\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nfunction doNothing() {\n    console.log(\"Do nothing...\");\n}\n\nvar showCallback = doNothing;\nfunction ListView(props) {\n        const [itemList, setItemList] = useState([]);\n//        const [showCallback, setShowCallback] = useState(doNothing);\n        const [pageNum, setPageNum] = useState(0);\n        const [displayList, setDisplayList] = useState([]);\n\n    useEffect(function () {\n        console.log(\"Init List View\");\n    }, []);\n\n    useEffect(function () {\n//        console.log(\"Set Item List\");\n        setItemList(props.list);\n    }, [props.list]);\n\n    useEffect(function () {\n        setPageNum(0);\n    }, [props.keyValue]);\n\n    useEffect(function () {\n        if (props.showCallback)\n        {\n//            console.log(\"Set show callback\");\n //           setShowCallback(props.showCallback);\n            showCallback = props.showCallback;\n        }\n    }, [props.showCallback]);\n\n    useEffect(function () {\n        const length = itemList.length;\n //       console.log(\"Page num \" + pageNum.toString());\n        if (length > SEARCH_PER_SCREEN)\n        {\n            const startIdx = pageNum * SEARCH_PER_SCREEN;\n            const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\n            setDisplayList(itemList.slice(startIdx,startIdx+count));\n        }\n        else\n        {\n            setDisplayList(itemList)\n        }\n    }, [itemList, pageNum]);\n\n    function movePrev() {\n        console.log(\"Prev\");\n        if (pageNum > 0)\n        {\n            setPageNum(pageNum - 1);\n        }\n    }\n\n    function moveNext() {\n        console.log(\"Next\");\n        if (itemList.length > (pageNum + 1) * SEARCH_PER_SCREEN)\n        {\n            setPageNum(pageNum + 1);\n        }\n    }\n\n    return (\n        <div id=\"listView\">\n            {showCallback(displayList, props.detail)}\n            {itemList && itemList.length > SEARCH_PER_SCREEN && (\n                <div id=\"pageControl\">\n                    <div className=\"page\" id = \"page\">\n                        <NavigateBeforeIcon fontSize=\"large\" sx={{color: (pageNum === 0) ? \"#ffffff\":\"#404040\"}} onClick={() => {movePrev();} }/>\n                    </div>\n                    <div className=\"pageNum\" id=\"pageNum\">\n                        {pageNum+1}\n                    </div>\n                    <div className=\"page\" id = \"page\">\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: (itemList.length <= (pageNum + 1) * SEARCH_PER_SCREEN) ? \"#ffffff\":\"#404040\"}} onClick={() => {moveNext();} }/>\n                    </div>\n                </div>)\n            }\n        </div>\n    );\n}\nexport default ListView;\n","import gql from \"graphql-tag\";\n\nexport const BOOK_QUERY = gql`\n    query AllBook{\n        book (limit:20000) {\n            _id\n            author\n            title\n            claim_num\n            num\n            series\n            category\n            claim\n            publisher\n            seqnum\n            registration_date\n            isbn\n            deleted\n        }\n    }\n`;\n\nexport const RENT_QUERY = gql`\n    query AllRent{\n        rent (limit:20000) {\n            _id\n            book_id\n            user_id\n            rent_date\n            return_date\n            state\n        }\n    }\n`;\n\nexport const USERS_QUERY = gql`\n    query AllUser {\n        user (limit: 20000) {\n            _id\n            name\n            state\n            level\n        }\n    }`;\n\nexport const USER_QUERY = gql`\n    query FindUser($_id: string){\n        user (where: {_id: {_eq: $_id}}) {\n            _id\n            name\n            state\n            level\n            encrypted_email\n            encrypted_phone\n        }\n    }`;\n\nexport const HISTORY_QUERY = gql`\n    query findLogs($user_id: string){\n        rentLog (limit: 20000, where: {user_id: {_eq: $user_id}}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const HISTORY_BOOK_QUERY = gql`\n    query findLogs($book_id: string){\n        rentLog (limit: 20000, where: {book_id: {_eq: $book_id}}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const HISTORY_PERIOD_QUERY = gql`\n    query findLogs ($fromTime: string, $toTime: string) {\n        rentLog(limit: 20000, where: {timestamp: {_gte: $fromTime, _lt: $toTime}}) {\n            _id\n            book_id\n            book_state\n            timestamp\n            return_date\n            user_id\n        }\n    }`;\n\nexport const NOTICE_QUERY = gql`\n    query GetNotices {\n        notice (order_by: {date: asc}, limit:20000) {\n            _id\n            date\n            title\n        }\n    }`;\n\nexport const CONTENT_QUERY = gql`\n    query GetContent ($_id: string) {\n        notice (where: {_id: {_eq: $_id}}) {\n            _id\n            date\n            title\n            content\n        }\n    }`;\n\nexport const SERVER_QUERY = gql`\n    query GetServerInfo {\n        serverInfo {\n            _id\n            globalIp\n            localIp\n            port\n            proxy\n        }\n    }`;\n\nexport const REQUEST_QUERY = gql`\n    query GetRequests($user_id: string) {\n        request (limit: 20000, where: {user_id: {_eq: $user_id}}) {\n            _id\n            user_id\n            action\n            state\n            book_id\n        }\n    }`;\n\n\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport { SEARCH_PER_SCREEN } from \"../Util\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport ListView from \"../ListView\";\r\nimport {NOTICE_QUERY, CONTENT_QUERY} from \"../api/query.js\";\r\n\r\nfunction Notice(props) {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [pageNum, setPageNum] = useState(0);\r\n    const { loading: noticeLoading, data: noticeData, error: noticeError } = useQuery(NOTICE_QUERY);\r\n    const { id } = useParams();\r\n    const [loadSelected, { loading: selectedLoading, data: selectedData, error: selectedError}] = useLazyQuery(CONTENT_QUERY,\r\n            {\"variables\": {\"_id\": id}});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Notice\");\r\n            props.doc.setCallback(undefined);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Notice\");\r\n//            console.log(noticeData);\r\n//            console.log(noticeError);\r\n//            console.log(noticeLoading);\r\n            if (noticeData)\r\n            {\r\n                setSearchResults(noticeData.notice);\r\n            }\r\n        }, [noticeData, noticeError, noticeLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Get Content\");\r\n//            console.log(selectedData);\r\n//            console.log(selectedError);\r\n//            console.log(selectedLoading);\r\n            if (selectedData)\r\n            {\r\n//                setSearchResults(selectedData.content);\r\n            }\r\n        }, [selectedData, selectedError, selectedLoading]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            const length = searchResults.length;\r\n            console.log(\"Page num \" + pageNum.toString() + \" \");\r\n            console.log(length);\r\n            if (length > SEARCH_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * SEARCH_PER_SCREEN;\r\n                const count = Math.min(SEARCH_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(searchResults.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(searchResults);\r\n                setPageNum(0);\r\n            }\r\n        }, [searchResults, pageNum]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n//           console.log(displayedCodes);\r\n        }, [displayedCodes]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Select id: \" + id);\r\n            if (id)\r\n            {\r\n                loadSelected();\r\n            }\r\n        }, [id, loadSelected]\r\n    );\r\n\r\n    const showEntries = (entries) => {\r\n        return (\r\n            <div id=\"noticeList\">\r\n                <table><tbody>\r\n                   {displayedCodes.length > 0 && displayedCodes.map((result) => showEntry(result))}\r\n                </tbody></table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const showEntry = (result) => {\r\n//        console.log(result);\r\n        return (\r\n                <tr className=\"\" key={result._id}>\r\n                    <td className=\"\"> {result.date} </td>\r\n                    <td className=\"noticeEntry\" colSpan=\"2\">\r\n                        {id !== result._id &&\r\n                            (<Link to={\"/notice/\"+result._id}>{result.title}</Link>)}\r\n                        {id === result._id &&\r\n                            (<Link to={\"/notice\"}>{result.title}</Link>)}\r\n                    </td>\r\n                </tr>\r\n        );\r\n    }\r\n\r\n    return (\r\n            <div id=\"notice\">\r\n                <div id=\"title\">\r\n                    <h2>\r\n                        {props.text.notice}\r\n                    </h2>\r\n                </div>\r\n                {id && selectedData &&\r\n                    <div id=\"noticeContent\">\r\n                        <table className=\"content\"><tbody>\r\n                               {showEntry(selectedData.notice[0])}\r\n                            <tr>\r\n                                <td className=\"content\" colSpan=\"3\">\r\n                                    {selectedData.notice[0].content}\r\n                                </td>\r\n                            </tr>\r\n                        </tbody></table>\r\n                    </div>\r\n                }\r\n                <ListView list={searchResults} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Notice;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { MAX_SEARCH_ENTRY, getBookState, toUtf8, compareBook } from \"../Util\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport {HISTORY_BOOK_QUERY} from \"../api/query.js\";\r\nimport ListView from \"../ListView\";\r\nimport Calendar from \"react-calendar\";\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nlet initialized = false;\r\n\r\nfunction Search(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    const [rentList, setRentList] = useState([]);\r\n\r\n    const [bookState, setBookState] = useState(0);\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n\r\n    const [bookId, setBookId] = useState(\"\");\r\n\r\n    const [advancedSearch, setAdvancedSearch] = useState(false);\r\n\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [fromId, setFromId] = useState(\"\");\r\n    const [toId, setToId] = useState(\"\");\r\n    const [fromDate, setFromDate] = useState(\"\");\r\n    const [toDate, setToDate] = useState(\"\");\r\n\r\n    const [stateFilter, setStateFilter] = useState(0);\r\n    const [rentHistory, setRentHistory] = useState([]);\r\n\r\n    const [searchQuery] = useDebounce(inputText, 300);\r\n    const [loadHistory, {data: historyData}] = useLazyQuery(HISTORY_BOOK_QUERY,\r\n            {\"variables\": { \"book_id\": bookId }});\r\n    const selectedRef = useRef(\"0\");\r\n    const needConfirmRef = useRef(false);\r\n    const bookStateRef = useRef(0);\r\n    const historyAvailable = useRef(false);\r\n    const { id } = useParams();\r\n\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            console.log(\"BOOK ID: \" + id);\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                console.log(\"Set Book ID \" + id);\r\n //               setInputText(id);\r\n                setBookId(id);\r\n                loadHistory();\r\n            }\r\n            else\r\n            {\r\n//                setInputText(\"\");\r\n                setBookId(\"\");\r\n            }\r\n        }, [id, loadHistory]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findBooks(text) {\r\n                let results = [];\r\n\r\n                if (props.doc.serverAvailable)\r\n                {\r\n                    console.log(toUtf8(text));\r\n                    console.log(btoa(toUtf8(text)));\r\n                    const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                        props.doc.serverInfo.port + \"/book\";\r\n                    console.log(\"=======================\");\r\n                    console.log(\"Request book list\");\r\n                    const param = {\"book\": btoa(toUtf8(text)), \"match\":false};\r\n                    const response = await props.doc.requestGet(url, param);\r\n                    console.log(response)\r\n                    if (!(\"books\" in response.data.return))\r\n                        return results;\r\n                    const books = response.data.return.books;\r\n                    for (let i = 0 ; i < books.length ; i++)\r\n                    {\r\n                        const book = books[i];\r\n                        const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                        const state = book._STATE;\r\n                        let retDate = \"\";\r\n                        if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                        {\r\n                            retDate = props.text.returnDate + \" \" + book._RETURN;\r\n                        }\r\n                        let resultObject = {\r\n                            index: i,\r\n                            text: resultString,\r\n                            name: book.BOOKNAME,\r\n                            code: book.BARCODE,\r\n                            rent: getBookState(props.text, book._STATE.toString()),\r\n                            retDate: retDate,\r\n                            regDate: book.REG_DATE,\r\n                            author: book.AUTHOR,\r\n                            totalName: book.TOTAL_NAME,\r\n                            claim_num: book.CLAIMNUM,\r\n                            publish: book.PUBLISH,\r\n                            claim: book.CLAIM,\r\n                            state: book._STATE,\r\n                            isbn: book.ISBN\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    results = findBookLocally(text, bookList);\r\n                }\r\n                results.sort(compareBook);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                console.log(\"Refresh\");\r\n                if (advancedSearch) {\r\n                    return;\r\n                }\r\n                var keyword;\r\n                if (bookId !== \"\")\r\n                    keyword = bookId;\r\n                else\r\n                    keyword = searchQuery;\r\n                console.log(keyword)\r\n                if (keyword) {\r\n                    let sr = await findBooks(keyword);\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                        selectedRef.current = sr[0].code;\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery, bookId, bookList, rentList, props, queryRequest, advancedSearch]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\");\r\n            console.log(historyData);\r\n            if (!historyData)\r\n            {\r\n                setRentHistory([])\r\n                historyAvailable.current = false;\r\n                return;\r\n            }\r\n            let history = [];\r\n            for (let i = 0 ; i < historyData.rentLog.length ; i++)\r\n            {\r\n                const rent = historyData.rentLog[i];\r\n                if (rent.book_state !== 1)\r\n                    continue;\r\n                let pair = [rent.timestamp];\r\n                if ( \"return_date\" in rent)\r\n                    pair.push(rent.return_date)\r\n                else\r\n                    pair.push(rent.return_date)\r\n                history.push(pair);\r\n            }\r\n            console.log(history.length);\r\n            setRentHistory(history);\r\n            historyAvailable.current = (history.length > 0);\r\n        },\r\n        [historyData]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        initialized = true;\r\n\r\n        let rl = [];\r\n        let rm = {};\r\n        const rented = props.doc.rent;\r\n        for (let i = 0 ; i < rented.length; i++)\r\n        {\r\n           rl.push({code:rented[i].book_id, retDate:rented[i].return_date, state:rented[i].state});\r\n           rm[rented[i].book_id] = rented[i].state;\r\n        }\r\n        setRentList(rl);\r\n\r\n        let bl = [];\r\n        const books = props.doc.book\r\n        for (const key in books)\r\n        {\r\n           const book = books[key];\r\n           const state = (key in rm) ? rm[key] : 0;\r\n           bl.push({code: book._id, name: book.title, state: state, num: book.num, author: book.author, claim: book.claim,\r\n                    regDate: book.registration_date,\r\n                    claim_num: book.claim_num, totalName: book.series, category: book.publisher, publish: book.publisher, isbn: book.isbn, deleted: book.deleted});\r\n        }\r\n        console.log(\"Load\");\r\n        console.log(bl.length);\r\n        setBookList(bl);\r\n\r\n        console.log(bookId);\r\n        if (bookId !== \"\")\r\n        {\r\n            console.log(\"Load history\");\r\n            loadHistory();\r\n        }\r\n    }\r\n\r\n    const selectId = async (code) => {\r\n        console.log(\"Prev \" + selectedRef.current);\r\n        if (searchResults.length === 1 || selectedRef.current === -1 || selectedRef.current !== code)\r\n        {\r\n            console.log(\"Select \" + code);\r\n            setSelectedId(code);\r\n            selectedRef.current = code;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect \" + code);\r\n            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n        }\r\n    }\r\n\r\n    function setState(state)\r\n    {\r\n        console.log(\"Set state \" + state.toString());\r\n        needConfirmRef.current = true;\r\n        setNeedConfirm(true);\r\n        setBookState(state);\r\n        bookStateRef.current = state;\r\n        console.log(selectedId.toString() + needConfirmRef.current);\r\n    }\r\n\r\n    function setSearchState(state)\r\n    {\r\n        const stateStr = state.toString()\r\n        const value = document.getElementById(stateStr).checked;\r\n        console.log(\"Set Search state \" + stateStr + \" Value: \" + value);\r\n        if (stateStr === \"1023\")\r\n        {\r\n            document.getElementById(\"1023\").checked = value;\r\n            document.getElementById(\"0\").checked = value;\r\n            document.getElementById(\"1\").checked = value;\r\n            document.getElementById(\"3\").checked = value;\r\n            document.getElementById(\"4\").checked = value;\r\n            document.getElementById(\"5\").checked = value;\r\n            document.getElementById(\"6\").checked = value;\r\n            document.getElementById(\"7\").checked = value;\r\n            document.getElementById(\"8\").checked = value;\r\n        }\r\n        else\r\n        {\r\n            document.getElementById(stateStr).checked = value;\r\n        }\r\n\r\n        var filter = 0;\r\n        for (var i = 0 ; i < 9 ; i++)\r\n        {\r\n            const idx = i.toString();\r\n            const element = document.getElementById(idx);\r\n            if (element)\r\n                filter |= (element.checked) ? (1 << i) : 0;\r\n        }\r\n        setStateFilter(filter);\r\n        console.log(\"Filter: \" + filter.toString());\r\n    }\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/book\";\r\n        var obj = {};\r\n        obj[\"book\"] = selectedRef.current;\r\n        obj[\"state\"] = bookStateRef.current;\r\n        console.log(\"=======================\");\r\n        console.log(\"Change book state\");\r\n        await props.doc.requestPost(url, obj);\r\n\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\");\r\n        needConfirmRef.current = false;\r\n        setNeedConfirm(false);\r\n    }\r\n\r\n    const showHistoryEntry = (entry) => {\r\n        return (<tr key={entry[0]}><td key={entry[0] + \"x\"}>{entry[0]}</td><td>{entry[1]}</td></tr>);\r\n    }\r\n\r\n    const showEntry = (result, detail) => {\r\n        const hidden = (result.code !== selectedRef.current);\r\n        const entryId = (hidden) ? \"searchResult\" : \"selectedSearchResult\";\r\n        const flags = [false, false, false, false, false, false, false, false, false, false]\r\n        flags[result.state] = true;\r\n        if (result.state === 1 || result.state === 2 || result.state === 3)\r\n            flags[0] = true;\r\n//        if (!hidden)\r\n//        {\r\n//            console.log(detail);\r\n//            console.log(flags);\r\n//        }\r\n        const rentHistory = detail[2];\r\n        return (\r\n            <div key={result.code}>\r\n            <div id={entryId} onClick={async () => await selectId(result.code)}>\r\n                <table><tbody>\r\n                    <tr className=\"searchTr\">\r\n                        <td className=\"searchTitle\">{result.text}</td>\r\n                        <td className=\"searchRent\">{result.rent}</td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {!hidden &&\r\n            <div>\r\n                <table><tbody>\r\n                <tr key=\"row1\">\r\n                    <td>{result.author} </td>\r\n                    <td colSpan=\"2\" rowSpan=\"2\">{result.totalName + \" \"}<b>{result.name}</b>{\" \" + result.claim_num}</td>\r\n                </tr>\r\n                <tr key=\"row2\">\r\n                    <td>\r\n                        <Link to={\"/search/\"+result.code}>{result.code}</Link>\r\n                    </td>\r\n                </tr>\r\n                <tr key=\"row3\">\r\n                    <td>{result.publish}</td>\r\n                    <td colSpan={result.retDate.length > 0 ? \"1\":\"2\"}>{result.claim}</td>\r\n                    {result.retDate.length > 0 && <td>{result.retDate}</td> }\r\n                </tr>\r\n                </tbody></table>\r\n                <table className=\"rentHistory\" hidden={!historyAvailable.current}><tbody>\r\n                    <tr id=\"titles\"><td>{props.text.rentDate}</td><td>{props.text.returnDate}</td></tr>\r\n                    {rentHistory.map(entry => showHistoryEntry(entry))}\r\n                </tbody></table>\r\n                <div hidden={!props.doc.serverAvailable || !props.doc.admin}>\r\n                    <button className=\"bookStates\" id = \"0\" disabled={flags[0]} onClick={() => setState(0)}> {props.text.available} </button>\r\n                    <button className=\"bookStates\" id = \"4\" disabled={flags[4]} onClick={() => setState(4)}> {props.text.lost} </button>\r\n                    <button className=\"bookStates\" id = \"5\" disabled={flags[5]} onClick={() => setState(5)}> {props.text.damaged} </button>\r\n                    <button className=\"bookStates\" id = \"6\" disabled={flags[6]} onClick={() => setState(6)}> {props.text.given} </button>\r\n                    <button className=\"bookStates\" id = \"7\" disabled={flags[7]} onClick={() => setState(7)}> {props.text.notAvailable} </button>\r\n                    <button className=\"bookStates\" id = \"8\" disabled={flags[8]} onClick={() => setState(8)}> {props.text.deleted} </button>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirmRef.current}>\r\n                    <div id=\"bookName\"> {getBookState(props.text, bookStateRef.current)} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n            </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function showEntries(results, detail)\r\n    {\r\n        console.log(\"Redraw \" + needConfirmRef.current);\r\n        console.log(historyAvailable.current);\r\n        console.log(detail);\r\n        return results.map((result) => showEntry(result, detail))\r\n    }\r\n\r\n    function setPeriod(from, text)\r\n    {\r\n        if (from)\r\n            setFromId(text)\r\n        else\r\n            setToId(text)\r\n    }\r\n\r\n    function findBookLocally(keyword, bookList)\r\n    {\r\n        let results = [];\r\n        console.log(advancedSearch);\r\n        const text = keyword.toLowerCase();\r\n        console.log(text);\r\n        for (let i = 0 ; i < bookList.length ; i++) {\r\n            const row = bookList[i];\r\n            if (results.length >= MAX_SEARCH_ENTRY) break;\r\n\r\n            if (text.length > 0 &&\r\n                (!row.name || !row.name.toString().toLowerCase().includes(text)) &&\r\n                (!row.totalName || !row.totalName.toString().toLowerCase().includes(text)) &&\r\n                (!row.author || !row.author.toString().toLowerCase().includes(text)) &&\r\n                row.code.toLowerCase() !== text && row.isbn !== text)\r\n                continue\r\n            if (row.deleted && row.deleted === \"Y\")\r\n                continue\r\n//            console.log(row)\r\n\r\n            if (advancedSearch)\r\n            {\r\n                if (author.length > 0 && row.author && !row.author.toString().toLowerCase().includes(author.toLowerCase()))\r\n                    continue;\r\n\r\n                if (fromId.length > 0 && row.code < fromId)\r\n                    continue;\r\n\r\n                if (toId.length > 0 && row.code > toId)\r\n                    continue;\r\n\r\n                const regDate = row.regDate;\r\n\r\n                if (regDate < fromDate || regDate > toDate)\r\n                    continue;\r\n                console.log(row);\r\n                console.log(regDate);\r\n                console.log(regDate < fromDate);\r\n                console.log(regDate > toDate);\r\n\r\n                if (!((1<<row.state) & stateFilter))\r\n                    continue;\r\n            }\r\n            else if (text.length === 0)\r\n                continue;\r\n\r\n            let resultString = `${row.name} ${row.claim_num}`;\r\n            let retDate = \"\";\r\n            let state = \"0\";\r\n            for (const entry of rentList)\r\n            {\r\n                if (entry.code === row.code)\r\n                {\r\n                    state = entry.state;\r\n                    if (state === \"1\" || state === \"3\")\r\n                    {\r\n                        retDate = props.text.returnDate + \" \" + entry.retDate;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            let resultObject = {\r\n                index: i,\r\n                text: resultString,\r\n                name: row.name,\r\n                code: row.code.toString(),\r\n                rent: getBookState(props.text, state),\r\n                retDate: retDate,\r\n                regDate: row.regDate,\r\n                author: row.author,\r\n                totalName: row.totalName,\r\n                claim_num: row.claim_num,\r\n                publish: row.publish,\r\n                claim: row.claim,\r\n                state: parseInt(state),\r\n                isbn: row.isbn\r\n            };\r\n            results.push(resultObject);\r\n//            console.log(resultObject);\r\n        }\r\n        console.log(results.length);\r\n\r\n        return results;\r\n    }\r\n\r\n    function onChangeDate(date)\r\n    {\r\n        console.log(date);\r\n        const date1 = date[0]\r\n        const date2 = date[1]\r\n        const y1 = date1.getFullYear().toString();\r\n        const m1 = (date1.getMonth() + 1).toString().padStart(2, \"0\")\r\n        const d1 = date1.getDate().toString().padStart(2, \"0\");\r\n        const dateStr1 = y1 + \"-\" + m1 + \"-\" + d1;\r\n        console.log(dateStr1);\r\n        setFromDate(dateStr1);\r\n\r\n        const y2 = date2.getFullYear().toString();\r\n        const m2 = (date2.getMonth() + 1).toString().padStart(2, \"0\")\r\n        const d2 = date2.getDate().toString().padStart(2, \"0\");\r\n        const dateStr2 = y2 + \"-\" + m2 + \"-\" + d2;\r\n        console.log(dateStr2);\r\n        setToDate(dateStr2);\r\n    }\r\n\r\n    function searchEntry()\r\n    {\r\n        console.log(\"Search\");\r\n        console.log(fromId);\r\n        console.log(toId);\r\n        console.log(fromDate);\r\n        console.log(toDate);\r\n        let results = findBookLocally(inputText, bookList);\r\n        results.sort(compareBook);\r\n\r\n        let sr = results;\r\n        if (sr.length > 0)\r\n            setSearchResults(sr);\r\n        else\r\n            setSearchResults([]);\r\n        if (sr.length === 1)\r\n            selectedRef.current = sr[0].code;\r\n    }\r\n\r\n    function toggleAdvancedSearch()\r\n    {\r\n        setAdvancedSearch(!advancedSearch);\r\n    }\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div id=\"title\">\r\n                <h2> {props.text.bookSearch} </h2>\r\n            </div>\r\n            <div id=\"searchContents\" hidden={bookId !== \"\"}>\r\n                <input id=\"searchInput\"\r\n                    placeholder={props.text.searchBook}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n                    <div hidden={!props.doc.admin}>\r\n                        <input type=\"checkbox\" id=\"advancedSearch\" checked={advancedSearch} onChange={() => toggleAdvancedSearch()}/>\r\n                        <label>\r\n                            {props.text.advSearch}\r\n                        </label>\r\n                    </div>\r\n                <div hidden={!advancedSearch}>\r\n                    <div>\r\n                    <label> {props.text.author} </label>\r\n                    <input type=\"text\" id=\"author\" onChange={(event) => {setAuthor(event.target.value)}} />\r\n                    </div>\r\n                    <div>\r\n                    <label> {props.text.bookCode} </label>\r\n                    <input type=\"text\" id=\"fromPeriod\" onChange={(event) => {setPeriod(true, event.target.value);}} />\r\n                    <label> ~  </label>\r\n                    <input type=\"text\" id=\"toPeriod\" onChange={(event) => {setPeriod(false, event.target.value);}} />\r\n                    </div>\r\n                    <div>\r\n                    <label> {props.text.registeredDate} </label>\r\n                    <Calendar onChange={onChangeDate} selectRange={true}/>\r\n                    </div>\r\n                    <div>\r\n                    <table><tbody>\r\n                        <tr key=\"stateName\" className=\"bookData\">\r\n                            <td className =\"stateName\">{props.text.all}</td>\r\n                            <td className =\"stateName\">{props.text.available}</td>\r\n                            <td className =\"stateName\">{props.text.checkedOut}</td>\r\n                            <td className =\"stateName\">{props.text.overDue}</td>\r\n                            <td className =\"stateName\">{props.text.lost}</td>\r\n                            <td className =\"stateName\">{props.text.damaged}</td>\r\n                            <td className =\"stateName\">{props.text.given}</td>\r\n                            <td className =\"stateName\">{props.text.notAvailable}</td>\r\n                            <td className =\"stateName\">{props.text.deleted}</td>\r\n                        </tr>\r\n                        <tr key=\"stateButton\" className=\"bookData\">\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1023\" onChange={() => setSearchState(1023)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"0\" onChange={() => setSearchState(0)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"1\" onChange={() => setSearchState(1)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"3\" onChange={() => setSearchState(3)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"4\" onChange={() => setSearchState(4)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"5\" onChange={() => setSearchState(5)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"6\" onChange={() => setSearchState(6)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"7\" onChange={() => setSearchState(7)}/>\r\n                            </td>\r\n                            <td className =\"stateButton\">\r\n                            <input type=\"checkbox\" className=\"bookStates\" id = \"8\" onChange={() => setSearchState(8)}/>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                    </div>\r\n                    <div>\r\n                    <button id=\"searchEntry\" onClick={searchEntry}> {props.text.search} </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ListView keyValue={searchQuery} list={searchResults} detail={[selectedId, needConfirm, rentHistory]} showCallback={(entries, detail) => { return showEntries(entries, detail); }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, compareRent } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USER_QUERY, HISTORY_QUERY, REQUEST_QUERY} from \"../api/query.js\";\r\n//import {USER_QUERY, HISTORY_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2\r\n}\r\n\r\nfunction CheckOutStatus(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [passwordText, setPasswordText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [state, setState] = useState(State.LoggedOut);\r\n    const [history, setHistory] = useState([]);\r\n    const [autoLogin, setAutoLogin] = useState(false);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n                     { \"variables\": { \"_id\": userId } });\r\n    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [loadRequest, { data: requestData }] = useLazyQuery(REQUEST_QUERY,\r\n                     { \"variables\": { \"user_id\": userId } });\r\n    const [expireDate, setExpireDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            if (props.doc.isOpen())\r\n                updateDoc();\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOutStatus initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n\r\n            if (\"autoLogin\" in props.context.cookie)\r\n            {\r\n                const autoLogin = (props.context.cookie.autoLogin === \"true\") ? true : false;\r\n                setAutoLogin(autoLogin);\r\n            }\r\n            const date = new Date();\r\n            const days=2;\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            setExpireDate(date.toGMTString());\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.doc.logged]\r\n    );\r\n\r\n    useEffect(() => {\r\n            async function func() {\r\n                console.log(\"User data updated \");\r\n                await compare();\r\n            }\r\n            func();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData)\r\n            let hist = [];\r\n            const rentLogs = historyData.rentLog;\r\n//            const rentLogs = historyData.rentLog_tests;\r\n            for (let i = 0 ; i < rentLogs.length ; i++)\r\n            {\r\n                const entry = rentLogs[i];\r\n                if (entry.book_state !== \"1\" && entry.book_state !== 1)\r\n                    continue;\r\n                if (! (\"return_date\" in entry) || ! entry.return_date)\r\n                    continue;\r\n//                console.log(entry);\r\n                const id = entry.book_id;\r\n                if (!(id in props.doc.book))\r\n                    continue;\r\n\r\n                const book = props.doc.book[id];\r\n//                console.log(book)\r\n                const title = book.title;\r\n                const claim = book.claim;\r\n                const date = entry.timestamp.split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                const retDate = entry.return_date.split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                hist.push(\r\n                    {\"id\": id, \"title\": title, \"rentDate\": date, \"retDate\": retDate, \"claim\": claim,\r\n                     \"totalName\": book.series, \"claim_num\": book.claim_num\r\n                    }\r\n                );\r\n\r\n            }\r\n            hist.sort(compareRent);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Request data\");\r\n            console.log(requestData);\r\n        },\r\n        [requestData]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.logged)\r\n        {\r\n            setState(State.LoggedIn);\r\n            const userId = props.doc.userInfo['_id'];\r\n            setUserId(userId);\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            await loadHistory();\r\n            await loadRequest();\r\n        }\r\n        else\r\n        {\r\n            setState(State.LoggedOut);\r\n            setUserId(\"\");\r\n            setPasswordText(\"\");\r\n        }\r\n\r\n        console.log(\"Set title \" + props.doc.logged)\r\n        if (props.doc.logged)\r\n        {\r\n            if (props.doc.adminMode)\r\n                setTitle(props.text.userSearch);\r\n            else\r\n                setTitle(props.text.checkOut);\r\n        }\r\n        else\r\n        {\r\n            setTitle(props.text.logIn);\r\n        }\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index, history) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const claim = rent[\"claim\"];\r\n        const key = index.toString();\r\n        let titleRowSpan;\r\n        if (history)\r\n            titleRowSpan = \"1\"\r\n        else\r\n            titleRowSpan = \"2\"\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" rowSpan={titleRowSpan} className=\"bookName\">\r\n                            {rent.totalName + \" \"}<b>{rent.title}</b>{\" \" + rent.claim_num}\r\n                        </td>\r\n                    </tr>\r\n                    {!history &&\r\n                        <tr key={key + \"Extend\"} className=\"bookExtend\">\r\n                            <td className=\"bookExtend\"> <button id=\"extend\" onClick={async () => extend()} disabled={true}>\r\n                                {props.text.extend}\r\n                            </button></td>\r\n                        </tr>\r\n                    }\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n\r\n    const toggleAutoLogin = () => {\r\n        console.log(\"Toggle autoLogin\");\r\n        const cookieString = \"autoLogin=\" + (autoLogin ? \"false\":\"true\") + \"; expires=\" + expireDate + \";\";\r\n//        console.log(cookieString);\r\n        document.cookie = cookieString;\r\n        setAutoLogin(!autoLogin);\r\n    }\r\n\r\n    const showEntries = (result, history) => {\r\n        let retText;\r\n        if (history)\r\n            retText = props.text.returnDate;\r\n        else\r\n            retText = props.text.dueDate;\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{retText}</th>\r\n                    </tr>\r\n                    {\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index, history);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    const logIn = async () => {\r\n        setState(State.LoggingIn);\r\n        setUserId(userText.toUpperCase());\r\n        await loadUser();\r\n        await loadHistory();\r\n        await loadRequest();\r\n        console.log(\"Log In\");\r\n        await compare();\r\n    }\r\n\r\n    const extend = async () => {\r\n        console.log(\"Extend\");\r\n    }\r\n\r\n    const compare = async () => {\r\n        if (!userData || state === State.LoggedOut)\r\n            return;\r\n\r\n        console.log(toast.isActive(loggingId));\r\n        const prop = toastProp;\r\n\r\n        console.log(passwordText);\r\n        let text;\r\n        const user = userData.user[0];\r\n        if (props.context.checkLogIn(user, passwordText))\r\n        {\r\n            props.doc.logIn(user);\r\n\r\n            setSearchResults(await props.doc.getRent(userId));\r\n            setState(State.LoggedIn);\r\n\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.logInSucceed;\r\n            document.cookie = \"user_id=\" + userId + \"; expires=\" + expireDate + \";\";\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.logInFail;\r\n        }\r\n        prop.render = text;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = loggingId;\r\n        if (toast.isActive(loggingId))\r\n        {\r\n            console.log(\"update toast\");\r\n            toast.update(loggingId, prop);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"New toast\");\r\n            toast.info(text, prop);\r\n        }\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!(state !== State.LoggedIn)}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <input type=\"password\" id=\"searchPassword\"\r\n                    placeholder={props.text.pwHolder}\r\n                    value={passwordText}\r\n                    disabled={!initialized}\r\n                    onInput={(event) => {\r\n                        setPasswordText(event.target.value);\r\n                    }} />\r\n                <div id=\"autoLogin\">\r\n                    <input type=\"checkbox\" id=\"autoLoginButton\" checked={autoLogin} onChange={() => toggleAutoLogin()}/>\r\n                    <label>\r\n                            {props.text.autoLogin}\r\n                    </label>\r\n                </div>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={!(state === State.LoggedIn)}>\r\n                <div>\r\n                    { showEntries(searchResults, false) }\r\n                </div>\r\n\r\n                <div id=\"name\">{props.text.history}</div>\r\n                <ListView list={history} showCallback={(entries) => { return showEntries(entries, true); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loggingId, loadingId, getUserState } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\n//import CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst State = {\r\n    LoggedOut: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn:  2,\r\n    LoggingOut: 3\r\n}\r\n\r\nfunction CheckOut(props) {\r\n    const [userId, setUserId] = useState(\"\");\r\n\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [bookValue] = useDebounce(bookText, 500);\r\n    const [bookId, setBookId] = useState(\"\");\r\n\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n\r\n    const [barcode, setBarcode] = useState(\"\");\r\n\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n\r\n    const [rented, setRented] = useState([]);\r\n    const [userData, setUserData] = useState({});\r\n    const [bookData, setBookData] = useState({});\r\n    const [state, setState] = useState(State.LoggedOut);\r\n\r\n    const { id } = useParams();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"CheckOut initialize\");\r\n            const prefixList = document.getElementsByName(\"idPrefix\");\r\n            for (var i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                const prefix = prefixList[i].id\r\n                if (\"AB\" === prefix)\r\n                    prefixList[i].checked = true\r\n                else\r\n                    prefixList[i].checked = false\r\n\r\n            }\r\n            console.log(\"ID: \" + id);\r\n            if (id && id.length !== 0)\r\n            {\r\n//                setBarcode(id)\r\n                setUserId(id);\r\n                logIn(id);\r\n            }\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n//            console.log(props.doc.serverInfo);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            if (props.doc.admin)\r\n                return;\r\n            import(\"./PageServer.css\");\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                const response = await props.doc.requestGet(url, {});\r\n                const code = response.data.scan;\r\n                if (code) {\r\n                    console.log(code)\r\n                    console.log(state)\r\n                    setBarcode(code)\r\n                }\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!barcode)\r\n                return;\r\n            console.log(\"Updated barcode: \" + barcode);\r\n            console.log(\"state : \" + state);\r\n            if (state === State.LoggedIn)\r\n                setBookId(barcode);\r\n            else if (state === State.LoggedOut)\r\n                logIn(barcode);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [barcode]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            console.log(toast.isActive(loggingId));\r\n            const prop = toastProp;\r\n\r\n            let text;\r\n            let notify = false;\r\n            if (\"USER_CODE\" in userData && state !== State.LoggedIn)\r\n            {\r\n                console.log(\"Set state to LoggedIn from \" + state);\r\n                setState(State.LoggedIn);\r\n\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                text = props.text.logInSucceed;\r\n                notify = true;\r\n            }\r\n            else if (!(\"USER_CODE\" in userData))\r\n            {\r\n                console.log(\"Set state to LoggedOut from \" + state);\r\n\r\n                if (state === State.LoggingIn)\r\n                {\r\n                    prop.type = toast.TYPE.ERROR;\r\n                    text = props.text.logInFail;\r\n                    notify = true;\r\n                }\r\n                setState(State.LoggedOut);\r\n            }\r\n\r\n            if (notify)\r\n            {\r\n                setNotifyRequest({\"id\": loadingId,\r\n                                  \"text\": text,\r\n                                  \"type\": prop.type})\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in bookData)\r\n            {\r\n                if (bookData._STATE === 0)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    setNeedConfirm(false);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n//                setBarcode(\"\")\r\n                setBookId(\"\");\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            console.log(\"Notification \" + notifyRequest.text)\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//            if (\"id\" in notifyRequest)\r\n//                id = notifyRequest.id\r\n\r\n//            prop.toastId = id\r\n//            if (toast.isActive(id))\r\n//                toast.update(id, notifyRequest.text, prop);\r\n//            else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            if (state === State.LoggedIn)\r\n                return;\r\n\r\n            const prefixList = document.getElementsByName(\"idPrefix\");\r\n            var prefix = \"\"\r\n            for (var i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                if (prefixList[i].checked)\r\n                    prefix = prefixList[i].id\r\n                    console.log(\"Pressed [\" + i.toString() + \" \" + prefix + \"]\")\r\n\r\n            }\r\n            let _userId;\r\n            if (userValue[0] === \"A\" || userValue[0] === \"a\")\r\n                _userId = userValue;\r\n            else\r\n                _userId = prefix + userValue;\r\n//                setBarcode(_userId);\r\n            setUserId(_userId);\r\n\r\n        }, [state, userValue]\r\n    );\r\n*/\r\n\r\n    const getUserData = async (userText) => {\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/user?user=\" + userText;\r\n        const param = {\"user\": userText, \"data\":\"nothing\"};\r\n        const response = await props.doc.requestGet(url, param);\r\n        const user = response.data.return;\r\n\r\n        setUserData(user);\r\n        console.log(user);\r\n        setUserId(user.USER_CODE);\r\n    }\r\n\r\n    const logIn = async (inputId = undefined) => {\r\n        var userId;\r\n        var prefix = \"\";\r\n        var i;\r\n        const prefixList = document.getElementsByName(\"idPrefix\");\r\n        if (inputId)\r\n        {\r\n            if (inputId.length <= 2)\r\n                return;\r\n            prefix = inputId.substring(0, 2);\r\n            var found = false;\r\n            for (i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                if (prefix === prefixList[i].id)\r\n                {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found)\r\n                return;\r\n            userId = inputId;\r\n        }\r\n        else\r\n        {\r\n            const userValue = document.getElementById('userInput').value;\r\n            for (i = 0 ; i < prefixList.length ; i++)\r\n            {\r\n                if (prefixList[i].checked)\r\n                    prefix = prefixList[i].id\r\n                    console.log(\"Pressed [\" + i.toString() + \" \" + prefix + \"]\")\r\n\r\n            }\r\n            if (userValue[0] === \"A\" || userValue[0] === \"a\")\r\n                userId = userValue;\r\n            else\r\n                userId = prefix + userValue;\r\n        }\r\n        console.log(\"LOGIN\");\r\n        console.log(userId);\r\n        if (userId.length === 0)\r\n            return;\r\n        console.log(\"Set state to LoggingIn from \" + state );\r\n        setState(State.LoggingIn);\r\n        const _id = userId.toUpperCase();\r\n        getUserData(_id);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Finish\")\r\n        setUserData({});\r\n        setBookData({});\r\n//        setBarcode(\"\");\r\n        setUserId(\"\");\r\n        setBookId(\"\");\r\n        setRented([])\r\n        navigate(\"/\")\r\n    }\r\n\r\n/*\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n*/\r\n\r\n    useEffect(() => {\r\n        async function setBookValue() {\r\n            if (bookValue.length <= 0)\r\n                return;\r\n            var _bookId;\r\n            if (props.doc.admin)\r\n                _bookId = bookValue;\r\n            else\r\n                _bookId = \"HK\" + bookValue;\r\n            console.log(\"Search book1 \" + _bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(_bookId)), \"match\": true}};\r\n            const param = {\"book\": _bookId, \"match\": true};\r\n            const response = await props.doc.requestGet(url, param);\r\n            const book = response.data.return;\r\n            console.log(book)\r\n//                        if ('BOOKNAME' in book)\r\n            if ('books' in book && 'BOOKNAME' in book.books)\r\n            {\r\n                console.log(book.books)\r\n                setBookData(book.books)\r\n            }\r\n        }\r\n        setBookValue()\r\n    }, [bookValue, props.doc]);\r\n\r\n    useEffect(() => {\r\n        async function setBookId() {\r\n            console.log(\"Set bookId: \" + bookId);\r\n            if (bookId.length === 0)\r\n                return;\r\n            console.log(\"Search book2 \" + bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n            const param = {\"book\": bookId, \"match\": true};\r\n            const response = await props.doc.requestGet(url, param);\r\n            const book = response.data.return;\r\n            console.log(book)\r\n            if ('books' in book && 'BOOKNAME' in book.books)\r\n            {\r\n                setBookData(book.books)\r\n            }\r\n        }\r\n        setBookId();\r\n    }, [bookId, props.doc]);\r\n\r\n    useEffect(() => {\r\n        async function setUserId() {\r\n            console.log(\"Set userId: \" + userId);\r\n            if (!userId || userId.length === 0)\r\n                return;\r\n            if (userId.search(\"AA\") === 0 || userId.search(\"AB\") === 0 )\r\n            {\r\n                const prefixList = document.getElementsByName(\"idPrefix\");\r\n                const prefix = userId.substring(0, 2);\r\n                for (var i = 0 ; i < prefixList.length ; i++)\r\n                {\r\n                    const id = prefixList[i].id\r\n                    if (prefix === id)\r\n                        prefixList[i].checked = true\r\n                    else\r\n                        prefixList[i].checked = false\r\n\r\n                }\r\n            }\r\n        }\r\n    setUserId();\r\n    }, [userId]);\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(bookData);\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/checkOut\"\r\n        const param = {\r\n            book: bookData.BARCODE,\r\n            user: userId\r\n        };\r\n        const response = await props.doc.requestPost(url, param);\r\n        const ret = response.data.return\r\n        console.log(\"Rent confirmed\");\r\n        console.log(ret)\r\n\r\n        if (ret === \"SUCCESS\")\r\n        {\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.rentSucceed,\r\n                              \"type\": toast.TYPE.SUCCESS})\r\n            rented.push({\"id\": bookData.BARCODE, \"name\": bookData.BOOKNAME})\r\n            console.log(rented)\r\n            setRented(rented)\r\n        }\r\n        else\r\n        {\r\n            let text\r\n            if (ret in props.text)\r\n                text = props.text[ret];\r\n            else\r\n                text = props.text.NOT_AVAILABLE;\r\n            console.log(text)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": text,\r\n                              \"type\": toast.TYPE.ERROR})\r\n        }\r\n        setBookData({});\r\n//        setBarcode(\"\");\r\n        setBookId(\"\");\r\n        getUserData(userId);\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n    /*\r\n        return (<React.Fragment key={index + \"Fragment\"}>\r\n                    <tr key={index}>\r\n                        <td className=\"bookCell\"> {rent.id} </td>\r\n                        <td colSpan=\"3\" className=\"bookCell\"> {rent.name} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    */\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    <div id=\"dueDate\">\r\n                    {props.text.dueDate} : {props.doc.dueDate}\r\n                    </div>\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n    /*\r\n                    <table><tbody>\r\n                        {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                    </tbody></table>\r\n    */\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setBookData({});\r\n//        setBarcode(\"\")\r\n        setBookId(\"\");\r\n    }\r\n\r\n    function setUserKeyDown(event)\r\n    {\r\n        if (event.key === \"Enter\")\r\n        {\r\n            console.log(event);\r\n            console.log(document.getElementById('userInput').value);\r\n            logIn();\r\n        }\r\n    }\r\n\r\n//            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn ? true : false }>\r\n//            <div id=\"checkOutResult\" hidden={true}>\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.checkOut}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={state === State.LoggedIn}>\r\n                <input type=\"radio\" id = \"AA\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AA\" className=\"idPrefix\" name=\"idPrefix\"> AA </label>\r\n                <input type=\"radio\" id = \"AB\" name=\"idPrefix\"/>\r\n                <label htmlFor=\"AB\" className=\"idPrefix\" name=\"idPrefix\"> AB </label>\r\n                <input type=\"text\" id=\"userInput\" pattern=\"[0-9]*\" inputMode=\"numeric\"\r\n                    placeholder={props.text.idHolder}\r\n                    onKeyDown={(event) => {\r\n                        setUserKeyDown(event);\r\n                    }}/>\r\n               <button id=\"logIn\" onClick={async () => logIn()}> {props.text.logIn} </button>\r\n            </div>\r\n            <div id=\"checkOutResult\" hidden={state !== State.LoggedIn}>\r\n                {userData.USER_CODE && (\r\n                    <div id=\"userInfo\">\r\n                        <div id=\"userItem\">\r\n                            {userData.USER_CODE + \" : \" + userData.USER_NAME + props.text.nameSuffix}\r\n                        </div>\r\n                        <div id=\"userItem\"> {getUserState(props.text, userData.USER_STATE)} </div>\r\n                        <div id=\"userItem\"> {userData._RENT.length + \" \" + props.text.rentSuffix} </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                    <label id=\"manualInput\">\r\n                        <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                        </div>\r\n                        <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"bookInput\"\r\n                            placeholder={props.text.bookHolder}\r\n                            onInput={(event) => {\r\n                                setBookText(event.target.value);\r\n                            }} />\r\n                    </label>\r\n                </div>\r\n                <div id=\"checkRent\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmRent} </div>\r\n                    <div id=\"bookName\"> {bookData.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {bookData.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={async () => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {rented.length > 0 &&\r\n                    <ListView list={rented} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n            <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.finish} </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"../Util\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport ListView from \"../ListView\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Return(props) {\r\n    const [bookText, setBookText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(bookText, 300);\r\n//    const [initialized, setInitialized] = useState(false);\r\n//    const [userId, setUserId] = useState(\"\");\r\n//    const [state, setState] = useState(State.LoggedOut);\r\n//    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY,\r\n//                     { \"variables\": { \"_id\": userId } });\r\n//    const [loadHistory, { data: historyData }] = useLazyQuery(HISTORY_QUERY,\r\n//                     { \"variables\": { \"user_id\": userId } });\r\n    const [scannedBook, setScannedBook] = useState({});\r\n    const [needConfirm, setNeedConfirm] = useState(false);\r\n    const [notifyRequest, setNotifyRequest] = useState({});\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [returned, setReturned] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            props.doc.setCallback(undefined);\r\n            console.log(\"=======================================\");\r\n            console.log(\"Return initialize\");\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            if (props.doc.admin)\r\n                return;\r\n            import(\"./PageServer.css\")\r\n            const ipAddr = props.doc.serverInfo.localIp;\r\n            const portNum = props.doc.serverInfo.port;\r\n            if (ipAddr && ipAddr.length > 0 && portNum > 0)\r\n            {\r\n                const url = \"https://\" + ipAddr + \":\" +\r\n                    portNum + \"/scanBarcode\";\r\n                const response = await props.doc.requestGet(url, {});\r\n                const book = response.data.scan;\r\n                if (book) {\r\n                    console.log(book.search(\"HK\"))\r\n                    if (book.search(\"HK\") === 0) {\r\n                        console.log(barcode + \" -> \" + book)\r\n                        setBarcode(book)\r\n                    }\r\n                }\r\n            }\r\n        }, 1000)\r\n\r\n        initialize();\r\n        return () => clearInterval(interval);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            let rawHist = [];\r\n            if (!historyData || !props.doc.bookReady || !props.doc.rentReady)\r\n                return;\r\n            console.log(\"History updated \");\r\n//            console.log(historyData);\r\n            for (let i = 0 ; i < historyData[\"rentLogs\"].length ; i++)\r\n            {\r\n                const entry = historyData[\"rentLogs\"][i];\r\n                if (entry[\"book_state\"] !== \"0\" && entry[\"book_state\"] !== \"1\")\r\n                    continue;\r\n                const id = entry[\"book_id\"];\r\n                const date = entry[\"timestamp\"].split(\" \")[0].replace(\"-\", \"/\", 2).replace(\"-\", \"/\")\r\n                rawHist.push({\"id\": id, \"title\": props.doc.book[id][\"title\"], \"date\": date, \"state\": entry[\"book_state\"]});\r\n            }\r\n            rawHist.sort((s1, s2) => { return s1[\"date\"] > s2[\"date\"]; });\r\n//            console.log(rawHist);\r\n\r\n            let hist = [];\r\n            for (let i = 0 ; i < rawHist.length - 1 ; i++)\r\n            {\r\n                if (rawHist[i][\"state\"] !== \"1\")\r\n                    continue;\r\n                const entry  = rawHist[i];\r\n                const id = entry[\"id\"];\r\n                for (let j = i+1 ; j < rawHist.length ; j++)\r\n                {\r\n                    if (rawHist[j][\"state\"] !== \"0\" || id !== rawHist[j][\"id\"])\r\n                        continue;\r\n                    hist.push({\"id\": entry[\"id\"], \"title\": entry[\"title\"], \"rentDate\": entry[\"date\"], \"retDate\": rawHist[j][\"date\"]});\r\n                    break;\r\n                }\r\n            }\r\n//            console.log(hist);\r\n            console.log(\"Set history\");\r\n            setHistory(hist);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, props.doc.bookReady, props.doc.rentReady]\r\n    );\r\n*/\r\n\r\n    useEffect(() => {\r\n        async function setBookId() {\r\n            if (bookText.length > 0)\r\n            {\r\n                var bookId;\r\n                if (props.doc.admin)\r\n                    bookId = bookText;\r\n                else\r\n                    bookId = \"HK\" + bookText;\r\n                console.log(\"Search book1 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n//                const obj = {\"params\": {\"book\": btoa(toUtf8(bookId)), \"match\": true}};\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        }\r\n        setBookId();\r\n    }, [searchQuery, props.doc, bookText]);\r\n\r\n    useEffect(() => {\r\n        async function setBarcode()  {\r\n            console.log(\"B\" + barcode);\r\n            if (barcode.length > 0)\r\n            {\r\n                const bookId = barcode;\r\n                console.log(\"Search book2 \" + bookId);\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/book\";\r\n                const param = {\"book\": bookId, \"match\": true};\r\n                const response = await props.doc.requestGet(url, param);\r\n                const book = response.data.return;\r\n                console.log(book)\r\n                if ('books' in book && 'BOOKNAME' in book.books)\r\n                {\r\n                    setScannedBook(book.books)\r\n                }\r\n            }\r\n        }\r\n        setBarcode();\r\n    }, [barcode, props.doc]);\r\n\r\n/*\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n*/\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"book updated \");\r\n            if (\"BARCODE\" in scannedBook)\r\n            {\r\n                if (scannedBook._STATE === 1 || scannedBook._STATE === 3)\r\n                {\r\n                    setNeedConfirm(true);\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Not rented\")\r\n                    setNotifyRequest({\"id\": loadingId,\r\n                                      \"text\": props.text.NOT_RENTED,\r\n                                      \"type\": toast.TYPE.ERROR})\r\n                    document.getElementById('barcodeScan').value= null;\r\n                    setNeedConfirm(false);\r\n                    setBarcode(\"\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setNeedConfirm(false);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [scannedBook]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (! (\"text\" in notifyRequest))\r\n                return\r\n\r\n            toast.dismiss();\r\n            const prop = toastProp;\r\n            prop.type = notifyRequest.type\r\n            prop.autoClose = 3000;\r\n//            let id = 0\r\n//           if (\"id\" in notifyRequest)\r\n//               id = notifyRequest.id\r\n\r\n//           prop.toastId = id\r\n //          if (toast.isActive(id))\r\n//               toast.update(id, notifyRequest.text, prop);\r\n//           else\r\n                toast.info(notifyRequest.text, prop);\r\n//            setNotifyRequest({})\r\n        },\r\n        [notifyRequest]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Returned updated\");\r\n            console.log(returned);\r\n            if (!(\"localIp\" in props.doc.serverInfo) || !(\"port\" in props.doc.serverInfo))\r\n                return;\r\n            console.log(\"Update return list\");\r\n            const bookId = \"HK\" + bookText;\r\n            console.log(\"Search book1 \" + bookId);\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const param = {\"books\": returned};\r\n            props.doc.requestGet(url, param);\r\n        },\r\n        [returned, bookText, props.doc]\r\n    );\r\n\r\n    async function confirmAction()\r\n    {\r\n        console.log(\"Confirmed\");\r\n        setNeedConfirm(false);\r\n        console.log(scannedBook);\r\n\r\n        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/return\"\r\n        const param = {\r\n            book: scannedBook.BARCODE\r\n        }\r\n        const response = await props.doc.requestPost(url, param)\r\n        const ret = response.data.return;\r\n        console.log(ret);\r\n        if (ret === \"SUCCESS\")\r\n        {\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": props.text.returnSucceed,\r\n                              \"type\": toast.TYPE.SUCCESS})\r\n            returned.push({\"id\": scannedBook.BARCODE, \"name\": scannedBook.BOOKNAME})\r\n            console.log(returned)\r\n            setReturned(returned)\r\n        }\r\n        else\r\n        {\r\n            let text\r\n            if (ret in props.text)\r\n                text = props.text[ret];\r\n            else\r\n                text = props.text.NOT_AVAILABLE;\r\n            console.log(text)\r\n            setNotifyRequest({\"id\": loadingId,\r\n                              \"text\": text,\r\n                              \"type\": toast.TYPE.ERROR})\r\n        }\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function cancelAction()\r\n    {\r\n        console.log(\"Cancelled\")\r\n        setNeedConfirm(false);\r\n        setScannedBook({});\r\n        setBarcode(\"\")\r\n    }\r\n\r\n    function showEntry(index, rent)\r\n    {\r\n        return (<div id=\"bookEntry\" key={rent.id}>\r\n                    <div id=\"bookItem\"> {rent.id} </div>\r\n                    <div id=\"bookItem\"> {rent.name} </div>\r\n                </div>);\r\n    }\r\n\r\n    function showBook(books)\r\n    {\r\n        return (<div id=\"bookList\">\r\n                    {books.map((rent, index) => { return showEntry(index, rent) })}\r\n                </div>);\r\n    }\r\n\r\n    const logOut = async () => {\r\n        console.log(\"Finish\")\r\n        navigate(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.return}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <div id=\"bookInput\" hidden={needConfirm}>\r\n                <label id=\"barcodeScan\" hidden>\r\n                    <CameraAltIcon fontSize=\"large\" sx={{color: \"#404040\"}} />\r\n                    <span>\r\n                    </span>\r\n                </label>\r\n                <label id=\"manualInput\">\r\n                    <div id=\"hkPrefix\">\r\n                        {props.text.numberOnly}\r\n                    </div>\r\n                    <input inputMode=\"numeric\" pattern=\"\\d*\" type=\"text\" id=\"searchInput\"\r\n                        placeholder={props.text.bookHolder}\r\n                        onInput={(event) => {\r\n                            setBookText(event.target.value);\r\n                        }} />\r\n                </label>\r\n                </div>\r\n                <div id=\"checkReturn\" hidden={!needConfirm}>\r\n                    <div id=\"bookName\"> {props.text.confirmReturn} </div>\r\n                    <div id=\"bookName\"> {scannedBook.AUTHOR + \":\"} </div>\r\n                    <div id=\"bookName\"> {scannedBook.BOOKNAME} </div>\r\n                    <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\r\n                    <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\r\n                </div>\r\n                {returned.length > 0 &&\r\n                    <ListView list={returned} showCallback={(entry) => {return showBook(entry)}}/>\r\n                }\r\n            </div>\r\n            <button id=\"logOutButton\" onClick={() => logOut()}> {props.text.finish} </button>\r\n        </div>\r\n    );\r\n}\r\n//                    <input inputMode=\"numeric\" pattern=\"[0-9]*\" type=\"text\" id=\"searchInput\"\r\n\r\nexport default Return;\r\n","import { useEffect, useState } from \"react\";\nimport { toUtf8 } from \"./Util\";\nimport \"./UserInfo.css\";\n\nfunction UserInfo(props) {\n    const [needConfirm, setNeedConfirm] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(function() {\n        console.log(\"User Info\");\n        console.log(props.info);\n        document.getElementById('userName').value = props.info.USER_NAME ? props.info.USER_NAME : \"\";\n        document.getElementById('phone').value = props.info.PHONE_NUMBER ? props.info.PHONE_NUMBER : \"\";\n        document.getElementById('email').value = props.info.EMAIL ? props.info.EMAIL : \"\";\n        document.getElementById('address').value = props.info.ADDRESS ? props.info.ADDRESS : \"\";\n        document.getElementById('notice_').value = props.info.NOTICE ? props.info.NOTICE : \"\";\n        document.getElementById('user_level').value = props.info.USER_LEVEL;\n        setUserInfo({\"USER_CODE\": props.info.USER_CODE});\n        setDisabled(true);\n\n    }, [props.info]);\n\n    function setProperty(index, value)\n    {\n        console.log(index);\n        console.log(value);\n        var info = userInfo;\n        switch (index)\n        {\n        case 0:\n            info.USER_NAME = value;\n            break;\n        case 1:\n            info.PHONE_NUMBER = value;\n            break;\n        case 2:\n            info.EMAIL = value;\n            break;\n        case 3:\n            info.ADDRESS = value;\n            break;\n        case 4:\n            info.USER_LEVEL = value;\n            break;\n        case 5:\n            info.NOTICE = value;\n            break;\n        default:\n            break;\n        }\n        const length = Object.keys(info).length;\n        console.log(length);\n//        if (length >= 1 && \"USER_LEVEL\" in info && info.USER_LEVEL >= 0 && info.USER_LEVEL <= 2)\n        if (length > 1)\n            setDisabled(false);\n        setUserInfo(info);\n    }\n\n    async function confirmAction()\n    {\n        console.log(\"Save modification\");\n        console.log(userInfo);\n        const ipAddr = props.doc.serverInfo.localIp;\n        const portNum = props.doc.serverInfo.port;\n        if (ipAddr.length === 0 || portNum <= 0)\n            return;\n\n        const url = \"https://\" + ipAddr + \":\" +\n            portNum + \"/user\";\n\n        var obj = {};\n        console.log(userInfo)\n        for (const key in userInfo)\n        {\n            obj[key] = btoa(toUtf8(userInfo[key]));\n        }\n        const response = await props.doc.requestPost(url, obj);\n        console.log(response);\n        props.refresh(response);\n        setNeedConfirm(false);\n    }\n\n    function cancelAction()\n    {\n        setNeedConfirm(false);\n    }\n\n    return (\n        <div>\n            <table><tbody>\n                <tr key=\"Name\">\n                    <td> {props.text.name} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"userName\" onChange={(event) => {setProperty(0, event.target.value);}} />\n                    </td>\n                </tr>\n                {\"REG_DATE\" in props.info &&\n                    <tr key=\"Register\">\n                        <td> {props.text.registeredDate} </td>\n                        <td colSpan=\"3\" className=\"data\">\n                            {props.info.REG_DATE}\n                        </td>\n                    </tr>\n                }\n                <tr key=\"Phone\">\n                    <td> {props.text.phone} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"phone\" onChange={(event) => {setProperty(1, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Email\">\n                    <td> {props.text.email} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"email\" onChange={(event) => {setProperty(2, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Address\">\n                    <td> {props.text.address} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"address\" onChange={(event) => {setProperty(3, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Notice\">\n                    <td> {props.text.notice_} </td>\n                    <td colSpan=\"3\">\n                        <input type=\"text\" className=\"input\" id=\"notice_\" onChange={(event) => {setProperty(5, event.target.value);}} />\n                    </td>\n                </tr>\n                <tr key=\"Level\">\n                    <td> {props.text.level} </td>\n                    <td colSpan=\"3\" className=\"cell\">\n                        <select name=\"User Level\" id=\"user_level\" className=\"dropdown\" onChange={(event) => {setProperty(4, event.target.value);}}>\n                            <option value=\"0\"> {props.text.kid} </option>\n                            <option value=\"1\"> {props.text.adult} </option>\n                            <option value=\"2\"> {props.text.admin} </option>\n                        </select>\n                    </td>\n                </tr>\n            </tbody></table>\n           <button id=\"modify\" hidden={needConfirm} onClick={async () => setNeedConfirm(true)} disabled={disabled}> {props.text.save} </button>\n            <div id=\"checkModify\" hidden={!needConfirm}>\n                <div id=\"noticeMsg\"> {props.text.confirmSave} </div>\n                <button id=\"confirm\" onClick={() => confirmAction()}> {props.text.confirm} </button>\n                <button id=\"cancel\" onClick={() => cancelAction()}> {props.text.cancel} </button>\n            </div>\n        </div>\n    );\n}\nexport default UserInfo;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { toastProp, MAX_SEARCH_ENTRY, getUserState, toUtf8, compareUser } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useNavigate, Link, Navigate, useParams } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport UserInfo from \"../UserInfo\";\r\n\r\n//var rentList = [];\r\n\r\nfunction CheckOut(props) {\r\n    const [userText, setUserText] = useState(\"\");\r\n    const [searchQuery] = useDebounce(userText, 300);\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n//    const [selectedId, setSelectedId] = useState(0);\r\n    const selectedRef = useRef(\"0\");\r\n    const { id } = useParams();\r\n    const [rentList, setRentList] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized)\r\n            {\r\n                return;\r\n            }\r\n            if (props.doc.isOpen())\r\n                updateDoc(false);\r\n            else\r\n                props.doc.setCallback(updateDoc);\r\n            console.log(\"=======================================\");\r\n            console.log(\"UserSearch initialize\");\r\n            console.log(\"User ID: \" + id);\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data updated \");\r\n            updateDoc(false);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [props.logged]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.user;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n\r\n    async function updateDoc(notify = true)\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n\r\n        if (notify)\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.succeededToOpen, prop);\r\n        }\r\n        console.log(\"Set title \" + props.logged)\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n    }\r\n\r\n    async function extend(key)\r\n    {\r\n        console.log(\"Extend \" + key);\r\n        const ipAddr = props.doc.serverInfo.localIp;\r\n        const portNum = props.doc.serverInfo.port;\r\n        if (ipAddr.length === 0 || portNum <= 0)\r\n            return;\r\n\r\n        const url = \"https://\" + ipAddr + \":\" +\r\n            portNum + \"/extend\";\r\n        var obj = {};\r\n        obj[\"book\"] = key\r\n\r\n        const ret = await props.doc.requestPost(url, obj);\r\n        console.log(\"Extended\")\r\n        console.log(ret)\r\n        selectId(selectedRef.current, true);\r\n        if (ret.data.return === \"SUCCESS\")\r\n        {\r\n            const prop = toastProp;\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            prop.render = props.text.succeededToOpen;\r\n            prop.autoClose = 3000;\r\n            prop.toastId = \"\";\r\n            toast.info(props.text.extend, prop);\r\n        }\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n        const bookName = rent[\"title\"];\r\n        const extendCount = rent.extendCount;\r\n        const key = index.toString();\r\n//                        <td colSpan={props.doc.serverAvailable?\"3\":\"2\"} className=\"bookName\">{bookName}</td>\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookData\">\r\n                        <td className=\"bookData\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookData\">{rentDate}</td>\r\n                        <td className=\"bookData\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookName\">\r\n                        <td colSpan={props.doc.serverAvailable?\"2\":\"3\"} className=\"bookName\">{bookName}</td>\r\n                        {props.doc.serverAvailable &&\r\n                            <td className=\"bookName\"><button className=\"extend\" onClick={() => extend(id)}>{props.text.extend + \" (\" + extendCount.toString() + \")\"}</button></td>\r\n                        }\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const selectId = async (id, forceSelect = false) => {\r\n        const rent = await props.doc.getRent(id);\r\n        console.log(rent);\r\n        if (selectedRef.current === -1 || selectedRef.current !== id || forceSelect )\r\n        {\r\n            console.log(\"Select \" + id);\r\n//            setSelectedId(id);\r\n            selectedRef.current = id;\r\n            console.log(\"Set Rent List\");\r\n            console.log(rent)\r\n            setRentList(rent);\r\n//            rentList = rent;\r\n        }\r\n        else if (searchResults.length > 1)\r\n        {\r\n            console.log(\"Deselect \" + id);\r\n//            setSelectedId(-1);\r\n            selectedRef.current = -1;\r\n            setRentList([]);\r\n//            rentList = [];\r\n        }\r\n    }\r\n\r\n    const showUser = (user, detail, index) => {\r\n        const key = index.toString();\r\n        return (\r\n                <div key={key}>\r\n                    <table><tbody>\r\n                        <tr key={user.id} className=\"searchTr\" onClick={async ()=> await selectId(user.id)}>\r\n                            <td className=\"bookData\">{user.id}</td>\r\n                            <td className=\"bookData\">{user.name}</td>\r\n                            <td className=\"bookData\">{user.state}</td>\r\n                            <td className=\"bookData\">{user.rent}</td>\r\n                        </tr>\r\n                    </tbody></table>\r\n                        {user.id === selectedRef.current && showEntries(user, detail) }\r\n                </div>\r\n                );\r\n    }\r\n\r\n    const showUsers = (result, detail) => {\r\n        return (<div>\r\n                    {\r\n                        result.map((user, index) => {\r\n                            return showUser(user, detail, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result.length === 0 &&\r\n                        <table><tbody>\r\n                            <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                        </tbody></table>\r\n                    }\r\n                </div>);\r\n    }\r\n\r\n    const showEntries = (user, detail) => {\r\n        console.log(\"Detail\");\r\n        console.log(user);\r\n        return (<>\r\n                    {props.doc.serverAvailable &&\r\n                        <div>\r\n                        <UserInfo text={props.text} doc={props.doc} info={user} refresh={refresh}/>\r\n                        <button id=\"modify\" onClick={() => navigate(\"/checkOut/\" + user.USER_CODE)}> {props.text.checkOut} </button>\r\n                        </div>\r\n                    }\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        detail.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        detail.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </>);\r\n    }\r\n    useEffect(\r\n        () => {\r\n            async function findUsers(text) {\r\n                let results = [];\r\n\r\n//                for (let i = 0 ; i < userList.length ; i++) {\r\n                  for (const key in userList) {\r\n                    const row = userList[key];\r\n                    if (results.length >= MAX_SEARCH_ENTRY) break;\r\n                    if ((row.name && row.name.toString().includes(text)) ||\r\n                        (row.id.toLowerCase() === text.toLowerCase()))\r\n                    {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                results.sort(compareUser);\r\n                console.log(results);\r\n                return results;\r\n            }\r\n            async function query() {\r\n                const input = userText.trim()\r\n                console.log(\"Query \" + input + \" \" + searchQuery)\r\n                if (input.length > 0 && searchQuery) {\r\n\r\n                    let sr;\r\n                    if (props.doc.serverAvailable)\r\n                    {\r\n                        console.log(\"from CLIB\")\r\n                        const url = \"https://\" + props.doc.serverInfo.localIp + \":\" + props.doc.serverInfo.port + \"/users\";\r\n                        const param = {\"user\": btoa(toUtf8(input))};\r\n                        const response = await props.doc.requestGet(url, param);\r\n                        const users = response.data.return.data;\r\n                        console.log(response.data.return);\r\n                        sr = [];\r\n                        if (users) {\r\n                            for (const entry of response.data.return.data)\r\n                            {\r\n                                console.log(entry);\r\n                                let user = entry;\r\n                                user.id = entry.USER_CODE;\r\n                                user.name = entry.USER_NAME;\r\n                                user.state = getUserState(props.text, entry.USER_STATE);\r\n                                user.rent = entry._RENT.length;\r\n                                sr.push(user);\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"from DB\")\r\n                        sr = await findUsers(searchQuery);\r\n                    }\r\n\r\n                    if (sr.length > 0)\r\n                        setSearchResults(sr);\r\n                    else\r\n                        setSearchResults([]);\r\n                    if (sr.length === 1)\r\n                       selectId(sr[0].id);\r\n                   else\r\n                       selectId(0);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n       [searchQuery, props, userList, queryRequest, userText]\r\n    );\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.userSearch}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                <input type=\"text\" id=\"searchInput\"\r\n                    placeholder={props.text.idHolder}\r\n                    value={userText}\r\n                    onChange={(event) => {\r\n                        setUserText(event.target.value);\r\n                    }} />\r\n                <div>\r\n                    <ListView keyValue={searchQuery} list={searchResults} detail={rentList} showCallback={(entries, detail) => { return showUsers(entries, detail); }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getBookState, compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [userList, setUserList] = useState({});\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.user;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [userList]\r\n    );\r\n\r\n    async function updateDoc()\r\n    {\r\n        console.log(\"All data loaded \" + initialized);\r\n        if (props.doc.serverAvailable)\r\n        {\r\n            let results = [];\r\n            const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                props.doc.serverInfo.port + \"/book\";\r\n            const param = {\"user\": \"*\", \"match\":false};\r\n//            console.log(obj);\r\n            const response = await props.doc.requestGet(url, param);\r\n//           console.log(response)\r\n//            if (!(\"books\" in response.data.return))\r\n//                return results;\r\n            const books = response.data.return.books;\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                const state = book._STATE;\r\n                let retDate = \"\";\r\n                if (state === 1 || state === 3 || state === \"1\" || state === \"3\")\r\n                {\r\n                    retDate = book.RETURN_DATE;\r\n                }\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: book.BOOKNAME,\r\n                    id: book.BARCODE,\r\n                    rent: getBookState(props.text, book.STATS.toString()),\r\n                    rentDate: book.LENT_DATE,\r\n                    retDate: retDate,\r\n                    author: book.AUTHOR,\r\n                    totalName: book.TOTAL_NAME,\r\n                    claim_num: book.CLAMENUM,\r\n                    publish: book.PUBLISH,\r\n                    claim: book.CLAIM,\r\n                    user: book.USER,\r\n                    userName: book.USER_NAME\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n            setRentList(results);\r\n        }\r\n        else\r\n        {\r\n\r\n            const rent = await props.doc.getRent();\r\n            console.log(\"Rent\");\r\n            console.log(rent);\r\n            rent.sort(compareRent);\r\n            for (const index in rent)\r\n            {\r\n                const userId = rent[index][\"user\"];\r\n                let userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                rent[index][\"userName\"] = userName;\r\n//                console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n            }\r\n            setRentList(rent);\r\n        }\r\n\r\n        console.log(\"Done\");\r\n        setInitialized(true);\r\n    }\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n//        const bookName = rent[\"title\"];\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        const claim = rent[\"claim\"];\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookName\">\r\n                        {rent.totalName + \" \"}<b>{rent.title}</b>{\" \" + rent.claim_num}\r\n                        </td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.dueDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"situation\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.situation}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue=\"\" list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport \"./Page.css\"\r\nimport { getUserState } from \"../Util\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { compareRent } from \"../Util\";\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query.js\";\r\n//import {USERS_QUERY, HISTORY_PERIOD_QUERY} from \"../api/query_test.js\";\r\nimport ListView from \"../ListView\";\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nfunction RentHistory(props) {\r\n    const [rentList, setRentList] = useState([]);\r\n//    const [initialized, setInitialized] = useState(false);\r\n    const [fromTime, setFromTime] = useState(\"\");\r\n    const [toTime, setToTime] = useState(\"\");\r\n    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n    const [loadHistory, {loading: historyLoading, data: historyData, error: historyError }] = useLazyQuery(HISTORY_PERIOD_QUERY,\r\n            {\"variables\": { \"fromTime\" : fromTime, \"toTime\": toTime}});\r\n    const [userList, setUserList] = useState({});\r\n    const [yearValue, setYear] = useState(0);\r\n    const [monthValue, setMonth] = useState(0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [searchQuery] = useDebounce(query, 300);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"=======================================\");\r\n            console.log(\"RentHistory initialize\");\r\n\r\n            if (!props.doc.initialized)\r\n                return;\r\n\r\n            var i;\r\n            var option;\r\n            var year = document.getElementById('year')\r\n            var month = document.getElementById('month')\r\n            for (i = 1; i <= 12 ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                month.add(option, i);\r\n            }\r\n            const thisYear = new Date().getFullYear();\r\n            const thisMonth = new Date().getMonth() + 1;\r\n            const fromYear = 2017;\r\n\r\n            for (i = fromYear ; i <= thisYear ; i++)\r\n            {\r\n                option = document.createElement('option');\r\n                option.text = i.toString();\r\n                year.add(option, i);\r\n            }\r\n\r\n            console.log(thisYear);\r\n            console.log(thisMonth);\r\n            setYear(thisYear);\r\n            setMonth(thisMonth);\r\n            document.getElementById('year').value = thisYear;\r\n            document.getElementById('month').value = thisMonth;\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./PageServer.css\");\r\n//                updateDoc();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Load users\");\r\n                loadUser();\r\n            }\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                const users = userListData.user;\r\n//                const users = userListData.user_tests;\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    const user = users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                props.doc.setUser(list);\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props.doc, props.text]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"History update\")\r\n\r\n            if (!historyData)\r\n                return\r\n\r\n//            console.log(historyData.rentLog_tests)\r\n\r\n            const books = historyData.rentLog;\r\n//            const books = historyData.rentLog_tests;\r\n            let results = [];\r\n            let retDate = \"\";\r\n            for (let i = 0 ; i < books.length ; i++)\r\n            {\r\n                const book = books[i];\r\n                const state = book.book_state;\r\n                if (state !== \"1\" && state !== 1)\r\n                    continue\r\n                if (!book.return_date || book.return_date.length === 0)\r\n                    continue\r\n//                console.log(book)\r\n                const bookId = book.book_id;\r\n                const userId = book.user_id;\r\n                var userName;\r\n                if (userList && userId in userList)\r\n                    userName = userList[userId].name;\r\n                else\r\n                    userName = \"\"\r\n                var bookInfo;\r\n                if (bookId in props.doc.book)\r\n                {\r\n                    bookInfo = props.doc.book[bookId];\r\n                }\r\n                else\r\n                {\r\n                    bookInfo = {}\r\n                    bookInfo.author = \"\"\r\n                    bookInfo.totalName = \"\"\r\n                    bookInfo.claim_num = \"\"\r\n                    bookInfo.publish = \"\"\r\n                    bookInfo.title = \"\"\r\n                }\r\n//                console.log(bookInfo)\r\n                const resultString = `${bookInfo.title} ${bookInfo.claim_num}`;\r\n                retDate = book.return_date;\r\n                let resultObject = {\r\n                    index: i,\r\n                    text: resultString,\r\n                    title: bookInfo.title,\r\n                    id: bookId,\r\n                    rentDate: book.timestamp,\r\n                    retDate: retDate,\r\n                    author: bookInfo.author,\r\n                    totalName: bookInfo.series,\r\n                    claim_num: bookInfo.claim_num,\r\n                    publish: bookInfo.publisher,\r\n                    claim: bookInfo.claim,\r\n                    user: userId,\r\n                    userName: userName\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n            results.sort(compareRent);\r\n            console.log(results);\r\n            setRentList(results);\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [historyData, historyLoading, historyError]\r\n    );\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            updateDoc();\r\n        }, [userList]\r\n    );\r\n*/\r\n\r\n/*\r\n    async function updateDoc()\r\n    {\r\n        setInitialized(true);\r\n    }\r\n*/\r\n\r\n    const showRented = (rent, index) => {\r\n        const id = rent[\"id\"];\r\n        const rentDate = rent[\"rentDate\"];\r\n        const retDate = rent[\"retDate\"];\r\n//        const bookName = rent.totalName + \" \" + rent.title + \" \" + rent.claim_num\r\n        const claim = rent.claim;\r\n        const userId = rent[\"user\"];\r\n        const userName = rent[\"userName\"];\r\n        const key = index.toString();\r\n        /*\r\n        var userName;\r\n        if (userList && userId in userList)\r\n            userName = userList[userId].name;\r\n        else\r\n            userName = \"\"\r\n        */\r\n        return (<React.Fragment key={key + \"Fragment\"}>\r\n                    <tr key={key} className=\"bookTop\">\r\n                        <td className=\"bookCell\"><Link to={\"/search/\"+id}>{id}</Link></td>\r\n                        <td className=\"bookCell\">{rentDate}</td>\r\n                        <td className=\"bookCell\">{retDate}</td>\r\n                    </tr>\r\n                    <tr key={key + \"Title\"} className=\"bookRow\">\r\n                        <td className=\"bookName\">{claim}</td>\r\n                        <td colSpan=\"2\" className=\"bookCell\">\r\n                        {rent.totalName + \" \"}<b>{rent.title}</b>{\" \" + rent.claim_num}\r\n                        </td>\r\n                    </tr>\r\n                    <tr key={key + \"Renter\"} className=\"bookBottom\">\r\n                        <td className=\"bookCell\"><Link to={\"/userSearch/\"+userId}> {userId} </Link></td>\r\n                        <td colSpan=\"2\" className=\"bookCell\"> {userName} </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n                );\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        return (<div>\r\n                    <table><tbody>\r\n                    <tr key=\"ID\">\r\n                        <th id=\"id\">{props.text.id}</th>\r\n                        <th id=\"rentDate\">{props.text.rentDate}</th>\r\n                        <th id=\"returnDate\">{props.text.returnDate}</th>\r\n                    </tr>\r\n                    {\r\n                        result &&\r\n                        result.map((rent, index) => {\r\n                            return showRented(rent, index);\r\n                        })\r\n                    }\r\n                    {\r\n                        result && result.length === 0 && <tr key=\"None\"><td colSpan=\"3\">{props.text.noEntry}</td></tr>\r\n                    }\r\n                    </tbody></table>\r\n                </div>);\r\n    }\r\n    function setProperty(index, value)\r\n    {\r\n        console.log(index);\r\n        console.log(value);\r\n        switch (index)\r\n        {\r\n            case 0:\r\n                setYear(value);\r\n                break;\r\n            case 1:\r\n                setMonth(parseInt(value));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(function () {\r\n        setQuery(yearValue.toString() + \"-\" + monthValue.toString().padStart(2, \"0\"))\r\n\r\n    }, [yearValue, monthValue]\r\n    );\r\n\r\n    useEffect(function () {\r\n        async function search()\r\n        {\r\n            console.log(\"Search\")\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                const url = \"https://\" + props.doc.serverInfo.localIp + \":\" +\r\n                    props.doc.serverInfo.port + \"/history\";\r\n                const param = {\"period\": query};\r\n                const response = await props.doc.requestGet(url, param);\r\n                console.log(response);\r\n\r\n                const books = response.data.return.books;\r\n                let results = [];\r\n                let retDate = \"\";\r\n                for (let i = 0 ; i < books.length ; i++)\r\n                {\r\n                    const book = books[i];\r\n                    const resultString = `${book.BOOKNAME} ${book.CLAIMNUM}`;\r\n                    if (\"_RETURN_DATE\" in book)\r\n                    {\r\n                        retDate = book._RETURN_DATE;\r\n                    }\r\n                    let resultObject = {\r\n                        index: i,\r\n                        text: resultString,\r\n                        title: book.BOOKNAME,\r\n                        id: book.BARCODE,\r\n        //                rent: getBookState(props.text, book..toString()),\r\n                        rentDate: book.RENT_DATE,\r\n                        retDate: retDate,\r\n                        author: book.AUTHOR,\r\n                        totalName: book.TOTAL_NAME,\r\n                        claim_num: book.CLAMENUM,\r\n                        publish: book.PUBLISH,\r\n                        claim: book.CLAIM,\r\n                        user: book.USER,\r\n                        userName: book.USER_NAME\r\n                    };\r\n                    results.push(resultObject);\r\n                }\r\n                results.sort(compareRent);\r\n                setRentList(results);\r\n            }\r\n            else\r\n            {\r\n                var queryTo;\r\n                const nextMonth = monthValue + 1\r\n                queryTo = yearValue.toString() + \"-\" + nextMonth.toString().padStart(2, \"0\")\r\n                setFromTime(query)\r\n                setToTime(queryTo)\r\n                console.log(query)\r\n                console.log(queryTo)\r\n\r\n                try {\r\n                    await loadHistory();\r\n                }\r\n                catch (e)\r\n                {\r\n                    console.warn(e.name);\r\n                }\r\n\r\n    /*\r\n                for (const index in rent)\r\n                {\r\n                    const userId = rent[index][\"user\"];\r\n                    let userName;\r\n                    if (userList && userId in userList)\r\n                        userName = userList[userId].name;\r\n                    else\r\n                        userName = \"\"\r\n                    rent[index][\"userName\"] = userName;\r\n                    console.log(\"UserName \" + userId + \" \" + index.toString() + \" \" + userName);\r\n                }\r\n                setRentList(rent);\r\n    */\r\n            }\r\n        }\r\n        search();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery]\r\n    );\r\n\r\n    function movePrev()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month > 1)\r\n        {\r\n            month -= 1\r\n        }\r\n        else\r\n        {\r\n            year -= 1;\r\n            month = 12;\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    function moveNext()\r\n    {\r\n        var year = yearValue;\r\n        var month = monthValue;\r\n        if (typeof year === \"string\")\r\n            year = parseInt(year)\r\n        if (typeof month === \"string\")\r\n            month = parseInt(month)\r\n        console.log(year);\r\n        console.log(month);\r\n        console.log(typeof year);\r\n        console.log(typeof month);\r\n        if (month < 12)\r\n        {\r\n            month += 1\r\n        }\r\n        else\r\n        {\r\n            year += 1\r\n            month = 1\r\n        }\r\n        setYear(year)\r\n        setMonth(month)\r\n\r\n        document.getElementById('year').value = year;\r\n        document.getElementById('month').value = month;\r\n    }\r\n\r\n    if (!props.doc.initialized)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.history}\r\n                </h2>\r\n            </div>\r\n            <div id=\"searchRange\">\r\n                <div className=\"page\" id = \"page\">\r\n                    <NavigateBeforeIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {movePrev();} }/>\r\n                </div>\r\n                <select name=\"year\" id=\"year\" className=\"dropdown\" onChange={(event) => {setProperty(0, event.target.value);}}/>\r\n                <select name=\"month\" id=\"month\" className=\"dropdown\" onChange={(event) => {setProperty(1, event.target.value);}}/>\r\n                    <div className=\"page\" id = \"page\">\r\n                        <NavigateNextIcon fontSize=\"large\" sx={{color: \"#404040\"}} onClick={() => {moveNext();} }/>\r\n                    </div>\r\n            </div>\r\n            <div id=\"checkOutResult\">\r\n                <ListView keyValue={searchQuery} list={rentList} showCallback={(entries) => { return showEntries(entries); }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Page.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp } from \"../Util\";\r\nimport { Navigate } from 'react-router-dom'\r\nimport UserInfo from \"../UserInfo\";\r\n\r\nfunction NewMember(props) {\r\n//    const [userText, setUserText] = useState(\"\");\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [queryRequest, toggleQueryRequest] = useState(false);\r\n//    const [loadUser, {loading: userLoading, data: userListData, error: userError }] = useLazyQuery(USERS_QUERY);\r\n//    const [userList, setUserList] = useState({});\r\n//    const { id } = useParams();\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            if (!props.doc.initialized || !props.doc.serverAvailable)\r\n            {\r\n                return;\r\n            }\r\n            import(\"./PageServer.css\");\r\n            console.log(\"=======================================\");\r\n            console.log(\"NewMember initialize\");\r\n            prepareNewMember();\r\n        }\r\n\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Updated id: \" + id);\r\n            if (id)\r\n            {\r\n                setUserText(id);\r\n            }\r\n            else\r\n            {\r\n                setUserText(\"\");\r\n            }\r\n        }, [id]\r\n    );\r\n*/\r\n\r\n    function prepareNewMember()\r\n    {\r\n        var info = {};\r\n        info.USER_CODE = \"\";\r\n        info.USER_NAME = \"\";\r\n        info.PHONE_NUMBER = \"\";\r\n        info.EMAIL = \"\";\r\n        info.ADDRESS = \"\";\r\n        info.NOTICE = \"\";\r\n        info.USER_LEVEL = -1;\r\n        setUserInfo(info);\r\n    }\r\n\r\n/*\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User list loaded\");\r\n            console.log(userError);\r\n            console.log(userLoading);\r\n            if (userListData)\r\n            {\r\n                var list = [];\r\n                console.log(\"User list available\");\r\n                for (let i = 0; i < userListData.users.length; i++)\r\n                {\r\n                    const user = userListData.users[i];\r\n                    const entry = {\"id\": user._id, \"name\": user.name, \"level\": user.level, \"state\": getUserState(props.text, user.state)};\r\n                    list.push(entry)\r\n                }\r\n                console.log(list);\r\n                props.doc.setUser(list);\r\n                console.log(props.doc.getUser());\r\n                setUserList(props.doc.getUser());\r\n            }\r\n        },\r\n        [userListData, userLoading, userError, props]\r\n    );\r\n*/\r\n\r\n    function refresh(response)\r\n    {\r\n        console.log(\"Refresh page \" + queryRequest);\r\n        console.log(response)\r\n        toggleQueryRequest(!queryRequest);\r\n\r\n        const prop = toastProp;\r\n        var text\r\n        if (response.data.return === \"OK\")\r\n        {\r\n            prop.type = toast.TYPE.SUCCESS;\r\n            text = props.text.regSuccess;\r\n            prepareNewMember()\r\n        }\r\n        else\r\n        {\r\n            prop.type = toast.TYPE.ERROR;\r\n            text = props.text.regFail;\r\n        }\r\n        prop.autoClose = 3000;\r\n        toast.info(text, prop);\r\n    }\r\n    if (!props.doc.initialized || !props.doc.serverAvailable)\r\n        return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n        <div id=\"checkOut\">\r\n            <div id=\"title\">\r\n                <h2>\r\n                    {props.text.newMember}\r\n                </h2>\r\n            </div>\r\n            <div id=\"checkOutInput\" hidden={!props.doc.admin}>\r\n                {props.doc.serverAvailable &&\r\n                    <UserInfo text={props.text} doc={props.doc} info={userInfo} refresh={refresh}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMember;\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        this.initialized = false;\r\n        this.bookReady = false;\r\n        this.rentReady = false;\r\n        this.userReady = false;\r\n        this.logged = false;\r\n        this.userInfo = {};\r\n        this.book = {};\r\n        this.rent = {};\r\n        this.logCallback = undefined;\r\n        this.admin = false;\r\n        this.dueDate = \"\";\r\n        this.serverInfo = {};\r\n        this.serverAvailable = false;\r\n        this.ipAddr = \"\"\r\n    }\r\n\r\n    async requestGet(url, param)\r\n    {\r\n        param.os = navigator.platform;\r\n        const obj = {\"params\": param};\r\n        console.log(\"Request GET : \" + url);\r\n//        console.log(obj);\r\n        const response = await axios.get(url, obj);\r\n        return response;\r\n    }\r\n\r\n    async requestPost(url, param)\r\n    {\r\n        console.log(\"Request POST: \" + url);\r\n        param.os = navigator.platform;\r\n//        console.log(param);\r\n        const response = await axios.post(url, param);\r\n\r\n        return response;\r\n    }\r\n\r\n    async updateIpAddr()\r\n    {\r\n        return;\r\n//        const response = await axios.get(\"https://ipv4.seeip.org/jsonip\");\r\n/*\r\n        const response = await axios.get(\"https://api.ipify.org/?format=json\")\r\n        console.log(\"Get IP Address\");\r\n        console.log(response.data);\r\n        const ipAddr = response.data.ip;\r\n        console.log(\"IP addr updated \" + ipAddr)\r\n        this.ipAddr = ipAddr;\r\n        this.checkServerIp()\r\n*/\r\n    }\r\n\r\n    checkServerIp()\r\n    {\r\n        return;\r\n/*\r\n        if (this.ipAddr.length === 0 || !this.serverInfo.globalIp)\r\n            return;\r\n        if (this.serverInfo.globalIp === this.ipAddr)\r\n        {\r\n            console.log(\"Server is accessible \" + this.serverInfo.localIp);\r\n            const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n            this.serverAvailable = true;\r\n            axios.get(query, {\"params\": {\"os\": navigator.platform, }})\r\n                .then( (response) => {\r\n                    console.log(\"Server connected\");\r\n                    console.log(response.data);\r\n                    this.admin = response.data.admin;\r\n                    this.dueDate = response.data.dueDate;\r\n                    this.initialized = true;\r\n                })\r\n                .catch(error => {\r\n                  const query = \"https://\" + this.serverInfo.localIp + \":\" + this.serverInfo.port + \"/check\";\r\n                  window.open(query);\r\n                });\r\n        }\r\n*/\r\n    }\r\n\r\n\r\n    checkState() {\r\n        if (this.bookReady && this.rentReady) {\r\n            this.initialized = true;\r\n            toast.dismiss();\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setLogCallback(callback) {\r\n        this.logCallback = callback;\r\n    }\r\n\r\n    setRent(rent) {\r\n        this.rent = rent\r\n        this.rentReady = true;\r\n        this.checkState();\r\n        this.checkRent();\r\n    }\r\n\r\n    setServerInfo(serverInfo)\r\n    {\r\n        console.log(serverInfo)\r\n        this.serverInfo = serverInfo;\r\n        this.serverInfo = {}\r\n        this.serverInfo.globalIp = serverInfo.globalIp;\r\n\r\n        if (serverInfo.proxy)\r\n        {\r\n            this.serverInfo.localIp = \"libserver.hkmcclibrary.duckdns.org\";\r\n            this.serverInfo.port = 443;\r\n        }\r\n        else\r\n        {\r\n            this.serverInfo.localIp = serverInfo.localIp;\r\n            this.serverInfo.port = serverInfo.port;\r\n        }\r\n\r\n\r\n        console.log(this.serverInfo);\r\n        this.checkServerIp()\r\n    }\r\n\r\n    setBook(books) {\r\n        this.book = {};\r\n        for (let i = 0 ; i < books.length ; i++)\r\n        {\r\n            const book = books[i];\r\n            const id = book['_id'];\r\n            this.book[id] = {...book};\r\n            this.book[id].claim = book.claim.replace(/_/g, \" \");\r\n        }\r\n        this.bookReady = true;\r\n        this.checkState();\r\n    }\r\n\r\n    setUser(users) {\r\n        this.user = {};\r\n        for (let i = 0 ; i < users.length ; i++)\r\n        {\r\n            const user = users[i];\r\n            const id = user.id;\r\n            this.user[id] = user;\r\n            this.user[id][\"rent\"] = 0;\r\n        }\r\n        this.userReady = true;\r\n        this.checkRent();\r\n    }\r\n\r\n    checkRent() {\r\n        if (!this.userReady || !this.rentReady)\r\n        {\r\n            console.log(\"Cannot check rent\");\r\n            return;\r\n        }\r\n//        console.log(this.rent);\r\n        for (let i = 0 ; i < this.rent.length ; i++)\r\n        {\r\n            const state = this.rent[i].state;\r\n\r\n//            console.log(state);\r\n            if (state !== \"1\" && state !== \"3\" && state !== 1 && state !== 3)\r\n                continue;\r\n\r\n            const userId = this.rent[i].user_id;\r\n//            console.log(this.rent[i]);\r\n//           console.log(userId);\r\n//           console.log(userId.length);\r\n            if (userId && userId.length > 0 && userId in this.user)\r\n            {\r\n                if (\"rent\" in this.user[userId])\r\n                    this.user[userId][\"rent\"] += 1;\r\n                else\r\n                    this.user[userId][\"rent\"] = 1;\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Invalid user\")\r\n                console.log(this.rent[i])\r\n            }\r\n        }\r\n//        console.log(this.user);\r\n    }\r\n\r\n    logIn(userInfo) {\r\n        console.log(\"Logged in: \" + userInfo['_id']);\r\n        this.logged = true;\r\n        this.userInfo = userInfo;\r\n        if (userInfo['level'] === \"2\" ||\r\n            userInfo['level'] === 2)\r\n            this.admin = true;\r\n        if (this.logCallback)\r\n            this.logCallback(true);\r\n    }\r\n\r\n    logOut() {\r\n        console.log(\"Logged out\");\r\n        this.logged = false;\r\n        this.admin = false;\r\n        this.userInfo = {};\r\n        if (this.logCallback)\r\n            this.logCallback(false);\r\n    }\r\n\r\n    async getRent(userId = undefined) {\r\n        let ret = [];\r\n        if (this.serverAvailable) {\r\n            const url = \"https://\" + this.serverInfo.localIp + \":\" +\r\n                this.serverInfo.port + \"/book\";\r\n            const param = {\"user\": userId};\r\n            const result = await this.requestGet(url, param);\r\n            console.log(result);\r\n            if (\"books\" in result.data.return)\r\n            {\r\n                // BARCODE, BOOKNAME, LENT_DATE, RETURN_DATE, STATS\r\n                // id, title, rentDate, retData,  stat\r\n                for (const entry of result.data.return.books)\r\n                {\r\n                    console.log(entry);\r\n                    const book = {\r\n                        'id': entry.BARCODE,\r\n                        'title': entry.BOOKNAME,\r\n                        'claim': entry.CLAIM,\r\n                        'claim_num': entry.CLAMENUM,\r\n                        'totalName': entry.TOTAL_NAME,\r\n                        'rentDate': entry.LENT_DATE,\r\n                        'retDate': entry.RETURN_DATE,\r\n                        'stat': entry.STATS,\r\n                        'extendCount': entry._EXTEND_COUNT\r\n                    };\r\n                    ret.push(book);\r\n                }\r\n//                ret = result.data.return.books;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Check \" + userId);\r\n            console.log(this.bookReady);\r\n            if (!this.bookReady)\r\n                return ret;\r\n    //        console.log(this.rent.length);\r\n            for (let i = 0 ; i < this.rent.length ; i++) {\r\n                const entry = this.rent[i];\r\n                if (userId !== undefined && entry.user_id !== userId)\r\n                    continue;\r\n    //            console.log(entry)\r\n                if (entry.state !== \"1\" && entry.state !== \"3\" && entry.state !== 1 && entry.state !== 3)\r\n                    continue;\r\n    //            console.log(entry);\r\n                const id = entry[\"book_id\"];\r\n                const book = this.book[id];\r\n//                console.log(book)\r\n                let retEntry = {}\r\n                retEntry[\"id\"] = book._id\r\n                retEntry[\"title\"] = book.title\r\n                retEntry['claim_num'] = book.claim_num\r\n                retEntry['totalName'] = book.series\r\n                retEntry[\"rentDate\"] = entry.rent_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"retDate\"] = entry.return_date.split(\" \")[0].replace(\"-\",\"/\",2).replace(\"-\", \"/\")\r\n                retEntry[\"claim\"] = book.claim\r\n                retEntry[\"user\"] = entry.user_id;\r\n                ret.push(retEntry)\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    async openDoc() {\r\n        try {\r\n            this.initialized = true;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.initialized;\r\n    }\r\n\r\n    setCallback(updateFunc)\r\n    {\r\n        console.log(\"Update function registered\");\r\n        this.callback = updateFunc;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","import config from \"./api/key\";\n\nconst NodeRSA = require('node-rsa');\n\n//const {SQSClient, SendMessageCommand} = require('@aws-sdk/client-sqs');\n\nconst prk = new NodeRSA(config[\"privateKey\"]);\n\n//require('dotenv').config()\n\nasync function awsSendMessage(sqs, params)\n{\n    try\n    {\n        const data = await sqs.sendMessage(params);\n        return data;\n    }\n    catch(error)\n    {\n        console.error('Error: ', error);\n    }\n}\n\n/*\nconst sqs = new SQS({\n    regions: process.env.REGION,\n    credentials: {\n        accessKeyId: process.env.AWS_KEY,\n        secretAccessKey: process.env.AWS_SECRET\n    }\n});\n\n(async () =>\n{\n    const sqs = new SQS({\n        regions: process.env.REGION,\n        credentials: {\n            accessKeyId: process.env.AWS_KEY,\n            secretAccessKey: process.env.AWS_SECRET\n        }\n    });\n\n    const params = {\n        MessageBody: JSON.stringify({'message':'Hello', 'from':'HelloWorld'}),\n        QueueUrl: process.env.QUEUE_URL\n    }\n    const response = await awsSendMessage(sqs, params);\n    console.log(response);\n})()\n*/\n\nclass Context {\n    constructor() {\n        console.log(\"Create Context\");\n\n        console.log(\"Cookies\");\n        const rawCookie = document.cookie;\n        this.cookie = rawCookie\n            .split(\";\")\n            .map(v => v.split(\"=\"))\n            .reduce((acc, v) => {\n                const key = v.shift().trim();\n                const value = v.join(\"=\").trim();\n                acc[decodeURIComponent(key)] = decodeURIComponent(value);\n                return acc;\n            }, {});\n    }\n\n    checkLogIn(user, passwordText) {\n        var matched = false;\n        var passwordTyped;\n        if (user && passwordText.length > 0) {\n            console.log(\"User data available\");\n            const emailDb = user[\"encrypted_email\"];\n            const phoneDb = user[\"encrypted_phone\"];\n\n            passwordTyped = prk.sign(passwordText, 'base64');\n            if (passwordText === emailDb ||\n                passwordText === phoneDb )\n            {\n                passwordTyped = passwordText;\n                matched = true;\n            }\n            else if (emailDb === passwordTyped)\n            {\n//                console.log(\"Email match\");\n                matched = true;\n            }\n            else\n            {\n                var numberString = \"\";\n                for (let i = 0 ; i < passwordText.length ; i++)\n                {\n                    if (!isNaN(passwordText[i]))\n                        numberString += passwordText[i];;\n                }\n                passwordTyped = prk.sign(numberString, 'base64');\n                if (passwordTyped === phoneDb)\n                {\n//                    console.log(\"Phone match\");\n                    matched = true;\n                }\n                else\n                {\n//                    console.log(\"Nothing matched\");\n                }\n            }\n\n//            console.log(\"toast available\");\n        }\n        if (matched)\n        {\n            const date = new Date();\n            const days=2;\n            date.setTime(date.getTime()+(days*24*60*60*1000));\n            const expireDate = date.toGMTString();\n            document.cookie = \"password=\" +  passwordTyped + \"; expires=\" + expireDate + \" ; SameSite=Lax ;\" ;\n        }\n        return matched\n    }\n}\n\nexport default Context;\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Dropdown.css'\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction DropDown(props) {\r\n\r\n    const [dropdown, setDropdown] = useState(false);\r\n\r\n    useEffect(\r\n        () => {\r\n            function close() {\r\n                console.log(\"Close\")\r\n                console.log(dropdown)\r\n                setDropdown(false);\r\n            };\r\n\r\n            if (props.doc.serverAvailable)\r\n            {\r\n                import(\"./DropdownServer.css\");\r\n            }\r\n\r\n            if (dropdown)\r\n            {\r\n                window.addEventListener(\"click\", close);\r\n            }\r\n\r\n            const menu = document.getElementById(\"dropdown-menu\");\r\n//            menu.hidden = !click;\r\n            if (!dropdown)\r\n            {\r\n               menu.classList.remove('is-show');\r\n            }\r\n            else\r\n            {\r\n               menu.classList.add('is-show');\r\n            }\r\n\r\n            return function removeListener() {\r\n                window.removeEventListener(\"click\", close);\r\n            }\r\n\r\n        }, [dropdown, props.doc.logged, props.doc.serverAvailable]\r\n    );\r\n\r\n    const toggleMenu = () => {\r\n        console.log(\"Click menu\")\r\n        setDropdown(!dropdown);\r\n        console.log(dropdown)\r\n    }\r\n\r\n    const logOut = () =>\r\n    {\r\n        props.doc.logOut();\r\n        document.cookie = \"user_id=\";\r\n        document.cookie = \"password=\";\r\n        document.cookie = \"autoLogin=false\";\r\n    }\r\n\r\n    return (<div>\r\n            <div className='menu' onClick={toggleMenu} >\r\n                <MenuIcon className=\"img\" fontSize=\"large\" sx={{ color: \"#ffffff\"}}/>\r\n            </div>\r\n            <div id='dropdown-menu' onClick={() => { setDropdown(false)}} className='dropdown-menu'>\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                    <div className='menu-items'>\r\n                        {props.doc.userInfo[\"_id\"] + \" : \" + props.doc.userInfo[\"name\"] + props.text.nameSuffix}\r\n                    </div>\r\n                    <hr className=\"hline\"/>\r\n                    </>\r\n                }\r\n                <Link className='menu-items' to=\"/\">\r\n                    {props.text.home}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/notice\">\r\n                    {props.text.notice}\r\n                </Link>\r\n                <Link className='menu-items' to=\"/search\">\r\n                    {props.text.bookSearch}\r\n                </Link>\r\n                {props.doc.serverAvailable &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOut\">\r\n                            {props.text.checkOut}\r\n                        </Link>\r\n                        <Link className='menu-items' to=\"/return\">\r\n                            {props.text.return}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\">\r\n                            {props.text.checkOutStatus}\r\n                        </Link>\r\n                    </>\r\n                }\r\n                {props.doc.admin &&\r\n                    <>\r\n                    <hr className=\"hline\"/>\r\n                    <Link className='menu-items' to=\"/userSearch\">\r\n                        {props.text.userSearch}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentalSituation\">\r\n                        {props.text.situation}\r\n                    </Link>\r\n                    <Link className='menu-items' to=\"/rentHistory\">\r\n                        {props.text.history}\r\n                    </Link>\r\n                    </>\r\n                }\r\n                {props.doc.serverAvailable && props.doc.admin &&\r\n                    <Link className='menu-items' to=\"/newMember\">\r\n                        {props.text.newMember}\r\n                    </Link>\r\n                }\r\n                {!props.doc.serverAvailable && props.doc.logged &&\r\n                    <>\r\n                        <hr className=\"hline\"/>\r\n                        <div className='menu-items' onClick={logOut}>\r\n                            {props.text.logOut}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {!props.doc.serverAvailable && !props.doc.logged &&\r\n                    <>\r\n                        <Link className='menu-items' to=\"/checkOutStatus\">\r\n                            {props.text.logIn}\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport \"./Navbar.css\";\r\nimport DropDown from \"./Dropdown\";\r\n\r\nfunction Navbar(props) {\r\n\r\nreturn (\r\n    <>\r\n        <div id=\"navbar\" className=\"navbar\">\r\n            <div className='title'>\r\n                {isMobile? (<h1>{props.text[\"titleShort\"]}</h1>) : (<h1>{props.text[\"titleLong\"]}</h1>)}\r\n            </div>\r\n            <DropDown text={props.text} doc={props.doc}/>\r\n        </div>\r\n    </>\r\n)\r\n}\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Notice from \"./pages/Notice\";\r\nimport Search from \"./pages/Search\";\r\nimport CheckOutStatus from \"./pages/CheckOutStatus\";\r\nimport CheckOut from \"./pages/CheckOut\";\r\nimport Return from \"./pages/Return\";\r\nimport UserSearch from \"./pages/UserSearch\";\r\nimport RentalSituation from \"./pages/RentalSituation\";\r\nimport RentHistory from \"./pages/RentHistory\";\r\nimport NewMember from \"./pages/NewMember\";\r\n//import Reader from \"./pages/Reader\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\nimport Context from \"./Context\";\r\nimport text from \"./api/text\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastProp, loadingId } from \"./Util\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport Navbar from \"./Navbar\";\r\nimport {SERVER_QUERY} from \"./api/query.js\";\r\nimport {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query.js\";\r\n//import {BOOK_QUERY, RENT_QUERY, USER_QUERY} from \"./api/query_test.js\";\r\n\r\nconst doc = new Doc();\r\nconst context = new Context();\r\n\r\nconst textString = {};\r\nlet logMsg = \"\"\r\nfunction App() {\r\n\r\n//    const [checkOutStr, setCheckOutStr] = useState(\"\");\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [logged, setLogged] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const { loading: rentLoading, error: rentError, data: rentData } = useQuery(RENT_QUERY);\r\n    const { loading: serverLoading, error: serverError, data: serverData } = useQuery(SERVER_QUERY);\r\n    const [loadBook, { loading: bookLoading, error: bookError, data: bookData }] = useLazyQuery(BOOK_QUERY);\r\n    const [loadUser, { data: userData }] = useLazyQuery(USER_QUERY, { \"variables\": { \"_id\": userId } });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            console.log(\"Platform: \");\r\n            console.log(navigator.platform);\r\n            logMsg = logMsg + \"<p>Initialize app</p>\";\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            const lang = navigator.languages;\r\n            console.log(lang);\r\n            let ts = {}\r\n            if (lang.length> 0 && (lang[0].toLowerCase().includes(\"kr\") || lang[0].toLowerCase().includes(\"ko\")))\r\n            {\r\n                ts = text.kr;\r\n            }\r\n            else\r\n            {\r\n                ts = text.en;\r\n            }\r\n            for (let key in ts)\r\n            {\r\n                textString[key] = ts[key];\r\n            }\r\n\r\n            await doc.updateIpAddr();\r\n\r\n            if (\"autoLogin\" in context.cookie &&  context.cookie.autoLogin === \"true\")\r\n            {\r\n                console.log(\"Auto Login: \" + context.cookie.user_id);\r\n                setUserId(context.cookie.user_id);\r\n                console.log(context.cookie.nothing);\r\n                loadUser();\r\n            }\r\n            setInitialized(true);\r\n        }\r\n        initialize();\r\n    }, [loadUser]);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"User data loaded\");\r\n            if (!userData)\r\n            {\r\n                return;\r\n            }\r\n\r\n//            console.log(\"Login check \" + context.cookie.password);\r\n            const user = userData.user[0]\r\n//            const user = userData.user_test\r\n//            console.log(user);\r\n            if (context.cookie.password && context.checkLogIn(user, context.cookie.password))\r\n            {\r\n                console.log(\"Login suceeded\");\r\n                doc.logIn(user);\r\n            }\r\n\r\n\r\n\r\n        }, [userData]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Rent Query Updated\");\r\n            logMsg = logMsg + \"<p>Rent Query Updated \" + rentLoading + \" \" + rentError + \"</p>\";\r\n            console.log(rentLoading);\r\n            console.log(\"Rent Error\");\r\n            console.log(rentError);\r\n            if (rentData)\r\n            {\r\n                console.log(\"Rent available\");\r\n                logMsg = logMsg + \"<p>Rent available</p>\"\r\n//                console.log(rentData.rent)\r\n                doc.setRent(rentData.rent)\r\n//                doc.setRent(rentData.rent_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [rentLoading, rentError, rentData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Book Query Updated\");\r\n            logMsg = logMsg + \"<p>Book Query Updated</p>\";\r\n            console.log(bookLoading)\r\n            console.log(bookError)\r\n            if (bookData)\r\n            {\r\n                console.log(\"Book available\")\r\n                logMsg = logMsg + \"<p>Book available</p>\";\r\n//                console.log(bookData.books)\r\n                doc.setBook(bookData.book)\r\n//                doc.setBook(bookData.book_tests)\r\n                if (doc.initialized)\r\n                    notifyInit()\r\n            }\r\n        }, [bookLoading, bookError, bookData]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log(\"Server Query Updated\");\r\n            logMsg = logMsg + \"<p>Server Query Updated</p>\";\r\n\r\n            console.log(serverData);\r\n            console.log(initialized);\r\n            if (!serverData || !initialized)\r\n                return\r\n\r\n            console.log(\"Server info available\")\r\n            logMsg = logMsg + \"<p>Server info available</p>\";\r\n            console.log(serverData)\r\n            doc.setServerInfo(serverData.serverInfo)\r\n\r\n            if (!doc.serverAvailable)\r\n            {\r\n                console.log(\"Server is not available. Load books from cloud DB\");\r\n                loadBook();\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.LOADING;\r\n                prop.autoClose = false;\r\n                prop.toastId = loadingId;\r\n                toast.loading(textString.loading, prop);\r\n                doc.setLogCallback(updateLog);\r\n            }\r\n        }, [serverLoading, serverError, serverData, loadBook, initialized]\r\n    );\r\n\r\n    function notifyInit()\r\n    {\r\n        const prop = toastProp;\r\n        prop.type = toast.TYPE.SUCCESS;\r\n        prop.render = textString.succeededToOpen;\r\n        prop.autoClose = 3000;\r\n        prop.toastId = \"\";\r\n        toast.info(textString.succeededToOpen, prop);\r\n    }\r\n\r\n    function updateLog(logged) {\r\n        console.log(\"==== Update logging state \" + doc.logged);\r\n//        console.log(doc.userInfo);\r\n        setLogged(doc.logged);\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <div>\r\n                <ToastContainer\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    limit={10}\r\n                />\r\n            </div>\r\n            <Navbar doc={doc} text={textString}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home doc={doc} text={textString}/>} />\r\n                <Route path=\"/notice/:id?\" element={<Notice doc={doc} text={textString} />} />\r\n                <Route path=\"/search/:id?\" element={<Search doc={doc} text={textString}/>} />\r\n                <Route path=\"/checkOutStatus\" element={<CheckOutStatus context={context} doc={doc} text={textString} logged={logged}/>} />\r\n                <Route path=\"/userSearch/:id?\" element={<UserSearch context={context} doc={doc} text={textString} />} />\r\n                <Route path=\"/checkOut/:id?\" element={<CheckOut context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/return\" element={<Return context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentalSituation\" element={<RentalSituation context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/rentHistory\" element={<RentHistory context={context} doc={doc} text={textString}/>} />\r\n                <Route path=\"/newMember\" element={<NewMember context={context} doc={doc} text={textString}/>} />\r\n            </Routes>\r\n\r\n            <h3>\r\n                v {process.env.REACT_APP_VERSION}\r\n            </h3>\r\n        </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n//import * as Realm from \"realm-web\";\r\nimport {\r\n    ApolloClient,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    InMemoryCache,\r\n} from \"@apollo/client\";\r\n\r\n//import { ApolloClient, ApolloProvider, InMemoryCache, HttpLink } from '@apollo/client';\r\n\r\nconst graphqlUri = `https://hkmcc-library.hasura.app/v1/graphql`;\r\nconst authToken=\"bkkZk6R6B9zITCmVyVDCtjDLWURfW4lC0ye04GP4UWN77ASpl69W6bk4BvyjN9ZH\";\r\n\r\n//            Authorization: `Bearer ${authToken}`,\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        headers: {\r\n            'x-hasura-admin-secret': authToken\r\n        }\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\n/*\r\nconst APP_ID = 'data-xaque';\r\nconst graphqlUri = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\nconst app = new Realm.App(APP_ID);\r\n\r\n// Gets a valid Realm user access token to authenticate requests\r\nasync function getValidAccessToken() {\r\n    // Guarantee that there's a logged in user with a valid access token\r\n    if (!app.currentUser) {\r\n        // If no user is logged in, log in an anonymous user. The logged in user will have a valid\r\n        // access token.\r\n        await app.logIn(Realm.Credentials.anonymous());\r\n//        await app.logIn(apiKey);\r\n    } else {\r\n        // An already logged in user's access token might be stale. Tokens must be refreshed after\r\n        // 30 minutes. To guarantee that the token is valid, we refresh the user's access token.\r\n        await app.currentUser.refreshAccessToken();\r\n    }\r\n//    console.log(\"AccessToken: [\" + app.currentUser.accessToken + \"]\");\r\n\r\n    return app.currentUser.accessToken;\r\n}\r\n\r\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({\r\n        uri: graphqlUri,\r\n        // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\r\n        // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\r\n        // access token before sending the request.\r\n        fetch: async (uri, options) => {\r\n            const accessToken = await getValidAccessToken();\r\n            options.headers.Authorization = `Bearer ${accessToken}`;\r\n            return fetch(uri, options);\r\n        },\r\n    }),\r\n    cache: new InMemoryCache(),\r\n});\r\n*/\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}